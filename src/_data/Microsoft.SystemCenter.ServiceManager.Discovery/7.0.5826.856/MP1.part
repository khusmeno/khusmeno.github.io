<ManagementPack xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="1.0"><Manifest><Identity><ID>Microsoft.SystemCenter.ServiceManager.Discovery</ID><Version>7.0.5826.856</Version></Identity><Name>Microsoft.SystemCenter.ServiceManager.Discovery</Name><References><Reference Alias="Windows"><ID>Microsoft.Windows.Library</ID><Version>6.1.7221.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="System"><ID>System.Library</ID><Version>6.1.7221.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="SM"><ID>Microsoft.SystemCenter.ServiceManager.Library</ID><Version>7.0.5826.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference></References></Manifest><Monitoring><Discoveries><Discovery ID="Microsoft.SystemCenter.ServiceManager.SmManagementServer.Discovery" Enabled="true"
Target="Windows!Microsoft.Windows.Server.Computer" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer" /></DiscoveryTypes><DataSource ID="SmManagementServerDiscoveryDataSource" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider"><ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><RegistryAttributeDefinitions><RegistryAttributeDefinition><AttributeName>SmManagementServerExists</AttributeName><Path>SOFTWARE\Microsoft\System Center\2010\Service Manager\Setup</Path><PathType>0</PathType><AttributeType>0</AttributeType></RegistryAttributeDefinition><RegistryAttributeDefinition><AttributeName>SmSdkServiceType</AttributeName><Path>SOFTWARE\Microsoft\System Center\2010\Common\SDK Service\SDK Service
Type</Path><PathType>1</PathType><AttributeType>1</AttributeType></RegistryAttributeDefinition><RegistryAttributeDefinition><AttributeName>SmServerManagementGroups</AttributeName><Path>SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Server Management
Groups</Path><PathType>0</PathType><AttributeType>0</AttributeType></RegistryAttributeDefinition></RegistryAttributeDefinitions><Frequency>86400</Frequency><ClassId>$MPElement[Name="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer"]$</ClassId><InstanceSettings><Settings><Setting><Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value></Setting><Setting><Name>$MPElement[Name="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer"]/ServerName$</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Value></Setting><Setting><Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value></Setting></Settings></InstanceSettings><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery
Type="String">Values/SmManagementServerExists</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">true</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Values/SmSdkServiceType</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">1</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Values/SmServerManagementGroups</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">true</Value></ValueExpression></SimpleExpression></Expression></And></Expression></DataSource></Discovery><Discovery ID="Microsoft.SystemCenter.ServiceManager.SmManagementServerProperties.Discovery" Enabled="true" Target="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer" ConfirmDelivery="false" Remotable="true"
Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer" /></DiscoveryTypes><DataSource ID="DS" TypeID="SM!Microsoft.ServiceManager.OleDb.TimedScript.DiscoveryProvider"><IntervalSeconds>86400</IntervalSeconds><SyncTime>01:00</SyncTime><ConnectionString>Provider=SQLOLEDB;Integrated Security=SSPI</ConnectionString><Query>select CONVERT(nvarchar(4000),B.Name) as ServerName from ScopedInstanceTargetClass SCT inner join ManagedType MT on MT.ManagedTypeId = SCT.ManagedTypeId inner join BaseManagedEntity B on B.BaseManagedEntityId = SCT.ScopedInstanceId where MT.TypeName ='Microsoft.SystemCenter.WorkflowTarget'</Query><GetValue>true</GetValue><IncludeOriginalItem>true</IncludeOriginalItem><OneRowPerItem>false</OneRowPerItem><DatabaseNameRegLocation>SOFTWARE\Microsoft\System Center\2010\Common\Database\DatabaseName</DatabaseNameRegLocation><DatabaseServerNameRegLocation>SOFTWARE\Microsoft\System
Center\2010\Common\Database\DatabaseServerName</DatabaseServerNameRegLocation><ScriptName>ManagementServerDiscovery.js</ScriptName><Arguments>$MPElement$ $Target/Id$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$ $Data/Columns[1]/Column[1]$</Arguments><ScriptBody>  
  
					//Copyright (c) Microsoft Corporation. All rights reserved.
					//*************************************************************************
					// $ScriptName: ManagementServerDiscovery $
					//
					// Purpose - Populate properties of SM Management Server
					//
					// Parameters -  0 - discovery id
					//               1 - Target managed entity id
					//               2 - Host Computer Principal Name
					//               3 - Name of server running workflows
					//*************************************************************************
					  var oAPI = new ActiveXObject("Mom.ScriptAPI");
					  var sourceId = WScript.Arguments(0);
					  var managedEntityId = WScript.Arguments(1);
					  var hostCompPrincipalName = WScript.Arguments(2);
					  var serverRunningWorkflows = WScript.Arguments(3);
					  var isRunningWorkflows;
					  main();
					  function main()
					  {
					  var WshShell = WScript.CreateObject("WScript.Shell");
				
					  // Creating discovery data
					  var discoveryData = oAPI.CreateDiscoveryData(0, sourceId, managedEntityId);
					  // Get management group name from registry
					  HKLM = 0x80000002;
					  sRegPath = "SOFTWARE\\Microsoft\\Microsoft Operations Manager\\3.0\\Server Management Groups";
					  oLoc = new ActiveXObject("WbemScripting.SWbemLocator");
					  oSvc = oLoc.ConnectServer(null, "root\\default");
					  oReg = oSvc.Get("StdRegProv");
					  oMethod = oReg.Methods_.Item("EnumKey");
					  oInParam = oMethod.InParameters.SpawnInstance_();
					  oInParam.hDefKey = HKLM;
					  oInParam.sSubKeyName = sRegPath;
					  oOutParam = oReg.ExecMethod_(oMethod.Name, oInParam);
					  // Array of all keys under ServerManagementGroups
					  aNames = oOutParam.sNames.toArray();
					  var managementGroupName = aNames[0];
					  // Get SM DbHost Name from registry
					  var smDbHostName = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\System Center\\2010\\Common\\Database\\DatabaseServerName");
					  var smDbName = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\System Center\\2010\\Common\\Database\\DatabaseName");
					  // Instantiate Management Server Class
					  var oMgtServer = discoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer']$");
					  oMgtServer.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.ManagementServer']/ManagementGroupName$", managementGroupName);
					  oMgtServer.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer']/SmDbHostName$", smDbHostName);
					  oMgtServer.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer']/SMDbName$", smDbName);
					  oMgtServer.AddProperty("$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$",hostCompPrincipalName);
					  var compareValue = hostCompPrincipalName.toLowerCase().localeCompare(serverRunningWorkflows.toLowerCase());
					  if(compareValue == 0)
					  {
					  isRunningWorkflows = true;
					  }
					  else
					  {
					  isRunningWorkflows = false;
					  }
					  oMgtServer.AddProperty("$MPElement[Name="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer"]/isRunningWorkflows$",isRunningWorkflows);
					  discoveryData.AddInstance(oMgtServer);
					
					  oAPI.Return(discoveryData);
                      
					  }
					  
</ScriptBody><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery><Discovery ID="Microsoft.SystemCenter.ServiceManager.DwManagementServer.Discovery" Enabled="true" Target="Windows!Microsoft.Windows.Server.Computer" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer" /></DiscoveryTypes><DataSource ID="DwManagementServerDiscoveryDataSource" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider"><ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><RegistryAttributeDefinitions><RegistryAttributeDefinition><AttributeName>DwManagementServerExists</AttributeName><Path>SOFTWARE\Microsoft\System Center\2010\Service
Manager\Setup</Path><PathType>0</PathType><AttributeType>0</AttributeType></RegistryAttributeDefinition><RegistryAttributeDefinition><AttributeName>DwSdkServiceType</AttributeName><Path>SOFTWARE\Microsoft\System Center\2010\Common\SDK Service\SDK Service Type</Path><PathType>1</PathType><AttributeType>1</AttributeType></RegistryAttributeDefinition><RegistryAttributeDefinition><AttributeName>DwServerManagementGroups</AttributeName><Path>SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Server Management
Groups</Path><PathType>0</PathType><AttributeType>0</AttributeType></RegistryAttributeDefinition></RegistryAttributeDefinitions><Frequency>86400</Frequency><ClassId>$MPElement[Name="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer"]$</ClassId><InstanceSettings><Settings><Setting><Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value></Setting><Setting><Name>$MPElement[Name="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer"]/ServerName$</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Value></Setting><Setting><Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value></Setting></Settings></InstanceSettings><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery
Type="String">Values/DwManagementServerExists</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">true</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Values/DwSdkServiceType</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">2</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Values/DwServerManagementGroups</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">true</Value></ValueExpression></SimpleExpression></Expression></And></Expression></DataSource></Discovery><Discovery ID="Microsoft.SystemCenter.ServiceManager.DwManagementServerProperties.Discovery" Enabled="true" Target="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer" ConfirmDelivery="false" Remotable="true"
Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer" /></DiscoveryTypes><DataSource ID="DS" RunAs="SM!Microsoft.SystemCenter.ServiceManager.DatabaseWriteActionAccount" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider"><IntervalSeconds>86400</IntervalSeconds><SyncTime>01:00</SyncTime><ScriptName>DwMgtServerPropDiscovery.vbs</ScriptName><Arguments>$MPElement$ $Target/Id$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Arguments><ScriptBody>  
 
                    
					Option Explicit
					SetLocale("en-us")
					Dim WSHShell,sourceId,managedEntityId,oAPI,oArgs,strKeyPath,principalName
					Set WSHShell = CreateObject("WScript.Shell")
                  
					Set oAPI = CreateObject("MOM.ScriptAPI")
					Set oArgs = WScript.Arguments
					sourceId = oArgs(0)
					managedEntityId = oArgs(1)
					principalName = oArgs(2)
					
					' Fetching Data Warehouse Management Group using WMI
					Dim oLoc,oSvc, oReg,E,i
					Dim sNames()
					Dim aTypes()
					Const HKLM = &amp;H80000002 
					Const RegPath = "SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Server Management Groups"            
					Set oLoc = CreateObject("WbemScripting.SWbemLocator")
					Set oSvc = oLoc.ConnectServer("", "root\default")
					
					' Obtains a registry provider object
					Set oReg = oSvc.Get("StdRegProv")            
					    
					' E = oReg.EnumValues(HKLM, RegPath, sNames, aTypes)
					E = oReg.EnumKey(HKLM, RegPath, sNames, aTypes)
					Dim dwMgName
                    dwMgName = sNames(0)
					
					Dim oDiscoveryData,oMgtServerInst,oMgGroupInst,oRelMgGroupContainsMgServer,oSmAppInst,oRelSmContainsMg
					Set oDiscoveryData = oAPI.CreateDiscoveryData(0, sourceId, managedEntityId)
				    
					' Instantiate Data Warehouse Management Server instance 
					Set oMgtServerInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']$")
					Call oMgtServerInst.AddProperty("$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$", principalName)
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.ManagementServer']/ManagementGroupName$", dwMgName)
					
					
					Dim dataMartServername,dataMartDbName,repositoryServerName,repositoryDbName,stagingServerName,stagingDbName
					dataMartServername =WSHShell.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\System Center\2010\Common\Database\DataMartSQLInstance")
					dataMartDbName = WSHShell.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\System Center\2010\Common\Database\DataMartDatabaseName")
					repositoryServerName = WSHShell.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\System Center\2010\Common\Database\RepositorySQLInstance")
					repositoryDbName = WSHShell.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\System Center\2010\Common\Database\RepositoryDatabaseName")
					stagingServerName = WSHShell.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\System Center\2010\Common\Database\DatabaseServerName")
					stagingDbName = WSHShell.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\System Center\2010\Common\Database\DatabaseName")
					
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/DataMartDbName$", dataMartDbName)
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/DataMartDbHostName$", dataMartServername)
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/RepositoryDbName$", repositoryDbName)
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/RepositoryDbHostName$", repositoryServerName)
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/StagingDbName$", stagingDbName)
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/StagingDbHostName$", stagingServerName)
					
					Dim  connectionString
					connectionString = "Provider=sqloledb;Server=" &amp; _
					stagingServerName &amp; ";" &amp; _
					"Integrated Security=SSPI;Initial Catalog=" &amp; stagingDbName
					Dim cnADOConnection
					Set cnADOConnection = CreateObject("ADODB.Connection")
						  
					cnADOConnection.Open connectionString
					cnADOConnection.CommandTimeout = 300
						
					Dim oResults,oQuery,sourceName
					oQuery = "select SourceName from etl.source where SourceTypeId ='2'"
					oResults = CreateObject("ADODB.Recordset")
					Set oResults = cnADOConnection.Execute(oQuery)
					
					If oResults.State &lt;&gt; 0 Then
						Do Until oResults.EOF
							If oResults.Fields("SourceName") &lt;&gt; dwMgName Then
							sourceName = sourceName &amp; oResults.Fields("SourceName")&amp; ","
							End If
						oResults.MoveNext
						Loop
					End If
					If oResults.State &lt;&gt; 0 Then
					oResults.Close
					End If
					cnADOConnection.Close
					
					if(isEmpty(sourceName)) Then
					sourceName = ""
                    Else
					sourceName = Left(sourceName,(Len(sourceName)-1))
					End If			
					
					Call oMgtServerInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']/SmManagementGroups$", sourceName)
					Call oDiscoveryData.AddInstance(oMgtServerInst)
					
				
					' Submit the discovery data to the Operations Manager database.
					Call oAPI.Return(oDiscoveryData)
					
					
					
  
  </ScriptBody><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery><Discovery ID="Microsoft.SystemCenter.ServiceManager.SmManagementGroup.Discovery" Enabled="true" Target="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer" /><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmManagementGroup" /><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.Application" /><DiscoveryRelationship TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmContainsMgGroups" /><DiscoveryRelationship TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmMgtGroupContainsSmMgtServer" /></DiscoveryTypes><DataSource ID="DS"
TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider"><IntervalSeconds>86400</IntervalSeconds><SyncTime>02:00</SyncTime><ScriptName>SmManagementGroupDiscovery.js</ScriptName><Arguments>$MPElement$ $Target/Id$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Arguments><ScriptBody>  
					  var oAPI = new ActiveXObject("Mom.ScriptAPI");
					  var sourceId = WScript.Arguments(0);
					  var managedEntityId = WScript.Arguments(1);
					  var hostCompPrincipalName = WScript.Arguments(2);
					
					  main();
					  function main()
					  {
					  var WshShell = WScript.CreateObject("WScript.Shell");
					
					  
					 
					  
					  // Creating discovery data
					  var discoveryData = oAPI.CreateDiscoveryData(0, sourceId, managedEntityId);
					  // Get management group name from registry
					  HKLM = 0x80000002;
					  sRegPath = "SOFTWARE\\Microsoft\\Microsoft Operations Manager\\3.0\\Server Management Groups";
					  oLoc = new ActiveXObject("WbemScripting.SWbemLocator");
					  oSvc = oLoc.ConnectServer(null, "root\\default");
					  oReg = oSvc.Get("StdRegProv");
					  oMethod = oReg.Methods_.Item("EnumKey");
					  oInParam = oMethod.InParameters.SpawnInstance_();
					  oInParam.hDefKey = HKLM;
					  oInParam.sSubKeyName = sRegPath;
					  oOutParam = oReg.ExecMethod_(oMethod.Name, oInParam);
					  // Array of all keys under ServerManagementGroups
					  aNames = oOutParam.sNames.toArray();
					  var managementGroupName = aNames[0];
					  
					  
					  // Instantiate Management Server Class
					  var oMgtServer = discoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmManagementServer']$");
					  oMgtServer.AddProperty("$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$",hostCompPrincipalName);
                      discoveryData.AddInstance(oMgtServer);
					  
					 //Instantiate ManagementGroup Class
					  var oMgtGroup = discoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmManagementGroup']$");
					  oMgtGroup.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.ManagementGroup']/GroupName$", managementGroupName);
					  oMgtGroup.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", managementGroupName);
					  discoveryData.AddInstance(oMgtGroup);
					  // Instantiate SM Management Group Contains SM Management Server Relationship
					  var oMgtGroupContainsMgtServer = discoveryData.CreateRelationshipInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmMgtGroupContainsSmMgtServer']$");
					  oMgtGroupContainsMgtServer.Source = oMgtGroup;
					  oMgtGroupContainsMgtServer.Target = oMgtServer;
					  discoveryData.AddInstance(oMgtGroupContainsMgtServer);
					  // Instantiate Service Manager Class
					  var oSmApp = discoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.Application']$");
					  oSmApp.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.Application']/InstanceName$", "Microsoft System Center Service Manager");
					  oSmApp.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", "Service Manager");
					   
					  discoveryData.AddInstance(oSmApp);
					  // Instantiate Service Manager contains Management Groups Relationship
					  var oSmContainsMg = discoveryData.CreateRelationshipInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmContainsMgGroups']$");
					  oSmContainsMg.Source = oSmApp;
					  oSmContainsMg.Target = oMgtGroup;
					  
					  discoveryData.AddInstance(oSmContainsMg);
					
					  oAPI.Return(discoveryData);
					  }
  
  </ScriptBody><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery><Discovery ID="Microsoft.SystemCenter.ServiceManager.DwManagementGroup.Discovery" Enabled="true" Target="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer" /><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.DwManagementGroup" /><DiscoveryClass TypeID="SM!Microsoft.SystemCenter.ServiceManager.Application" /><DiscoveryRelationship TypeID="SM!Microsoft.SystemCenter.ServiceManager.DwMgtGroupContainsDwMgtServer" /><DiscoveryRelationship TypeID="SM!Microsoft.SystemCenter.ServiceManager.SmContainsMgGroups" /></DiscoveryTypes><DataSource ID="DS"
TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider"><IntervalSeconds>86400</IntervalSeconds><SyncTime>02:00</SyncTime><ScriptName>DwManagementGroupDiscovery.vbs</ScriptName><Arguments>$MPElement$ $Target/Id$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Arguments><ScriptBody>  
					  Option Explicit
					SetLocale("en-us")
					Dim WSHShell,sourceId,managedEntityId,oAPI,oArgs,strKeyPath,principalName
					Set WSHShell = CreateObject("WScript.Shell")
				
					Set oAPI = CreateObject("MOM.ScriptAPI")
					Set oArgs = WScript.Arguments
					sourceId = oArgs(0)
					managedEntityId = oArgs(1)
					principalName = oArgs(2)
					
					' Fetching Data Warehouse Management Group using WMI
					Dim oLoc,oSvc, oReg,E,i
					Dim sNames()
					Dim aTypes()
					Const HKLM = &amp;H80000002 
					Const RegPath = "SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Server Management Groups"            
					Set oLoc = CreateObject("WbemScripting.SWbemLocator")
					Set oSvc = oLoc.ConnectServer("", "root\default")
					
					' Obtains a registry provider object
					Set oReg = oSvc.Get("StdRegProv")            
					    
					' E = oReg.EnumValues(HKLM, RegPath, sNames, aTypes)
					E = oReg.EnumKey(HKLM, RegPath, sNames, aTypes)
					Dim dwMgName
                    dwMgName = sNames(0)
					
					Dim oDiscoveryData,oMgtServerInst,oMgGroupInst,oRelMgGroupContainsMgServer,oSmAppInst,oRelSmContainsMg
					Set oDiscoveryData = oAPI.CreateDiscoveryData(0, sourceId, managedEntityId)
				    
					' Instantiate Data Warehouse Management Server instance 
					Set oMgtServerInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementServer']$")
					Call oMgtServerInst.AddProperty("$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$", principalName)
					
					Call oDiscoveryData.AddInstance(oMgtServerInst)
					
					' Management Group Creation
					
					Set oMgGroupInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwManagementGroup']$")
					Call oMgGroupInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.ManagementGroup']/GroupName$", dwMgName)
					Call oMgGroupInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$",dwMgName)
					Call oDiscoveryData.AddInstance(oMgtServerInst)
					
					' Management Group Contains Managment Server Relationship Creation
					
					Set oRelMgGroupContainsMgServer = oDiscoveryData.CreateRelationshipInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.DwMgtGroupContainsDwMgtServer']$")
					oRelMgGroupContainsMgServer.Source = oMgGroupInst
					oRelMgGroupContainsMgServer.Target = oMgtServerInst
					Call oDiscoveryData.AddInstance(oRelMgGroupContainsMgServer)
					
					' Instantiate SM class
					
					Set oSmAppInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.Application']$")
					Call oSmAppInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", "Service Manager")
					Call oSmAppInst.AddProperty("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.Application']/InstanceName$", "Microsoft System Center Service Manager")
					Call oDiscoveryData.AddInstance(oSmAppInst)
					
					' SM contains Management Groups 
					
					Set oRelSmContainsMg = oDiscoveryData.CreateRelationshipInstance("$MPElement[Name='SM!Microsoft.SystemCenter.ServiceManager.SmContainsMgGroups']$")
					oRelSmContainsMg.Source = oSmAppInst
					oRelSmContainsMg.Target = oMgGroupInst
					Call oDiscoveryData.AddInstance(oRelSmContainsMg)
				
					' Submit the discovery data to the Operations Manager database.
					Call oAPI.Return(oDiscoveryData)
  
  </ScriptBody><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery></Discoveries></Monitoring><LanguagePacks><LanguagePack ID="ENU" IsDefault="true"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ServiceManager.Discovery"><Name>Microsoft System Center Service Manager Discovery</Name><Description>Service Manager Discovery management pack.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ServiceManager.DwManagementServer.Discovery"><Name>Data Warehouse Management Server Discovery</Name><Description>Discovers Microsoft System Center Data Warehouse Management Server.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ServiceManager.DwManagementServerProperties.Discovery"><Name>Microsoft System Center Data Warehouse Management Server Properties Discovery</Name><Description>Discovers properties of Microsoft System Center Data Warehouse Management Server</Description></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.ServiceManager.SmManagementServer.Discovery"><Name>Service Manager Management Server Discovery</Name><Description>Discovers Microsoft System Center Service Manager.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ServiceManager.SmManagementServerProperties.Discovery"><Name>Service Manager Management Server Properties Discovery</Name><Description>Discovers properties of Microsoft System Center Service Manager.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ServiceManager.SmManagementGroup.Discovery"><Name>Service Manager Roll-up Discovery</Name><Description>Discovers properties of Service Manager Management Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ServiceManager.DwManagementGroup.Discovery"><Name>Service Manager Data Warehouse Roll-up Discovery</Name><Description>Discovers properties of Data Warehouse Management
Group</Description></DisplayString></DisplayStrings><KnowledgeArticles><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.Discovery" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Discovery Management pack for System Center Service Manager.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.SmManagementServer.Discovery" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Disabling this discovery will prevent Service Manager from being discovered.Discovery runs once every day, however it can be changed by overriding the frequency.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.DwManagementServer.Discovery"
Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Disabling this discovery will prevent Service Manager DataWarehouse Management Server from being discovered.Discovery runs once every day, however it can be changed by overriding the frequency.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.SmManagementServerProperties.Discovery" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This discovery populates Service Manager properties.Discovery runs immedietely after being imported followed by another run at 13:00, the sync time. Following this it runs at a 24 hour interval. Sync time,frequency as well as timeout can be changed.Changing arguments is not
recommended.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.DwManagementServerProperties.Discovery" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This discovery populates Service Manager DataWarehouse properties.Discovery runs immedietely after being imported followed by another run at 13:00, the sync time. Following this it runs at a 24 hour interval. Sync time, frequency as well as the timeout can be changed.Changing arguments is not recommended.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.SmManagementGroup.Discovery" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Disabling this discovery will prevent the instances of Service Manager from
being populated in the diagram view.Discovery runs immedietely after being imported followed by another run at 14:00, time to do initial discovery. Following this it runs at a 24 hour interval. Initial discovery time,Interval Seconds as well as timeout can be changed.Changing arguments is not recommended.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.ServiceManager.DwManagementGroup.Discovery" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Disabling this discovery will prevent the instances Service Manager DataWarehouse from being populated in the diagram view.Discovery runs immedietely after being imported followed by another run at 14:00, time to do initial discovery. Following this it runs at a 24 hour interval. Initial discovery time,Interval Seconds as well as timeout can be changed.Changing arguments is not
recommended.</maml:para></maml:section></MamlContent></KnowledgeArticle></KnowledgeArticles></LanguagePack></LanguagePacks></ManagementPack>
