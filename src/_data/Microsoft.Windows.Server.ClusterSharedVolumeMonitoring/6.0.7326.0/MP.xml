<ManagementPack xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="1.0"><Manifest><Identity><ID>Microsoft.Windows.Server.ClusterSharedVolumeMonitoring</ID><Version>6.0.7326.0</Version></Identity><Name>Windows Server Shared Volume Monitoring MP</Name><References><Reference Alias="SCDW"><ID>Microsoft.SystemCenter.DataWarehouse.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="SCLibrary"><ID>Microsoft.SystemCenter.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="Cluster"><ID>Microsoft.Windows.Cluster.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="Windows"><ID>Microsoft.Windows.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="SystemHealth"><ID>System.Health.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="System"><ID>System.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="SystemPerf"><ID>System.Performance.Library</ID><Version>6.0.5000.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="WindowsServer"><ID>Microsoft.Windows.Server.Library</ID><Version>10.0.7.17</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference></References></Manifest><TypeDefinitions><EntityTypes><ClassTypes><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.Base" Accessibility="Public" Abstract="true" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false"><Property ID="ClusterName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/></ClassType><ClassType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" Accessibility="Public" Abstract="true" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false"><Property ID="ClusterResourceName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="ClusterDiskName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionFileSystem" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionSize" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="ClusterName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="VolumeLabel" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/></ClassType><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" Accessibility="Public" Abstract="true" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false"><Property ID="ClusterSharedVolumeName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="FriendlyVolumeName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionFileSystem" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionSize" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="ClusterName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="VolumeLabel" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/></ClassType><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.NewOS" Accessibility="Public" Abstract="false" Base="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.Base" Hosted="true" Singleton="false" Extension="false"/><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.LegacyOS" Accessibility="Public" Abstract="false" Base="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.Base" Hosted="true" Singleton="false" Extension="false"/><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.NewOS" Accessibility="Public" Abstract="false" Base="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" Hosted="true" Singleton="false" Extension="false"/><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.LegacyOS" Accessibility="Public" Abstract="false" Base="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" Hosted="true" Singleton="false" Extension="false"/><ClassType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.NewOS" Accessibility="Public" Abstract="false" Base="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" Hosted="true" Singleton="false" Extension="false"/><ClassType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.LegacyOS" Accessibility="Public" Abstract="false" Base="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" Hosted="true" Singleton="false" Extension="false"/><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false"><Property ID="ClusterName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/></ClassType><ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false"><Property ID="ClusterSharedVolumeName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="FriendlyVolumeName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionFileSystem" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionSize" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="ClusterName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="VolumeLabel" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/></ClassType><ClassType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false"><Property ID="ClusterResourceName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="ClusterDiskName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionFileSystem" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="PartitionSize" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="ClusterName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/><Property ID="VolumeLabel" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/></ClassType></ClassTypes><RelationshipTypes><RelationshipType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterBase" Accessibility="Internal" Abstract="false" Base="System!System.Hosting"><Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Cluster!Microsoft.Windows.Cluster.VirtualServer"/><Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.Base"/></RelationshipType><RelationshipType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterSharedVolume.Base" Accessibility="Internal" Abstract="false" Base="System!System.Hosting"><Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Cluster!Microsoft.Windows.Cluster.VirtualServer"/><Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base"/></RelationshipType><RelationshipType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterDisk.Base" Accessibility="Internal" Abstract="false" Base="System!System.Hosting"><Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Cluster!Microsoft.Windows.Cluster.VirtualServer"/><Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base"/></RelationshipType><RelationshipType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterSharedVolume" Accessibility="Internal" Abstract="false" Base="System!System.Hosting"><Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Cluster!Microsoft.Windows.Cluster.VirtualServer"/><Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"/></RelationshipType><RelationshipType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterDisk" Accessibility="Internal" Abstract="false" Base="System!System.Hosting"><Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Cluster!Microsoft.Windows.Cluster.VirtualServer"/><Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"/></RelationshipType><RelationshipType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.Cluster" Accessibility="Internal" Abstract="false" Base="System!System.Hosting"><Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Cluster!Microsoft.Windows.Cluster.VirtualServer"/><Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster"/></RelationshipType></RelationshipTypes></EntityTypes><ModuleTypes><DataSourceModuleType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:int"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="MPElementID" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetID" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:int"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><DataSource ID="Scheduler" TypeID="System!System.Discovery.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Seconds">$Config/IntervalSeconds$</Interval></SimpleReccuringSchedule><ExcludeDates/></Scheduler></DataSource><ProbeAction ID="VbProbe" TypeID="Windows!Microsoft.Windows.ScriptDiscoveryProbe"><ScriptName>Microsoft.Windows.Server.CSV.DiscoverClusterName.vbs</ScriptName><Arguments>$Config/LogSuccessEvent$ "$Config/ScriptGroupId$" "$Config/MPElementID$" "$Config/TargetID$" "$Config/TargetComputer$"</Arguments><ScriptBody>Option Explicit
SetLocale("en-us")

Const SCRIPT_VERSION = "1.06"
Const LOG_SUCCESS_EVENT_PARAMETER_NAME = "LogSuccessEvent"
Const MP_ELEMENT_PARAMETER_NAME = "MP Element"
Const MANAGED_ENTITY_ID_PARAMETER_NAME = "Managed Entity"
Const TARGET_COMPUTER_PARAMETER_NAME = "Target Computer"

'WMI constants
Const CIMV2_WMI_NAMESPACE = "root\cimv2"
Const WMI_MSCLUSTER_NAMESPACE = "root\MSCluster"
Const WMI_MSCLUSTER_CLUSTER_CLASS = "MSCluster_Cluster"

Const WIN_SRV_2008_Version   = 6
Const WIN_SRV_2012R2_BUILD_NUMBER = 9600


'Event constants
Const EVENT_TYPE_SUCCESS = 0
Const EVENT_TYPE_ERROR = 1
Const EVENT_TYPE_WARNING = 2
Const EVENT_TYPE_INFORMATION = 4

Const EVENT_ID_SUCCESS = 1000           'Use IDs in the range 1 - 1000
Const EVENT_ID_SCRIPTERROR = 999        'Then you can use eventcreate.exe to test the MP



Dim mblnLogSuccessEvent 'As Boolean
Dim mstrIdentifier 'As String

Call Main

'*********************************************************************************************
'   PROCEDURE:      Main
'   DESCRIPTION:    Reads the script parameters, gets the cluster name and
'                   discovers the containment relationship between a cluster and
'                   the targeted cluster virtual server.
'   PARAMETERS:     void
'*********************************************************************************************
Private Sub Main()

    ' Targeted at Microsoft.Windows.Cluster.VirtualServer (based on Microsoft.Windows.Server.Computer)
    
    Dim strSourceID 'As String  '= oArgs(4). strSourceId is the GUID of the discovery object that runs the script (MPElement).
    Dim strManagedEntityId 'As String  '= oArgs(5) - strManagedEntityId is the GUID of the computer class that is targeted by the script (Target/Id).
    Dim strTargetComputer 'As String  '= oArgs(6)
    Dim objMomScriptAPI 'As MOM.ScriptAPI
    Dim objDiscoveryData 'As DiscoveryData
    Dim blnSuccess 'As Boolean
    Dim strErrorMessage
    Dim bIsOsSupported

    bIsOsSupported = False 

    On Error Resume Next
        Err.Clear
        Set objMomScriptAPI = CreateObject("MOM.ScriptAPI")
 
        If Err.Number &lt;&gt; 0 Then
            Exit Sub
        End If

        If Not GetScriptParameters(strSourceID, strManagedEntityId, strTargetComputer) Then
            ' If the script is called without the required arguments,
            ' create an information event and then quit.
                    strErrorMessage = "The script was called with fewer than five arguments or the arguments could not be parsed."
                    Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
                    WScript.Quit(-1)

        End If
    
        'Create new discovery data object
        Set objDiscoveryData = objMomScriptAPI.CreateDiscoveryData(0, strSourceID, strManagedEntityId)
        If Err.Number &lt;&gt; 0 Then
              strErrorMessage = vbCrLf &amp; "The script cannot create Discovery Data"
              Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
              WScript.Quit(-1)

        End If
    
        bIsOsSupported = CheckOSBuildNumber(WIN_SRV_2008_Version,WIN_SRV_2012R2_BUILD_NUMBER) 
        If (True = bIsOsSupported) Then
            blnSuccess = DiscoverClusterName(strTargetComputer, objDiscoveryData)
        Else
            blnSuccess = True
        End If
    
        If blnSuccess Then
                    If mblnLogSuccessEvent Then
                        strErrorMessage = "Script executed successfully."
                        Call LogScriptEvent(0, EVENT_ID_SUCCESS, EVENT_TYPE_INFORMATION, strErrorMessage,objMomScriptAPI)
                    End If
                    Call objMomScriptAPI.Return(objDiscoveryData)
        Else
                   strErrorMessage = "An error occurred while running script"
                   Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
        End If

  On Error Goto 0
End Sub

'****************************************************************************************************************
'   FUNCTION:       DiscoverClusterName
'   DESCRIPTION:    Discover instances of the relationship class
'                   'Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.Contains.Microsoft.Windows.Cluster.VirtualServer'.
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'                   OUT Object objDiscoveryData: initialised DiscoveryData instance
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function DiscoverClusterName(ByRef strTargetComputer, ByRef objDiscoveryData) 'As Boolean

    Dim strTargetComputerShortName 'As String
    
    Dim strClusterName 'As String
    Dim blnCreateDiscoveryData 'As Boolean
    Dim objClusterNameInstance 'As ClassInstance

    DiscoverClusterName = False

    On Error Resume Next    

         Err.Clear
         If Not  GetClusterName(strClusterName) Then
             Exit Function
         End If
        'Retrieve the cluster name from WMI and
        'discover the relationship
            Err.Clear
            'Create the cluster name instance
            Set objClusterNameInstance = objDiscoveryData.CreateClassInstance("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster']$")
            'Add key property (is hosted on Microsoft.Windows.Cluster.VirtualServer
            If HasValue(objClusterNameInstance) Then
                
                Call objClusterNameInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", strTargetComputer)
               
                'Property ClusterName
                Call objClusterNameInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster']/ClusterName$", strClusterName)
                'Call objClusterNameInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", "Windows Cluster (disk monitoring)")
                'add the instance to the discovery data
                If ( 0 = Err.Number) Then
                    Call objDiscoveryData.AddInstance(objClusterNameInstance)
                    If ( 0 = Err.Number) Then
                      DiscoverClusterName = True
                    End If

                End If

              Set objClusterNameInstance = Nothing
           End If


    On Error Goto 0  

End Function



'******************************************************************************
'   FUNCTION:       CheckOSBuildNumber
'   DESCRIPTION:    Returns True if the property BuildNumber from the Win32_OperatingSystem
'                   instance is greater or equal the given build number using the CIMv2 WMI namespace.
'   PARAMETERS:     IN Long lngBuildNumber: build number to check
'   RETURNS:        Boolean: True, if build is greater or equal than the given number
'******************************************************************************
Private Function CheckOSBuildNumber( lngVersion, lngHighBuildNumber) 'As Boolean

    Dim strOSVersion 
    Dim strBuild
    Dim dblVersion
    Dim lngBuild
    CheckOSBuildNumber = False

    strOSVersion = GetRegistryKeyValue("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\", "CurrentVersion")
    If (0 = Len(strOSVersion)) Then
          Exit Function
    End If

    strBuild =  GetRegistryKeyValue("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\", "CurrentBuild")
    If (0 = Len(strBuild)) Then
          Exit Function
    End If
    On Error Resume Next
       Err.Clear
       dblVersion = CDbl(strOSVersion)
       lngBuild   = CLng(strBuild) 

       If (0 = Err.Number) Then
        If (dblVersion &gt;= lngVersion and lngBuild &lt;= lngHighBuildNumber) Then
            CheckOSBuildNumber = True
        End If
       End If

    On Error Goto 0

End Function

'******************************************************************************
'   FUNCTION:       GetScriptParameters
'   DESCRIPTION:    Reads the script's parameters
'                   and sets the global variables.
'
'   PARAMETERS:     OUT String strSourceID: Id of MP element ($MPElement$)
'                   OUT String strManagedEntityId: Id of targeted entity ($Target/Id$)
'                   OUT String strTargetComputer: Principal name of executing computer
'                                                 ($Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$)
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function GetScriptParameters(ByRef strSourceID, ByRef strManagedEntityId, ByRef strTargetComputer) 'As Boolean

    Dim objArguments

    On Error Resume Next
       
        Err.Clear
        GetScriptParameters = False
        'cmdline: &lt;script&gt; True|False &lt;path to debug log&gt; True|False &lt;script id&gt; .MPElement. .Target/Id. .Target/Property[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName.
        Set objArguments = WScript.Arguments
        If objArguments.Count &lt; 5 Then Exit Function

        'Get parameters and set global variables
        mblnLogSuccessEvent = CBool(objArguments(0))
        If (Err.Number &lt;&gt; 0 ) Then
          mblnLogSuccessEvent = False
        End If

        mstrIdentifier = Replace(objArguments(1), Chr(34), "")
        strSourceID = Replace(objArguments(2), Chr(34), "")
        strManagedEntityId = Replace(objArguments(3), Chr(34), "")
        strTargetComputer = Replace(objArguments(4), Chr(34), "")

        If Len(strSourceID) &gt; 0 And Len(strManagedEntityId) &gt; 0 And Len(strTargetComputer) &gt; 0 Then GetScriptParameters = True

    On Error Goto 0
        
End Function


Private Function GetLogScriptName()

  GetLogScriptName = "-- Cluster Name Discovery Script -- " &amp; vbCrLf &amp; vbCrLf &amp; "Script name: " &amp; WScript.ScriptName &amp; vbCrLf &amp; "Version: " &amp; SCRIPT_VERSION &amp; vbCrLf

End Function
'****************************************************************************************************************
'   FUNCTION:       GetClusterName
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterName(ByRef strClusterName)   'As Boolean

    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim strWQLQuery 'As String
    Dim objClusters 'As SWbemObjectSet
    Dim objCluster 'As SWbemObject
    Dim bResult

    GetClusterName = False
    bResult = GetClusterNameFromRegistry(strClusterName)
    
    If (True = bResult And Len(strClusterName) &gt; 0 ) Then
      GetClusterName = bResult
      Exit Function
    End If
     
    On Error Resume Next
        Err.Clear    
      
        'Connect to WMI NS \\.\root\MSCluster
        If ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        
            strWQLQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_CLASS
            Set objClusters = objMSClusterSWbemServices.ExecQuery(strWQLQuery)
            If HasValue(objClusters) Then
                For Each objCluster In objClusters
                        strClusterName = objCluster.Name
                Next 'objCluster

                If Len(strClusterName) &gt; 0 Then GetClusterName = True
            End If
            Set objClusters = Nothing
 
        End If

   On Error Goto 0
    
End Function


'****************************************************************************************************************
'   FUNCTION:       GetClusterNameFromRegistry
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterNameFromRegistry(ByRef strClusterName)   'As Boolean

    Dim objReg     'Registry
    Const ClusterNamePath = "HKLM\Cluster\"
 
    strClusterName = GetRegistryKeyValue(ClusterNamePath,"ClusterName")
    GetClusterNameFromRegistry = Len(strClusterName) &gt; 0
    
End Function

'****************************************************************************************************************
'   FUNCTION:       GetComputerName '   DESCRIPTION:    return short computername
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function GetComputerName(strTargetComputer)
    
    Dim strComputerName
    Dim PointPos
    
        PointPos = InStr(strTargetComputer, ".")
            If PointPos &gt; 0 Then
                strComputerName = LCase(Left(strTargetComputer, PointPos - 1)) 
            Else
                strComputerName = LCase(strTargetComputer)
            End If

    GetComputerName = strComputerName 
End Function

'******************************************************************************
'   FUNCTION:       ConnectToWbemNs
'   DESCRIPTION:    Connects to a WMI namespace
'   PARAMETERS:     IN String strServerName: name of the computer. If empty the local computer will be used.
'                   IN String strNameSpace: WMI namespace
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function ConnectToWbemNS(ByRef strServerName, ByRef strNameSpace, ByRef objSWbemServices) 'As Boolean

    ConnectToWbemNS = False
    Dim objSWbemLocator 'as WbemScripting.SWbemLocator
    Set objSWbemServices = Nothing

    On Error Resume Next
        'Create a new WMI Locator object
        Set objSWbemLocator = CreateObject("WbemScripting.SWbemLocator")

        IF HasValue(objSWbemLocator) Then
            'Connect to WMI namespace on strServerName computer and create WMI Services object
            Set objSWbemServices = objSWbemLocator.ConnectServer(strServerName, strNameSpace)
        END IF

        'If object is initialised function will be successful
        ConnectToWbemNS = HasValue(objSWbemServices)

    On Error Goto 0

End Function

Private Function HasValue(Value)

    Dim bNothing
    
    bNothing = false

    IF ( IsObject(Value) ) THEN
   	    IF (Nothing is Value) THEN
     		bNothing = true
   		END IF
   	END IF	

	HasValue = Not ( IsEmpty(Value) or bNothing or IsNull(Value) )
End Function

'****************************************************************************************************************
'   FUNCTION:       GetRegistryKeyValue
'   DESCRIPTION:    Get Registry Key value.
'   PARAMETERS:     IN String keyPath: Path to search in registry.
'                   IN String Key: key to return value from
'   RETURNS:        string: Value if successful
'****************************************************************************************************************
Function GetRegistryKeyValue(ByVal keyPath, ByVal key)
  Dim oReg, strKeyValue

  strKeyValue = ""
  GetRegistryKeyValue = strKeyValue
  On Error Resume Next
    Err.Clear
    Set oReg = CreateObject("WScript.Shell")
    If Err.Number &lt;&gt; 0 Then
      Err.Clear
      Exit Function
    End If
    strKeyValue = oReg.RegRead(keyPath &amp; key)
    If Err.Number &lt;&gt; 0 Then
        Err.Clear
        Exit Function
    End If

    GetRegistryKeyValue = strKeyValue

' resume error
  On Error Goto 0

End Function

'******************************************************************************
'   Subroutine:     LogScriptEvent
'   DESCRIPTION:    Logging events to EventSource
'   PARAMETERS:     IN Integer LogType: 0 - MomScriptApi; 1 - File, 2 - Screen . 
'                   IN String Message: Event Description
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************

Sub LogScriptEvent(LogType,EventId,EventLevel,Message,objMomScriptAPI)

    Dim strMessage
    Dim sDate
    Dim LogScriptName

  On Error Resume Next  
    If (0 = LogType) Then
       If (Not HasValue(objMomScriptAPI)) Then
         Exit Sub
       End If
       LogScriptName  =  GetLogScriptName()
       Call objMomScriptAPI.LogScriptEvent(LogScriptName,EventId,EventLevel,Message)       

    Else
      sDate      = Now()
      strMessage = "" &amp; sDate &amp; Message
     
      If (1 = LogType) Then 
        WScript.Echo strMessage
      End If
      
    End If 
    
 On Error Goto 0
End Sub
</ScriptBody><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds></ProbeAction></MemberModules><Composition><Node ID="VbProbe"><Node ID="Scheduler"/></Node></Composition></Composite></ModuleImplementation><OutputType>System!System.Discovery.Data</OutputType></DataSourceModuleType><DataSourceModuleType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:int"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="MPElementID" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetID" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:int"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><DataSource ID="DS" TypeID="System!System.Discovery.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Seconds">$Config/IntervalSeconds$</Interval></SimpleReccuringSchedule><ExcludeDates/></Scheduler></DataSource><ProbeAction ID="VbProbe" TypeID="Windows!Microsoft.Windows.ScriptDiscoveryProbe"><ScriptName>Microsoft.Windows.Server.CSV.DiscoverClusterSharedVolume.vbs</ScriptName><Arguments>$Config/LogSuccessEvent$ "$Config/ScriptGroupId$" "$Config/MPElementID$" "$Config/TargetID$" "$Config/TargetComputer$" "$Config/ClusterName$" </Arguments><ScriptBody>Option Explicit
SetLocale("en-us")

Const SCRIPT_VERSION = "1.06"
Const LOG_SUCCESS_EVENT_PARAMETER_NAME = "LogSuccessEvent"
Const MP_ELEMENT_PARAMETER_NAME = "MP Element"
Const MANAGED_ENTITY_ID_PARAMETER_NAME = "Managed Entity"
Const TARGET_COMPUTER_PARAMETER_NAME = "Target Computer"
Const CLUSTER_NAME_PARAMETER_NAME = "Cluster Name"

'WMI constants
Const WMI_MSCLUSTER_NAMESPACE = "root\MSCluster"
Const WMI_CIMV2_NAMESPACE = "root\cimv2"
Const WMI_MSCLUSTER_CLUSTER_SHARED_VOLUME = "MSCluster_ClusterSharedVolume"
Const WMI_CLUSTER_SHARED_VOLUME_TO_PARTITION_ASSOCIATOR_CLASS = "MSCluster_ClusterSharedVolumeToPartition"
Const WMI_CLUSTER_SHARED_VOLUME_TO_RESOURCE_ASSOCIATOR_CLASS = "MSCluster_ClusterSharedVolumeToResource"

Const WMI_MSCLUSTER_CLUSTER_CLASS = "MSCluster_Cluster"
Const WMI_NAME_PROPERTY_NAME = "Name"
Const WMI_PATH_PROPERTY_NAME = "Path"
Const WMI_FILESYSTEM_PROPERTY_NAME = "FileSystem"
Const WMI_TOTALSIZE_PROPERTY_NAME = "TotalSize"
Const WMI_VOLUMELABEL_PROPERTY_NAME = "VolumeLabel"
Const MAX_FIELD_LENGTH  = 256


'State property bag constants

'Event constants
Const EVENT_TYPE_SUCCESS = 0
Const EVENT_TYPE_ERROR = 1
Const EVENT_TYPE_WARNING = 2
Const EVENT_TYPE_INFORMATION = 4

Const EVENT_ID_SUCCESS = 1000           'Use IDs in the range 1 - 1000
Const EVENT_ID_SCRIPTERROR = 999        'Then you can use eventcreate.exe to test the MP

Const SCRIPT_SUCCESS = 0
Const SCRIPT_WITH_ERROR = 1
'Global vars
Dim mblnLogSuccessEvent 'As Boolean
Dim mstrIdentifier 'As String

Call Main

'*********************************************************************************************
'   PROCEDURE:      Main
'   DESCRIPTION:    Reads the script parameters and creates the cluster shared volume discovery data.
'   PARAMETERS:     void
'*********************************************************************************************
Private Sub Main()
        
        ' Targeted at Microsoft.Windows.Cluster.VirtualServer (based on Microsoft.Windows.Server.Computer)
        Dim strSourceID 'As String  '= oArgs(4). strSourceId is the GUID of the discovery object that runs the script ($MPElement$).
        Dim strManagedEntityId 'As String  '= oArgs(5) - strManagedEntityId is the GUID of the computer class that is targeted by the script ($Target/Id$).
        Dim strTargetComputer 'As String  '= oArgs(6)
        Dim strClusterName 'As String '= oArgs(7)
        Dim objMomScriptAPI 'As MOM.ScriptAPI
        Dim objDiscoveryData 'As DiscoveryData
        Dim intSuccess 'As Integer
        Dim strErrorMessage

        On Error Resume Next
            Err.Clear
            Set objMomScriptAPI = CreateObject("MOM.ScriptAPI")
 
            If Err.Number &lt;&gt; 0 Then
              WScript.Quit(-1)
            End If

            'If Not GetClusterName(strClusterName) Then
            ' WScript.Quit(-1)
            'End If 

            If Not GetScriptParameters(strSourceID, strManagedEntityId, strTargetComputer,strClusterName) Then
                    ' If the script is called without the required arguments,
                    ' create an information event and then quit.
                    strErrorMessage = "The script was called with fewer than six arguments or the arguments could not be parsed"
                    Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
                    WScript.Quit(-1)
            End If

    
            'Create new discovery data object
            Set objDiscoveryData = objMomScriptAPI.CreateDiscoveryData(0, strSourceID, strManagedEntityId)
 
            If Err.Number &lt;&gt; 0 Then
              strErrorMessage = vbCrLf &amp; "The script cannot create Discovery Data"
              Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
              WScript.Quit(-1)
            End If

            'Discover instances
            intSuccess = DiscoverClusterSharedVolumes(strTargetComputer, strClusterName, objDiscoveryData)

            If intSuccess = SCRIPT_SUCCESS Then
                    If mblnLogSuccessEvent Then 
                        strErrorMessage = vbCrLf &amp; "Script executed successfully."
                        Call LogScriptEvent(0, EVENT_ID_SUCCESS, EVENT_TYPE_INFORMATION, strErrorMessage,objMomScriptAPI)
                    End If

                    'Return discovery data
                    Call objMomScriptAPI.Return(objDiscoveryData)
            Else
              strErrorMessage = vbCrLf &amp; "An error occurred while running the script."
              Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
                                                                                 
            End If

            Set objDiscoveryData = Nothing
            Set objMomScriptAPI  = Nothing

     On Error Goto 0 
End Sub

'****************************************************************************************************************
'   FUNCTION:       DiscoverClusterSharedVolumes
'   DESCRIPTION:    Discover instances of the class 'Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume' using WMI.
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'                   IN String strClusterName: the cluster containing the cluster shared volume
'                   OUT Object objDiscoveryData: initialised DiscoveryData instance
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function DiscoverClusterSharedVolumes(ByRef strTargetComputer, ByRef strClusterName, ByRef objDiscoveryData) 'As Integer
    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim objClusterSharedVolumes 'As SWbemObjectSet
    Dim objClusterSharedVolume 'As SWbemObject
    Dim objClusterDiskPartition 'As SWbemObject
    Dim objClusterDiskPartitions 'As SWbemObject
    Dim objClusterResource 'As SWbemObject
    Dim objClusterResources 'As SWbemObject
    Dim intSuc 'As Integer
    Dim strComputerName
    Dim bValidObjects
    Dim blnCreateDiscoveryData

    bValidObjects = False
    DiscoverClusterSharedVolumes = SCRIPT_WITH_ERROR


    'Connect to WMI NS \\.\root\MSCluster
    If Not ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
      Exit Function
    End If

    strComputerName = GetComputerName(strTargetComputer)

            If strComputerName &lt;&gt; LCase(strClusterName) Then 
                DiscoverClusterSharedVolumes = SCRIPT_SUCCESS
                Exit Function
            End If
    
    blnCreateDiscoveryData = True
    On Error Resume Next

            Err.Clear
            Set objClusterSharedVolumes = objMSClusterSWbemServices.ExecQuery("select * from " &amp; WMI_MSCLUSTER_CLUSTER_SHARED_VOLUME)

            If (Err.number &lt;&gt; 0  ) Then
               Exit Function
            End If 

            If (Not HasValue(objClusterSharedVolumes) ) Then
              DiscoverClusterSharedVolumes = SCRIPT_SUCCESS
              Exit Function
            End If 
            'Loop through all returned cluster shared volumes
            For Each objClusterSharedVolume In objClusterSharedVolumes
               If (Err.Number &lt;&gt; 0) Then
                   'Class Doesn't exist. Return Empty Discovery Data
                   If (-2147217392 = Err.Number) Then
                     DiscoverClusterSharedVolumes = SCRIPT_SUCCESS
                   End If
                    Set objClusterSharedVolumes = Nothing
                    Exit Function
                End If
                'Get the associated disk partition
                 Set objClusterDiskPartitions = objClusterSharedVolume.Associators_(WMI_CLUSTER_SHARED_VOLUME_TO_PARTITION_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
                 Set objClusterResources      = objClusterSharedVolume.Associators_(WMI_CLUSTER_SHARED_VOLUME_TO_RESOURCE_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
                'Get the associated disk partition
                For Each objClusterDiskPartition In objClusterDiskPartitions

                    For Each objClusterResource In objClusterResources
                         intSuc = CreateDiscoveryData(objClusterSharedVolume, objClusterDiskPartition, objClusterResource,strTargetComputer, strClusterName, objDiscoveryData)
                         If (SCRIPT_WITH_ERROR = intSuc) Then
                           blnCreateDiscoveryData = False
                         End If
                    Next 'objClusterResource
                Next 'objClusterDiskPartition

            Next 'objClusterSharedVolume

            If blnCreateDiscoveryData Then
                DiscoverClusterSharedVolumes = SCRIPT_SUCCESS
            End If

    On Error Goto 0
End Function

'****************************************************************************************************************
'   FUNCTION:       CreateDiscoveryData
'   DESCRIPTION:    Create discovery data for
'                   &lt;ClassType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" Accessibility="Internal" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false"&gt;
'                       &lt;Property ID="ClusterSharedVolumeName" Type="string" Key="true" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="FriendlyVolumeName" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="PartitionName" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="PartitionFileSystem" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="PartitionSize" Type="int" Key="false" /&gt;
'                       &lt;Property ID="ClusterName" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="VolumeLabel" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                   &lt;/ClassType&gt;
'
'   PARAMETERS:     IN Object objClusterSharedVolume: the cluster shared volume as SWbemObject of type MSCluster_ClusterSharedVolume.
'                   IN Object objClusterDiskPartition: the associated disk partition as SWbemObject of type MSCluster_DiskPartition.
'                   IN Object objClusterResource: the associated cluster resource as SWbemObject of type MSCluster_Resource.
'                   IN String strTargetComputer: the principal name of the targeted cluster virtual server hosting the cluster shared volume,
'                                                i.e. the cluster name and not the current owner!
'                   IN String strClusterName: the cluster containing the cluster shared volume
'                   OUT Object objDiscoveryData: initialised DiscoveryData instance
'   RETURNS:        Integer: 0 if successful or 1 if Error
'****************************************************************************************************************
Private Function CreateDiscoveryData(ByRef objClusterSharedVolume, ByRef objClusterDiskPartition, ByRef objClusterResource,ByRef strTargetComputer, ByRef strClusterName, ByRef objDiscoveryData) 'As Integer
    Dim objCSVInstance 'As MOMClassInstance
    Dim strCSVName

    On Error Resume Next

        CreateDiscoveryData = SCRIPT_WITH_ERROR
        Err.Clear

 	    If ( False = HasValue(objClusterResource.Properties_(WMI_NAME_PROPERTY_NAME))  Or False = HasValue(objClusterSharedVolume.Properties_(WMI_NAME_PROPERTY_NAME)) ) Then
                Exit Function 
	    End If

        strCSVName = objClusterResource.Properties_(WMI_NAME_PROPERTY_NAME) &amp; "_" &amp; objClusterSharedVolume.Properties_(WMI_NAME_PROPERTY_NAME)
    
        If ( Len(strCSVName) &gt; MAX_FIELD_LENGTH) Then

    	    strCSVName = Left(strCSVName,MAX_FIELD_LENGTH)

	    End If

        'Create the cluster shared volume instance hosted on the targeted cluster virtual server
        Set objCSVInstance = objDiscoveryData.CreateClassInstance("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']$")

        'PrincipalName (host, key)
        Call objCSVInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", strTargetComputer)

        'ClusterSharedVolumeName (key)
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/ClusterSharedVolumeName$", strCSVName)
        'FriendlyVolumeName
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/FriendlyVolumeName$", objClusterSharedVolume.Properties_(WMI_NAME_PROPERTY_NAME))
        'PartitionName
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/PartitionName$", objClusterDiskPartition.Properties_(WMI_PATH_PROPERTY_NAME))
        'PartitionFileSystem
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/PartitionFileSystem$", objClusterDiskPartition.Properties_(WMI_FILESYSTEM_PROPERTY_NAME))
        'PartitionSize
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/PartitionSize$", objClusterDiskPartition.Properties_(WMI_TOTALSIZE_PROPERTY_NAME))
        'ClusterName
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/ClusterName$", strClusterName)
        'VolumeLabel
        Call objCSVInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume']/VolumeLabel$", objClusterDiskPartition.Properties_(WMI_VOLUMELABEL_PROPERTY_NAME))

        If (0 = Err.number) Then
            Call objDiscoveryData.AddInstance(objCSVInstance)

            If (0 = Err.number) Then
                CreateDiscoveryData = SCRIPT_SUCCESS
            End If
        End If

        Set objCSVInstance = Nothing
    On Error Goto 0
    
End Function

'******************************************************************************
'   FUNCTION:       GetScriptParameters
'   DESCRIPTION:    Reads the script's parameters
'                   and sets the global variables.
'
'   PARAMETERS:     OUT String strSourceID: Id of MP element ($MPElement$)
'                   OUT String strManagedEntityId: Id of targeted entity ($Target/Id$)
'                   OUT String strTargetComputer: Principal name of executing computer
'                                                 (-Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName-)
'                   OUT String strClusterName: Cluster name
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function GetScriptParameters(ByRef strSourceID, ByRef strManagedEntityId, ByRef strTargetComputer,ByRef strClusterName) 'As Boolean

    Dim objArguments

    On Error Resume Next

        'cmdline: &lt;script&gt; True|False &lt;path to debug log&gt; True|False &lt;script id&gt; .MPElement. .Target/Id. .Target/Host/Property[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName.
        Set objArguments = WScript.Arguments
        If objArguments.Count &lt; 6 Then Exit Function

        Err.Clear
        'Get parameters and set global variables
        mblnLogSuccessEvent = CBool(objArguments(0))
        If (Err.Number &lt;&gt; 0 ) Then
          mblnLogSuccessEvent = False
        End If
        mstrIdentifier = Replace(objArguments(1), Chr(34), "")
        strSourceID = Replace(objArguments(2), Chr(34), "")
        strManagedEntityId = Replace(objArguments(3), Chr(34), "")
        strTargetComputer = Replace(objArguments(4), Chr(34), "")
        strClusterName    = Replace(objArguments(5), Chr(34), "")

        If Len(strSourceID) &gt; 0 And Len(strManagedEntityId) &gt; 0 And Len(strTargetComputer) &gt; 0 And Len(strClusterName) &gt; 0 Then GetScriptParameters = True
    On Error Goto 0
      
End Function



Private Function GetLogScriptName()

  GetLogScriptName = "-- Cluster Shared Volumes Cluster Discovery Script -- " &amp; vbCrLf &amp; vbCrLf &amp; "Script name: " &amp; WScript.ScriptName &amp; vbCrLf &amp; "Version: " &amp; SCRIPT_VERSION &amp; vbCrLf

End Function
'****************************************************************************************************************
'   FUNCTION:       GetClusterName
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterName(ByRef strClusterName)   'As Boolean

    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim strWQLQuery 'As String
    Dim objClusters 'As SWbemObjectSet
    Dim objCluster 'As SWbemObject
    Dim bResult

    GetClusterName = False
    bResult = GetClusterNameFromRegistry(strClusterName)
    
    If (True = bResult And Len(strClusterName) &gt; 0 ) Then
      GetClusterName = bResult
      Exit Function
    End If
     
    On Error Resume Next
        Err.Clear    
      
        'Connect to WMI NS \\.\root\MSCluster
        If ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        
            strWQLQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_CLASS
            Set objClusters = objMSClusterSWbemServices.ExecQuery(strWQLQuery)
            If HasValue(objClusters) Then
                For Each objCluster In objClusters
                        strClusterName = objCluster.Name
                Next 'objCluster

                If Len(strClusterName) &gt; 0 Then GetClusterName = True
            End If
            Set objClusters = Nothing
 
        End If

   On Error Goto 0
    
End Function


'****************************************************************************************************************
'   FUNCTION:       GetClusterNameFromRegistry
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterNameFromRegistry(ByRef strClusterName)   'As Boolean

    Dim objReg     'Registry
    Const ClusterNamePath = "HKLM\Cluster\"
 
    strClusterName = GetRegistryKeyValue(ClusterNamePath,"ClusterName")
    GetClusterNameFromRegistry = Len(strClusterName) &gt; 0
    
End Function

'****************************************************************************************************************
'   FUNCTION:       GetComputerName '   DESCRIPTION:    return short computername
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function GetComputerName(strTargetComputer)
    
    Dim strComputerName
    Dim PointPos
    
        PointPos = InStr(strTargetComputer, ".")
            If PointPos &gt; 0 Then
                strComputerName = LCase(Left(strTargetComputer, PointPos - 1)) 
            Else
                strComputerName = LCase(strTargetComputer)
            End If

    GetComputerName = strComputerName 
End Function

'******************************************************************************
'   FUNCTION:       ConnectToWbemNs
'   DESCRIPTION:    Connects to a WMI namespace
'   PARAMETERS:     IN String strServerName: name of the computer. If empty the local computer will be used.
'                   IN String strNameSpace: WMI namespace
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function ConnectToWbemNS(ByRef strServerName, ByRef strNameSpace, ByRef objSWbemServices) 'As Boolean

    ConnectToWbemNS = False
    Dim objSWbemLocator 'as WbemScripting.SWbemLocator
    Set objSWbemServices = Nothing

    On Error Resume Next
        'Create a new WMI Locator object
        Set objSWbemLocator = CreateObject("WbemScripting.SWbemLocator")

        IF HasValue(objSWbemLocator) Then
            'Connect to WMI namespace on strServerName computer and create WMI Services object
            Set objSWbemServices = objSWbemLocator.ConnectServer(strServerName, strNameSpace)
        END IF

        'If object is initialised function will be successful
        ConnectToWbemNS = HasValue(objSWbemServices)

    On Error Goto 0

End Function

Private Function HasValue(Value)

    Dim bNothing
    
    bNothing = false

    IF ( IsObject(Value) ) THEN
   	    IF (Nothing is Value) THEN
     		bNothing = true
   		END IF
   	END IF	

	HasValue = Not ( IsEmpty(Value) or bNothing or IsNull(Value) )
End Function

'****************************************************************************************************************
'   FUNCTION:       GetRegistryKeyValue
'   DESCRIPTION:    Get Registry Key value.
'   PARAMETERS:     IN String keyPath: Path to search in registry.
'                   IN String Key: key to return value from
'   RETURNS:        string: Value if successful
'****************************************************************************************************************
Function GetRegistryKeyValue(ByVal keyPath, ByVal key)
  Dim oReg, strKeyValue

  strKeyValue = ""
  GetRegistryKeyValue = strKeyValue
  On Error Resume Next
    Err.Clear
    Set oReg = CreateObject("WScript.Shell")
    If Err.Number &lt;&gt; 0 Then
      Err.Clear
      Exit Function
    End If
    strKeyValue = oReg.RegRead(keyPath &amp; key)
    If Err.Number &lt;&gt; 0 Then
        Err.Clear
        Exit Function
    End If

    GetRegistryKeyValue = strKeyValue

' resume error
  On Error Goto 0

End Function

'******************************************************************************
'   Subroutine:     LogScriptEvent
'   DESCRIPTION:    Logging events to EventSource
'   PARAMETERS:     IN Integer LogType: 0 - MomScriptApi; 1 - File, 2 - Screen . 
'                   IN String Message: Event Description
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************

Sub LogScriptEvent(LogType,EventId,EventLevel,Message,objMomScriptAPI)

    Dim strMessage
    Dim sDate
    Dim LogScriptName

  On Error Resume Next  
    If (0 = LogType) Then
       If (Not HasValue(objMomScriptAPI)) Then
         Exit Sub
       End If
       LogScriptName  =  GetLogScriptName()
       Call objMomScriptAPI.LogScriptEvent(LogScriptName,EventId,EventLevel,Message)       

    Else
      sDate      = Now()
      strMessage = "" &amp; sDate &amp; Message
     
      If (1 = LogType) Then 
        WScript.Echo strMessage
      End If
      
    End If 
    
 On Error Goto 0
End Sub
</ScriptBody><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds></ProbeAction></MemberModules><Composition><Node ID="VbProbe"><Node ID="DS"/></Node></Composition></Composite></ModuleImplementation><OutputType>System!System.Discovery.Data</OutputType></DataSourceModuleType><DataSourceModuleType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterSharedVolumeName" type="xsd:string"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PropertyBagProvider"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><ScriptName>Microsoft.Windows.Server.CSV.MonitorClusterSharedVolume.vbs</ScriptName><Arguments>$Config/LogSuccessEvent$ "$Config/ScriptGroupId$" "$Config/TargetComputer$" "$Config/ClusterName$"</Arguments><ScriptBody>Option Explicit
SetLocale("en-us")
Const SCRIPT_VERSION = "1.06"
Const LOG_SUCCESS_EVENT_PARAMETER_NAME = "LogSuccessEvent"
Const MP_ELEMENT_PARAMETER_NAME = "MP Element"
Const MANAGED_ENTITY_ID_PARAMETER_NAME = "Managed Entity"
Const TARGET_COMPUTER_PARAMETER_NAME = "Target Computer"
Const CLUSTER_NAME_PARAMETER_NAME = "Cluster Name"

'WMI constants
Const WMI_MSCLUSTER_NAMESPACE = "root\MSCluster"
Const WMI_CIMV2_NAMESPACE = "root\cimv2"
Const WMI_MSCLUSTER_CLUSTER_SHARED_VOLUME = "MSCluster_ClusterSharedVolume"
Const WMI_CLUSTER_SHARED_VOLUME_TO_PARTITION_ASSOCIATOR_CLASS = "MSCluster_ClusterSharedVolumeToPartition"
Const WMI_CLUSTER_SHARED_VOLUME_TO_RESOURCE_ASSOCIATOR_CLASS = "MSCluster_ClusterSharedVolumeToResource"

Const WMI_MSCLUSTER_CLUSTER_CLASS = "MSCluster_Cluster"
Const WMI_NAME_PROPERTY_NAME = "Name"
Const WMI_PATH_PROPERTY_NAME = "Path"
Const WMI_FILESYSTEM_PROPERTY_NAME = "FileSystem"
Const WMI_TOTALSIZE_PROPERTY_NAME = "TotalSize"
Const WMI_FREESPACE_PROPERTY_NAME = "FreeSpace"
Const WMI_FAULTSTATE_PROPERTY_NAME = "FaultState"
Const WMI_VOLUMELABEL_PROPERTY_NAME = "VolumeLabel"
Const MAX_FIELD_LENGTH  = 256

'State property bag constants
Const STATE_DATA_TYPE = 3
Const STATE_PROPERTY_NAME = "State"
Const STATE_NTFS_NAME = "NTFSIsDirty"
Const STATE_GOOD = "GOOD"
Const STATE_BAD = "BAD"

'Performance property bag constants
Const INSTANCE_NAME = "ClusterSharedVolumeName"
Const PERFORMANCE_DATA_TYPE = 2
Const PERFORMANCE_OBJECT_NAME = "PerfObject"
Const PERFORMANCE_COUNTER_NAME = "PerfCounter"
Const PERFORMANCE_INSTANCE_NAME = "PerfInstance"
Const PERFORMANCE_VALUE_NAME = "PerfValue"
Const PERF_OBJECT_CSV = "Cluster Shared Volume"
Const PERF_COUNTER_TOTAL_SIZE_MB = "Total size / MB"
Const PERF_COUNTER_FREE_SPACE_MB = "Free space / MB"
Const PERF_COUNTER_FREE_SPACE_PERCENT = "Free space / Percent"
Const PERF_COUNTER_STATE_PROPERTY_NAME = "State"
Const PERF_COUNTER_STATE_NTFS_NAME = "NTFSIsDirty"

'Event constants
Const EVENT_TYPE_SUCCESS = 0
Const EVENT_TYPE_ERROR = 1
Const EVENT_TYPE_WARNING = 2
Const EVENT_TYPE_INFORMATION = 4

Const EVENT_ID_SUCCESS = 1000           'Use IDs in the range 1 - 1000
Const EVENT_ID_SCRIPTERROR = 999        'Then you can use eventcreate.exe to test the MP

'Scripting.FileSystemObject constants
Const FOR_READING = 1 'Open a file for reading only. You can't write to this file.
Const FOR_WRITING = 2 'Open a file for writing.
Const FOR_APPENDING = 8 'Open a file and write to the end of the file.

'Global vars
Dim mblnLogSuccessEvent 'As Boolean
Dim mstrIdentifier 'As String

Call Main

'*********************************************************************************************
'   PROCEDURE:      Main
'   DESCRIPTION:    Reads the script parameters and creates the cluster shared volume discovery data.
'   PARAMETERS:     void
'*********************************************************************************************
Private Sub Main()

        ' Targeted at Microsoft.Windows.Cluster.VirtualServer (based on Microsoft.Windows.Server.Computer)
        Dim strTargetComputer 'As String  '= oArgs(6)
        Dim strClusterName 'As String '= oArgs(7)
        Dim objMomScriptAPI 'As MOM.ScriptAPI
        Dim blnSuccess 'As Boolean
    
        On Error Resume Next
            Err.Clear  
            Set objMomScriptAPI = CreateObject("MOM.ScriptAPI")
            If Err.Number &lt;&gt; 0 Then
              WScript.Quit(-1)
            End If

            If Not GetScriptParameters(strTargetComputer, strClusterName) Then
                    ' If the script is called without the required arguments,
                    ' create an information event and then quit.
                    strErrorMessage = "The script was called with fewer than four arguments or the arguments could not be parsed."
                    Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
                    WScript.Quit(-1)
            End If

            'Monitor instances
            blnSuccess = MonitorClusterSharedVolumes(strTargetComputer, strClusterName, objMomScriptAPI)

            If blnSuccess Then
                    If mblnLogSuccessEvent Then
                        strErrorMessage = "Script executed successfully."
                        Call LogScriptEvent(0, EVENT_ID_SUCCESS, EVENT_TYPE_INFORMATION, strErrorMessage,objMomScriptAPI)
                    End If
            Else
                   CreateEmptyTypedPropertyBag(objMomScriptAPI)
                   strErrorMessage = "An error occurred while running script"
                   Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
            End If
 
        'Return the typed property bags
        Call objMomScriptAPI.ReturnItems
      
        On Error Goto 0
End Sub

'****************************************************************************************************************
'   FUNCTION:       MonitorClusterSharedVolumes
'   DESCRIPTION:    Creates monitoring data for all instances of the class 'Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume' using WMI.
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'                   IN String strClusterName: the cluster containing the cluster shared volume
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function MonitorClusterSharedVolumes(ByRef strTargetComputer, ByRef strClusterName, ByRef objMomScriptAPI) 'As Boolean
    
    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim objClusterSharedVolumes 'As SWbemObjectSet
    Dim objClusterSharedVolume 'As SWbemObject
    Dim objClusterDiskPartition 'As SWbemObject
    Dim objClusterResource 'As SWbemObject
    Dim objClusterDiskPartitions 'As SWbemObject
    Dim objClusterResources 'As SWbemObject
    Dim bValidObjects
    Dim blnSuccess
    Dim IsAllDataAvailable

    bValidObjects = False
    blnSuccess = True
    IsAllDataAvailable = 0
    MonitorClusterSharedVolumes = False

    On Error Resume Next         
        'Connect to WMI NS \\.\root\MSCluster
        If Not ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
            Exit Function
        End If

        Err.Clear

        Set objClusterSharedVolumes = objMSClusterSWbemServices.ExecQuery("select * from " &amp; WMI_MSCLUSTER_CLUSTER_SHARED_VOLUME)
        If (Err.Number &lt;&gt; 0 or Not HasValue(objClusterSharedVolumes)) Then
          Set objClusterSharedVolumes = Nothing
          Exit Function
        End If

        'Loop through all returned cluster shared volumes
        For Each objClusterSharedVolume In objClusterSharedVolumes
            'Get the associated disk partition
             Set objClusterDiskPartitions = objClusterSharedVolume.Associators_(WMI_CLUSTER_SHARED_VOLUME_TO_PARTITION_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
             Set objClusterResources      = objClusterSharedVolume.Associators_(WMI_CLUSTER_SHARED_VOLUME_TO_RESOURCE_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
 
            For Each objClusterDiskPartition In objClusterDiskPartitions 
                'Get the associated resource
                For Each objClusterResource In objClusterResources
                     blnSuccess = CreateMonitoringData(objClusterSharedVolume, objClusterDiskPartition, objClusterResource,strTargetComputer,  objMomScriptAPI)
                     If ( false = blnSuccess) Then
                        IsAllDataAvailable = 1 
                     Else
                         If (0 = IsAllDataAvailable) Then
                           IsAllDataAvailable = 2
                         End If  
                     End If 
                Next 'objClusterResource
            Next 'objClusterDiskPartition
        Next 'objClusterSharedVolume

                Set objClusterDiskPartitions = Nothing
                Set objClusterResources      = Nothing
                Set objClusterSharedVolumes  = Nothing
 
      If (2 = IsAllDataAvailable) Then 
        MonitorClusterSharedVolumes = True
      End If
    
    On Error Goto 0
End Function

'****************************************************************************************************************
'   FUNCTION:       CreateMonitoringData
'   DESCRIPTION:    Create monitoring data for a cluster shared volume.
'
'   PARAMETERS:     IN Object objClusterSharedVolume: the cluster shared volume as SWbemObject of type MSCluster_ClusterSharedVolume.
'                   IN Object objClusterDiskPartition: the associated disk partition as SWbemObject of type MSCluster_DiskPartition.
'                   IN Object objClusterResource: the associated cluster resource as SWbemObject of type MSCluster_Resource.
'                   IN String strTargetComputer: the principal name of the targeted cluster virtual server hosting the cluster shared volume,
'                                                i.e. the cluster name and not the current owner!
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function CreateMonitoringData(ByRef objClusterSharedVolume, ByRef objClusterDiskPartition, ByRef objClusterResource,ByRef strTargetComputer,  ByRef objMomScriptAPI) 'As Boolean
     
     Dim strCSVName
     CreateMonitoringData = False

    On Error Resume Next
        Err.Clear
        
    
 	    If ( False = HasValue(objClusterResource.Properties_(WMI_NAME_PROPERTY_NAME))  Or False = HasValue(objClusterSharedVolume.Properties_(WMI_NAME_PROPERTY_NAME)) ) Then
                Exit Function 
	    End If

        strCSVName = objClusterResource.Properties_(WMI_NAME_PROPERTY_NAME) &amp; "_" &amp; objClusterSharedVolume.Properties_(WMI_NAME_PROPERTY_NAME)
    
        If ( Len(strCSVName) &gt; MAX_FIELD_LENGTH) Then

    	    strCSVName = Left(strCSVName,MAX_FIELD_LENGTH)

	    End If

        'Create performance data
        'CSV State
 
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_STATE_PROPERTY_NAME, strCSVName, _
                                               CStr(objClusterSharedVolume.Properties_(WMI_FAULTSTATE_PROPERTY_NAME)), _
                                               strCSVName, objMomScriptAPI)

        'NTFSDirty (for future use)
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_STATE_NTFS_NAME, strCSVName, _
                                               0, strCSVName, objMomScriptAPI)
    
        'Total Size /MB
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_TOTAL_SIZE_MB, strCSVName, _
                                          objClusterDiskPartition.Properties_(WMI_TOTALSIZE_PROPERTY_NAME), strCSVName, objMomScriptAPI)

        'Free Space /MB
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_FREE_SPACE_MB, strCSVName, _
                                          objClusterDiskPartition.Properties_(WMI_FREESPACE_PROPERTY_NAME), strCSVName, objMomScriptAPI)
    
        'Free Space /%
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_FREE_SPACE_PERCENT, strCSVName, _
                                          Round(CLng(objClusterDiskPartition.Properties_(WMI_FREESPACE_PROPERTY_NAME)) / CLng(objClusterDiskPartition.Properties_(WMI_TOTALSIZE_PROPERTY_NAME)) * 100), _
                                          strCSVName, objMomScriptAPI)

    
        If ( 0 = Err.Number ) Then
            CreateMonitoringData = True
        End If

    On Error Goto 0
End Function

'******************************************************************************
'   FUNCTION:       GetScriptParameters
'   DESCRIPTION:    Reads the script's parameters
'                   and sets the global variables.
'
'   PARAMETERS:     OUT String strTargetComputer: Principal name of executing computer
'                                                 (-Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName-)
'                   OUT String strClusterName: Cluster name
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function GetScriptParameters(ByRef strTargetComputer, ByRef strClusterName) 'As Boolean

        Dim objArguments

        On Error Resume Next

            'cmdline: &lt;script&gt; True|False &lt;path to debug log&gt; True|False &lt;script id&gt; .MPElement. .Target/Id. .Target/Property[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName.
            Set objArguments = WScript.Arguments
            If objArguments.Count &lt; 4 Then Exit Function
            Err.Clear
            'Get parameters and set global variables
            mblnLogSuccessEvent = CBool(objArguments(0))
            If (Err.Number &lt;&gt; 0 ) Then
              mblnLogSuccessEvent = False
            End If

            mstrIdentifier = Replace(objArguments(1), Chr(34), "")
            strTargetComputer = Replace(objArguments(2), Chr(34), "")
            strClusterName = Replace(objArguments(3), Chr(34), "")

            If Len(strTargetComputer) &gt; 0 And Len(strClusterName) &gt; 0 Then GetScriptParameters = True
        On Error Goto 0
        
End Function


'***************************************************************************************
'   PROCEDURE:      CreatePerformanceTypedPropertyBag
'   DESCRIPTION:    Generates a performance typed property bag and adds it to the script's XML output.
'   PARAMETERS:     IN String strObjectName: name of the performance object
'                   IN String strCounterName: name of the performance counter
'                   IN String strInstanceName: name of the performance counter in instance
'                   IN Variant varValue: value of the performance counter
'                   IN String strCSVInstanceName: Friendly volume name of the cluster shared volume
'                   IN Object objMomScriptAPI: initialised MOM.ScriptAPI object
'***************************************************************************************
Sub CreatePerformanceTypedPropertyBag(ByRef strObjectName, ByRef strCounterName, ByRef strInstanceName, _
                                      ByRef varValue, ByRef strCSVInstanceName, ByRef objMomScriptAPI)

    Dim objTypedPropertyBag 'As MOM.ScriptAPI.TypedPropertyBag
    
    'Create a new typed property bag of the performance data type
    Set objTypedPropertyBag = objMomScriptAPI.CreateTypedPropertyBag(PERFORMANCE_DATA_TYPE)

    'Add the values for the perf counter's object name, counter name, instance name and the value)
    Call objTypedPropertyBag.AddValue(PERFORMANCE_OBJECT_NAME, CStr(strObjectName))
    Call objTypedPropertyBag.AddValue(PERFORMANCE_COUNTER_NAME, CStr(strCounterName))
    Call objTypedPropertyBag.AddValue(PERFORMANCE_INSTANCE_NAME, CStr(strInstanceName))
    Call objTypedPropertyBag.AddValue(PERFORMANCE_VALUE_NAME, CStr(varValue))
    
    'Necessary information for the property bag data source filter condition
    'to enable Agent cook down
    Call objTypedPropertyBag.AddValue(INSTANCE_NAME, CStr(strCSVInstanceName))
    
    'Add the property bag to the script's XML output
    Call objMomScriptAPI.AddItem(objTypedPropertyBag)

    Set objTypedPropertyBag = Nothing

End Sub

'***************************************************************************************
'   PROCEDURE:      CreateEmptyTypedPropertyBag
'   DESCRIPTION:    Generates a empty performance typed property bag and adds it to the script's XML output.
'   PARAMETERS:     IN Object objMomScriptAPI: initialised MOM.ScriptAPI object
'***************************************************************************************
Sub CreateEmptyTypedPropertyBag(ByRef objMomScriptAPI)

    Dim objTypedPropertyBag 'As MOM.ScriptAPI.TypedPropertyBag
    
    'Create a new typed property bag of the performance data type
    Set objTypedPropertyBag = objMomScriptAPI.CreateTypedPropertyBag(PERFORMANCE_DATA_TYPE)

    Call objTypedPropertyBag.AddValue(PERFORMANCE_OBJECT_NAME, "EMPTY")
    Call objTypedPropertyBag.AddValue(PERFORMANCE_COUNTER_NAME, "EMPTY")
    Call objTypedPropertyBag.AddValue(PERFORMANCE_INSTANCE_NAME, "EMPTY")
    Call objTypedPropertyBag.AddValue(PERFORMANCE_VALUE_NAME, "EMPTY")

    'Add the property bag to the script's XML output
    Call objMomScriptAPI.AddItem(objTypedPropertyBag)

End Sub

Private Function GetLogScriptName()

  GetLogScriptName = "-- Cluster Shared Volumes Monitoring Script -- " &amp; vbCrLf &amp; vbCrLf &amp; "Script name: " &amp; WScript.ScriptName &amp; vbCrLf &amp; "Version: " &amp; SCRIPT_VERSION &amp; vbCrLf

End Function
'****************************************************************************************************************
'   FUNCTION:       GetClusterName
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterName(ByRef strClusterName)   'As Boolean

    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim strWQLQuery 'As String
    Dim objClusters 'As SWbemObjectSet
    Dim objCluster 'As SWbemObject
    Dim bResult

    GetClusterName = False
    bResult = GetClusterNameFromRegistry(strClusterName)
    
    If (True = bResult And Len(strClusterName) &gt; 0 ) Then
      GetClusterName = bResult
      Exit Function
    End If
     
    On Error Resume Next
        Err.Clear    
      
        'Connect to WMI NS \\.\root\MSCluster
        If ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        
            strWQLQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_CLASS
            Set objClusters = objMSClusterSWbemServices.ExecQuery(strWQLQuery)
            If HasValue(objClusters) Then
                For Each objCluster In objClusters
                        strClusterName = objCluster.Name
                Next 'objCluster

                If Len(strClusterName) &gt; 0 Then GetClusterName = True
            End If
            Set objClusters = Nothing
 
        End If

   On Error Goto 0
    
End Function


'****************************************************************************************************************
'   FUNCTION:       GetClusterNameFromRegistry
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterNameFromRegistry(ByRef strClusterName)   'As Boolean

    Dim objReg     'Registry
    Const ClusterNamePath = "HKLM\Cluster\"
 
    strClusterName = GetRegistryKeyValue(ClusterNamePath,"ClusterName")
    GetClusterNameFromRegistry = Len(strClusterName) &gt; 0
    
End Function

'****************************************************************************************************************
'   FUNCTION:       GetComputerName '   DESCRIPTION:    return short computername
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function GetComputerName(strTargetComputer)
    
    Dim strComputerName
    Dim PointPos
    
        PointPos = InStr(strTargetComputer, ".")
            If PointPos &gt; 0 Then
                strComputerName = LCase(Left(strTargetComputer, PointPos - 1)) 
            Else
                strComputerName = LCase(strTargetComputer)
            End If

    GetComputerName = strComputerName 
End Function

'******************************************************************************
'   FUNCTION:       ConnectToWbemNs
'   DESCRIPTION:    Connects to a WMI namespace
'   PARAMETERS:     IN String strServerName: name of the computer. If empty the local computer will be used.
'                   IN String strNameSpace: WMI namespace
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function ConnectToWbemNS(ByRef strServerName, ByRef strNameSpace, ByRef objSWbemServices) 'As Boolean

    ConnectToWbemNS = False
    Dim objSWbemLocator 'as WbemScripting.SWbemLocator
    Set objSWbemServices = Nothing

    On Error Resume Next
        'Create a new WMI Locator object
        Set objSWbemLocator = CreateObject("WbemScripting.SWbemLocator")

        IF HasValue(objSWbemLocator) Then
            'Connect to WMI namespace on strServerName computer and create WMI Services object
            Set objSWbemServices = objSWbemLocator.ConnectServer(strServerName, strNameSpace)
        END IF

        'If object is initialised function will be successful
        ConnectToWbemNS = HasValue(objSWbemServices)

    On Error Goto 0

End Function

Private Function HasValue(Value)

    Dim bNothing
    
    bNothing = false

    IF ( IsObject(Value) ) THEN
   	    IF (Nothing is Value) THEN
     		bNothing = true
   		END IF
   	END IF	

	HasValue = Not ( IsEmpty(Value) or bNothing or IsNull(Value) )
End Function

'****************************************************************************************************************
'   FUNCTION:       GetRegistryKeyValue
'   DESCRIPTION:    Get Registry Key value.
'   PARAMETERS:     IN String keyPath: Path to search in registry.
'                   IN String Key: key to return value from
'   RETURNS:        string: Value if successful
'****************************************************************************************************************
Function GetRegistryKeyValue(ByVal keyPath, ByVal key)
  Dim oReg, strKeyValue

  strKeyValue = ""
  GetRegistryKeyValue = strKeyValue
  On Error Resume Next
    Err.Clear
    Set oReg = CreateObject("WScript.Shell")
    If Err.Number &lt;&gt; 0 Then
      Err.Clear
      Exit Function
    End If
    strKeyValue = oReg.RegRead(keyPath &amp; key)
    If Err.Number &lt;&gt; 0 Then
        Err.Clear
        Exit Function
    End If

    GetRegistryKeyValue = strKeyValue

' resume error
  On Error Goto 0

End Function

'******************************************************************************
'   Subroutine:     LogScriptEvent
'   DESCRIPTION:    Logging events to EventSource
'   PARAMETERS:     IN Integer LogType: 0 - MomScriptApi; 1 - File, 2 - Screen . 
'                   IN String Message: Event Description
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************

Sub LogScriptEvent(LogType,EventId,EventLevel,Message,objMomScriptAPI)

    Dim strMessage
    Dim sDate
    Dim LogScriptName

  On Error Resume Next  
    If (0 = LogType) Then
       If (Not HasValue(objMomScriptAPI)) Then
         Exit Sub
       End If
       LogScriptName  =  GetLogScriptName()
       Call objMomScriptAPI.LogScriptEvent(LogScriptName,EventId,EventLevel,Message)       

    Else
      sDate      = Now()
      strMessage = "" &amp; sDate &amp; Message
     
      If (1 = LogType) Then 
        WScript.Echo strMessage
      End If
      
    End If 
    
 On Error Goto 0
End Sub
</ScriptBody><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds></DataSource><ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='ClusterSharedVolumeName']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">$Config/ClusterSharedVolumeName$</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection></MemberModules><Composition><Node ID="Filter"><Node ID="DS"/></Node></Composition></Composite></ModuleImplementation><OutputType>System!System.PropertyBagData</OutputType></DataSourceModuleType><DataSourceModuleType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterSharedVolumeName" type="xsd:string"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><DataSource ID="DS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><LogSuccessEvent>$Config/LogSuccessEvent$</LogSuccessEvent><ScriptGroupId>$Config/ScriptGroupId$</ScriptGroupId><TargetComputer>$Config/TargetComputer$</TargetComputer><ClusterName>$Config/ClusterName$</ClusterName><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds><ClusterSharedVolumeName>$Config/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource><ConditionDetection ID="PerfMapper" TypeID="SystemPerf!System.Performance.DataGenericMapper"><ObjectName>$Data/Property[@Name="PerfObject"]$</ObjectName><CounterName>$Data/Property[@Name="PerfCounter"]$</CounterName><InstanceName>$Data/Property[@Name="PerfInstance"]$</InstanceName><Value>$Data/Property[@Name="PerfValue"]$</Value></ConditionDetection></MemberModules><Composition><Node ID="PerfMapper"><Node ID="DS"/></Node></Composition></Composite></ModuleImplementation><OutputType>SystemPerf!System.Performance.Data</OutputType></DataSourceModuleType><DataSourceModuleType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Discovery.ScriptDataSource" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:int"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="MPElementID" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetID" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:int"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><DataSource ID="DS" TypeID="System!System.Discovery.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Seconds">$Config/IntervalSeconds$</Interval></SimpleReccuringSchedule><ExcludeDates/></Scheduler></DataSource><ProbeAction ID="VbProbe" TypeID="Windows!Microsoft.Windows.ScriptDiscoveryProbe"><ScriptName>Microsoft.Windows.Server.DiscoverClusterDisks.vbs</ScriptName><Arguments>$Config/LogSuccessEvent$ "$Config/ScriptGroupId$" "$Config/MPElementID$" "$Config/TargetID$" "$Config/TargetComputer$" "$Config/ClusterName$"</Arguments><ScriptBody>Option Explicit
SetLocale("en-us")

Const SCRIPT_VERSION = "1.06"
Const LOG_SUCCESS_EVENT_PARAMETER_NAME = "LogSuccessEvent"
Const MP_ELEMENT_PARAMETER_NAME = "MP Element"
Const MANAGED_ENTITY_ID_PARAMETER_NAME = "Managed Entity"
Const TARGET_COMPUTER_PARAMETER_NAME = "Target Computer"
Const CLUSTER_NAME_PARAMETER_NAME = "Cluster Name"

'WMI constants
Const WMI_MSCLUSTER_NAMESPACE = "root\MSCluster"
Const WMI_CIMV2_NAMESPACE = "root\cimv2"
Const WMI_MSCLUSTER_CLUSTER_CLASS = "MSCluster_Cluster"
Const WMI_MSCLUSTER_CLUSTER_RESOURCE = "MSCluster_Resource"
Const WMI_CLUSTER_RESOURCE_TO_DISK_ASSOCIATOR_CLASS = "MSCluster_ResourceToDisk"
Const WMI_CLUSTER_DISKPARTITION_TO_DISK_ASSOCIATOR_CLASS = "MSCluster_DiskToDiskPartition"

Const WMI_MSCLUSTER_RESOURCEGROUP = "MSCluster_ResourceGroup"
Const WMI_MSCLUSTER_RESOURCEGROUP_TO_RESOURCE = "MSCluster_ResourceGroupToResource"
Const WMI_NAME_PROPERTY_NAME = "Name"
Const WMI_PATH_PROPERTY_NAME = "Path"
Const WMI_FILESYSTEM_PROPERTY_NAME = "FileSystem"
Const WMI_TOTALSIZE_PROPERTY_NAME = "TotalSize"
Const WMI_VOLUMELABEL_PROPERTY_NAME = "VolumeLabel"


'Event constants
Const EVENT_TYPE_SUCCESS 	 = 0
Const EVENT_TYPE_ERROR 		 = 1
Const EVENT_TYPE_WARNING 	 = 2
Const EVENT_TYPE_INFORMATION = 4

Const EVENT_ID_SUCCESS = 1000           'Use IDs in the range 1 - 1000
Const EVENT_ID_SCRIPTERROR = 999        'Then you can use eventcreate.exe to test the MP

Const SCRIPT_SUCCESS = 0
Const SCRIPT_WITH_ERROR = 1

'Global vars
Dim mblnLogSuccessEvent 'As Boolean
Dim mstrIdentifier 'As String
'On Error Resume Next

Call Main

'*********************************************************************************************
'   PROCEDURE:      Main
'   DESCRIPTION:    Reads the script parameters and creates the cluster disks discovery data.
'   PARAMETERS:     void
'*********************************************************************************************
Private Sub Main()

        ' Targeted at Microsoft.Windows.Cluster.VirtualServer (based on Microsoft.Windows.Server.Computer)
        Dim strSourceID 'As String  '= oArgs(4). strSourceId is the GUID of the discovery object that runs the script (MPElement).
        Dim strManagedEntityId 'As String  '= oArgs(5) - strManagedEntityId is the GUID of the computer class that is targeted by the script (Target/Id).
        Dim strTargetComputer 'As String  '= oArgs(6)
        Dim strClusterGroupName 'As String '= oArgs(7)
        Dim objMomScriptAPI 'As MOM.ScriptAPI
        Dim objDiscoveryData 'As DiscoveryData
        Dim intSuccess 'As Integer
        Dim strErrorMessage
        Dim strClusterName 


        On Error Resume Next
            Err.Clear
            Set objMomScriptAPI = CreateObject("MOM.ScriptAPI")
 
            If Err.Number &lt;&gt; 0 Then
              WScript.Quit(-1)
            End If
            
            'If Not GetClusterName(strClusterName) Then
            ' WScript.Quit(-1)
            'End If 

            If Not GetScriptParameters(strSourceID, strManagedEntityId, strTargetComputer,  strClusterName) Then
                    ' If the script is called without the required arguments,
                    ' create an information event and then quit.
                    strErrorMessage = "-- Cluster Disks Discovery Script -- The script was called with fewer than six arguments or the arguments could not be parsed."
                    Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
                    Set  objMomScriptAPI = Nothing

                    WScript.Quit (-1)
            End If

            Set objDiscoveryData = objMomScriptAPI.CreateDiscoveryData(0, strSourceID, strManagedEntityId)
            If Err.Number &lt;&gt; 0 Then
              strErrorMessage = "-- Cluster Disks Discovery Script -- Cannot create Discovery Data object."
              Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)

              Set objDiscoveryData = Nothing 
              Set objMomScriptAPI  = Nothing
              WScript.Quit(-1)
            End If

            'Discover instances
            intSuccess = DiscoverClusterDisks(strTargetComputer, strClusterName, objDiscoveryData)
            If intSuccess = SCRIPT_SUCCESS Then
                    If mblnLogSuccessEvent Then
                        strErrorMessage =  "-- Cluster Disks Discovery Script -- Script executed successfully."
                        Call LogScriptEvent(0, EVENT_ID_SUCCESS, EVENT_TYPE_INFORMATION, strErrorMessage,objMomScriptAPI)

                    End If

                    'Return discovery data
                    Call objMomScriptAPI.Return(objDiscoveryData)
            Else
                strErrorMessage = "-- Cluster Disks Discovery Script -- An error occurred while running the script."             
                Call LogScriptEvent(0, EVENT_ID_SUCCESS, EVENT_TYPE_INFORMATION, strErrorMessage,objMomScriptAPI)

            End If

            Set objDiscoveryData = Nothing 
            Set objMomScriptAPI  = Nothing
        On Error Goto 0
End Sub



'****************************************************************************************************************
'   FUNCTION:       DiscoverClusterDisks
'   DESCRIPTION:    Discover instances of the class 'Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk' using WMI.
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'                   IN String strClusterName: the cluster containing the cluster shared volume
'                   OUT Object objDiscoveryData: initialised DiscoveryData instance
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function DiscoverClusterDisks(ByRef strTargetComputer, ByRef strClusterName, ByRef objDiscoveryData) 'As Integer
    
    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim objClusterResources 'As SWbemObject
    Dim objClusterResource 'As SWbemObject
    Dim objClusterDisk 'As SWbemObject
    Dim objClusterDisks 'As SWbemObject
    Dim objClusterDiskPartition 'As SWbemObject
    Dim objClusterDiskPartitions 'As SWbemObject
    Dim intSuc 'As Integer

    Dim objResourceGroup
    Dim bIsGroupFound

    bIsGroupFound = false
    DiscoverClusterDisks =  SCRIPT_WITH_ERROR
      
    'Connect to WMI NS \\.\root\MSCluster
    If Not ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        Exit Function
    End If
   
    If Not GetClusterGroup(strTargetComputer,  objMSClusterSWbemServices, objResourceGroup) Then
        Exit Function
    End If

    IF ( Not HasValue(objResourceGroup) ) Then
      DiscoverClusterDisks = SCRIPT_SUCCESS
      Exit Function
    End If
    
    
    On Error Resume Next
        Err.Clear       

               Set objClusterResources = objResourceGroup.Associators_(WMI_MSCLUSTER_RESOURCEGROUP_TO_RESOURCE, "", "", "", False, False, "", "", 0)
                
                For Each objClusterResource In objClusterResources
                    'Get the associated disk partition
                    Set objClusterDisks     = objClusterResource.Associators_(WMI_CLUSTER_RESOURCE_TO_DISK_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
 
                    For Each objClusterDisk In objClusterDisks
                        'Get the associated resource
                        Set objClusterDiskPartitions = objClusterDisk.Associators_(WMI_CLUSTER_DISKPARTITION_TO_DISK_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
 
                        For Each objClusterDiskPartition In objClusterDiskPartitions
                             intSuc = CreateDiscoveryData(objClusterDisk, objClusterDiskPartition, objClusterResource, strTargetComputer, strClusterName, objDiscoveryData)
                            
                            If (SCRIPT_WITH_ERROR = intSuc) Then
                              Set objClusterDiskPartitions = Nothing
                              Set objClusterDisks     = Nothing
                              Set objClusterResources = Nothing 
                              Set objResourceGroups   = Nothing
                              Exit Function
                            End If 

                        Next 
                    Next 
                   
                Next
        
        DiscoverClusterDisks = SCRIPT_SUCCESS
        Set objClusterDiskPartitions = Nothing
        Set objClusterDisks     = Nothing
        Set objClusterResources = Nothing 
        Set objResourceGroups   = Nothing
 
    On Error Goto 0
End Function

'****************************************************************************************************************
'   FUNCTION:       GetClusterGroup
'   DESCRIPTION:    Get instances of the class MSCluster_ResourceGroup using WMI.
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'                   IN String strGroupName: the cluster group name
'                   OUT Object objResourceGroups: initialised ResourceGroup instance
'   RETURNS:        Boolean: True if successful and False if failed
'****************************************************************************************************************
Private Function GetClusterGroup(strTargetComputer,  objMSClusterSWbemServices, ByRef objResourceGroup)
    
    Dim objClusterResNetworks
    Dim objClusterResNet
    Dim objResGroupAsc
    Dim objResGroups
    Dim objResourceGroups
    Dim strDnsName
    Dim blnUseResource
    Dim strComputerName
    Dim strGroupName
    Dim sGroupName
    Dim IsGroupFound

    IsGroupFound          = False
    blnUseResource        = False
    GetClusterGroup       = False  
    Set objResourceGroup  = Nothing

    On Error Resume Next
        strGroupName = ""
	    If Not HasValue(objMSClusterSWbemServices) Then
	        Exit Function
	    End If

	        Err.Clear       
       		strComputerName = GetComputerName(strTargetComputer)

	        Set objClusterResNetworks = objMSClusterSWbemServices.ExecQuery("select * from " &amp; WMI_MSCLUSTER_CLUSTER_RESOURCE &amp; " where Type = 'Network Name' or Type = 'Distributed Network Name'")
	        If (Err.Number &lt;&gt; 0 Or Not HasValue(objClusterResNetworks) ) Then
                Set objClusterResNetworks = Nothing
	            Exit Function
	        End If 

	        For Each objClusterResNet In objClusterResNetworks
	           strDnsName = LCase(objClusterResNet.PrivateProperties.DnsName)
	           If Err.Number &lt;&gt; 0 Then
                    Set objClusterResNetworks = Nothing
	                Exit Function
	           End If 
	            
                If ( strComputerName = strDnsName ) Then 
	                   blnUseResource = True
                       Exit For
	            End If
            Next

            If blnUseResource = false Then
             GetClusterGroup   = True
             Exit Function
            End If
            
            Set objResGroups = objClusterResNet.Associators_(WMI_MSCLUSTER_RESOURCEGROUP_TO_RESOURCE, "", "", "", False, False, "", "", 0)
                   For Each objResGroupAsc In objResGroups 
                       strGroupName = objResGroupAsc.Name
 	                    If Err.Number &lt;&gt; 0 Then
                            Set objResGroups          = Nothing
                            Set objClusterResNetworks = Nothing
	                        Exit Function
	                    End If                   	
	                   Exit For
	               Next
	               
            If (0 = Len(strGroupName) or Not HasValue(strGroupName) ) Then
	            GetClusterGroup       = True
                Exit Function
            End If 

	        Set objResourceGroups = objMSClusterSWbemServices.ExecQuery("select * from " &amp; WMI_MSCLUSTER_RESOURCEGROUP )
	        If Err.Number &lt;&gt; 0 Then
                Exit Function        
	        End If 

            strGroupName = LCase(strGroupName)
            For Each objResourceGroup In objResourceGroups
                sGroupName =  LCase(objResourceGroup.Name) 
                If (strGroupName = sGroupName ) Then
                      IsGroupFound = True
                      Exit For
                End If
           Next

            If False = IsGroupFound Then
             Set objResourceGroup = Nothing
           	  If Err.Number = 0 Then
	            GetClusterGroup       = True
	          End If
            Else 
 	                GetClusterGroup       = True
              
            End If 


             Set objResGroups          = Nothing
             Set objClusterResNetworks = Nothing
       
    On Error Goto 0
End Function

'****************************************************************************************************************
'   FUNCTION:       CreateDiscoveryData
'   DESCRIPTION:    Create discovery data for
'                   &lt;ClassType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" Accessibility="Internal" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false"&gt;
'                       &lt;Property ID="ClusterResourceName" Type="string" Key="true" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="ClusterDiskName" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="PartitionName" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="PartitionFileSystem" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="PartitionSize" Type="int" Key="false" /&gt;
'                       &lt;Property ID="ClusterName" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                       &lt;Property ID="VolumeLabel" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" /&gt;
'                   &lt;/ClassType&gt;
'
'   PARAMETERS:     IN Object objClusterResource: the cluster disks as SWbemObject of type MSCluster_Disk.
'                   IN Object objClusterDiskPartition: the associated disk partition as SWbemObject of type MSCluster_DiskPartition.
'                   IN Object objClusterResource: the associated cluster resource as SWbemObject of type MSCluster_Resource.
'                   IN String strTargetComputer: the principal name of the targeted cluster virtual server hosting the cluster shared volume,
'                                                i.e. the cluster name and not the current owner!
'                   IN String strClusterName: the cluster containing the cluster shared volume
'                   OUT Object objDiscoveryData: initialised DiscoveryData instance
'   RETURNS:        Integer: 0 if successful or 1 if Error
'****************************************************************************************************************
Private Function CreateDiscoveryData(ByRef objClusterDisk, ByRef objClusterDiskPartition, ByRef objClusterResource, _
                                     ByRef strTargetComputer, ByRef strClusterName, ByRef objDiscoveryData) 'As Integer

    Dim objInstance 'As MOMClassInstance

    CreateDiscoveryData = SCRIPT_WITH_ERROR
    On Error Resume Next

                Err.Clear
                'Create the cluster shared volume instance hosted on the targeted cluster virtual server
                Set objInstance = objDiscoveryData.CreateClassInstance("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']$")
                If Err.number &lt;&gt; 0 Then
                   Exit Function
                End If 

                'PrincipalName (host, key)
                Call objInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", strTargetComputer)
                'ClusterSharedVolumeName (key)
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/ClusterResourceName$", objClusterResource.Properties_(WMI_NAME_PROPERTY_NAME) &amp; "_" &amp; objClusterDiskPartition.Properties_(WMI_PATH_PROPERTY_NAME))
                'FriendlyVolumeName
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/ClusterDiskName$", objClusterDisk.Properties_(WMI_NAME_PROPERTY_NAME))
                'PartitionName
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/PartitionName$", objClusterDiskPartition.Properties_(WMI_PATH_PROPERTY_NAME))
                'PartitionFileSystem
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/PartitionFileSystem$", objClusterDiskPartition.Properties_(WMI_FILESYSTEM_PROPERTY_NAME))
                'PartitionSize
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/PartitionSize$", objClusterDiskPartition.Properties_(WMI_TOTALSIZE_PROPERTY_NAME))
                'ClusterName
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/ClusterName$", strClusterName)
                'VolumeLabel
                Call objInstance.AddProperty("$MPElement[Name='Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk']/VolumeLabel$", objClusterDiskPartition.Properties_(WMI_VOLUMELABEL_PROPERTY_NAME))

                If ( 0 = Err.Number) Then
                    Call objDiscoveryData.AddInstance(objInstance)
                    If ( 0 = Err.Number) Then
                      CreateDiscoveryData = SCRIPT_SUCCESS
                    End If

                End If

               Set objInstance = Nothing
    On Error Goto 0
End Function

'******************************************************************************
'   FUNCTION:       GetScriptParameters
'   DESCRIPTION:    Reads the script's parameters
'                   and sets the global variables.
'
'   PARAMETERS:     OUT String strSourceID: Id of MP element ($MPElement$)
'                   OUT String strManagedEntityId: Id of targeted entity ($Target/Id$)
'                   OUT String strTargetComputer: Principal name of executing computer
'                                                 (-Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName-)
'                   OUT String strClusterGroupName: Cluster Group name
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function GetScriptParameters(ByRef strSourceID, ByRef strManagedEntityId, ByRef strTargetComputer, ByRef strClusterName) 'As Boolean

        Dim objArguments

        GetScriptParameters = False
        On Error Resume Next

            'cmdline: &lt;script&gt; True|False &lt;path to debug log&gt; True|False &lt;script id&gt; .MPElement. .Target/Id. .Target/Host/Property[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName.
            Set objArguments = WScript.Arguments
            If objArguments.Count &lt; 6 Then Exit Function

            Err.Clear
            'Get parameters and set global variables
            mblnLogSuccessEvent = CBool(objArguments(0))
            If (Err.Number &lt;&gt; 0 ) Then
              mblnLogSuccessEvent = False
            End If

            mstrIdentifier = Replace(objArguments(1), Chr(34), "")
            strSourceID = Replace(objArguments(2), Chr(34), "")
            strManagedEntityId = Replace(objArguments(3), Chr(34), "")
            strTargetComputer = Replace(objArguments(4), Chr(34), "")
            strClusterName = Replace(objArguments(5), Chr(34), "")

            If Len(strSourceID) &gt; 0 And Len(strManagedEntityId) &gt; 0 And Len(strTargetComputer) &gt; 0 And Len(strClusterName) &gt; 0 Then GetScriptParameters = True

        On Error Goto 0
        
End Function


Private Function GetLogScriptName()

  GetLogScriptName = "-- Cluster Disks Discovery Script -- " &amp; vbCrLf &amp; vbCrLf &amp; "Script name: " &amp; WScript.ScriptName &amp; vbCrLf &amp; "Version: " &amp; SCRIPT_VERSION &amp; vbCrLf

End Function'****************************************************************************************************************
'   FUNCTION:       GetClusterName
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterName(ByRef strClusterName)   'As Boolean

    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim strWQLQuery 'As String
    Dim objClusters 'As SWbemObjectSet
    Dim objCluster 'As SWbemObject
    Dim bResult

    GetClusterName = False
    bResult = GetClusterNameFromRegistry(strClusterName)
    
    If (True = bResult And Len(strClusterName) &gt; 0 ) Then
      GetClusterName = bResult
      Exit Function
    End If
     
    On Error Resume Next
        Err.Clear    
      
        'Connect to WMI NS \\.\root\MSCluster
        If ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        
            strWQLQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_CLASS
            Set objClusters = objMSClusterSWbemServices.ExecQuery(strWQLQuery)
            If HasValue(objClusters) Then
                For Each objCluster In objClusters
                        strClusterName = objCluster.Name
                Next 'objCluster

                If Len(strClusterName) &gt; 0 Then GetClusterName = True
            End If
            Set objClusters = Nothing
 
        End If

   On Error Goto 0
    
End Function


'****************************************************************************************************************
'   FUNCTION:       GetClusterNameFromRegistry
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterNameFromRegistry(ByRef strClusterName)   'As Boolean

    Dim objReg     'Registry
    Const ClusterNamePath = "HKLM\Cluster\"
 
    strClusterName = GetRegistryKeyValue(ClusterNamePath,"ClusterName")
    GetClusterNameFromRegistry = Len(strClusterName) &gt; 0
    
End Function

'****************************************************************************************************************
'   FUNCTION:       GetComputerName '   DESCRIPTION:    return short computername
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function GetComputerName(strTargetComputer)
    
    Dim strComputerName
    Dim PointPos
    
        PointPos = InStr(strTargetComputer, ".")
            If PointPos &gt; 0 Then
                strComputerName = LCase(Left(strTargetComputer, PointPos - 1)) 
            Else
                strComputerName = LCase(strTargetComputer)
            End If

    GetComputerName = strComputerName 
End Function

'******************************************************************************
'   FUNCTION:       ConnectToWbemNs
'   DESCRIPTION:    Connects to a WMI namespace
'   PARAMETERS:     IN String strServerName: name of the computer. If empty the local computer will be used.
'                   IN String strNameSpace: WMI namespace
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function ConnectToWbemNS(ByRef strServerName, ByRef strNameSpace, ByRef objSWbemServices) 'As Boolean

    ConnectToWbemNS = False
    Dim objSWbemLocator 'as WbemScripting.SWbemLocator
    Set objSWbemServices = Nothing

    On Error Resume Next
        'Create a new WMI Locator object
        Set objSWbemLocator = CreateObject("WbemScripting.SWbemLocator")

        IF HasValue(objSWbemLocator) Then
            'Connect to WMI namespace on strServerName computer and create WMI Services object
            Set objSWbemServices = objSWbemLocator.ConnectServer(strServerName, strNameSpace)
        END IF

        'If object is initialised function will be successful
        ConnectToWbemNS = HasValue(objSWbemServices)

    On Error Goto 0

End Function

Private Function HasValue(Value)

    Dim bNothing
    
    bNothing = false

    IF ( IsObject(Value) ) THEN
   	    IF (Nothing is Value) THEN
     		bNothing = true
   		END IF
   	END IF	

	HasValue = Not ( IsEmpty(Value) or bNothing or IsNull(Value) )
End Function

'****************************************************************************************************************
'   FUNCTION:       GetRegistryKeyValue
'   DESCRIPTION:    Get Registry Key value.
'   PARAMETERS:     IN String keyPath: Path to search in registry.
'                   IN String Key: key to return value from
'   RETURNS:        string: Value if successful
'****************************************************************************************************************
Function GetRegistryKeyValue(ByVal keyPath, ByVal key)
  Dim oReg, strKeyValue

  strKeyValue = ""
  GetRegistryKeyValue = strKeyValue
  On Error Resume Next
    Err.Clear
    Set oReg = CreateObject("WScript.Shell")
    If Err.Number &lt;&gt; 0 Then
      Err.Clear
      Exit Function
    End If
    strKeyValue = oReg.RegRead(keyPath &amp; key)
    If Err.Number &lt;&gt; 0 Then
        Err.Clear
        Exit Function
    End If

    GetRegistryKeyValue = strKeyValue

' resume error
  On Error Goto 0

End Function

'******************************************************************************
'   Subroutine:     LogScriptEvent
'   DESCRIPTION:    Logging events to EventSource
'   PARAMETERS:     IN Integer LogType: 0 - MomScriptApi; 1 - File, 2 - Screen . 
'                   IN String Message: Event Description
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************

Sub LogScriptEvent(LogType,EventId,EventLevel,Message,objMomScriptAPI)

    Dim strMessage
    Dim sDate
    Dim LogScriptName

  On Error Resume Next  
    If (0 = LogType) Then
       If (Not HasValue(objMomScriptAPI)) Then
         Exit Sub
       End If
       LogScriptName  =  GetLogScriptName()
       Call objMomScriptAPI.LogScriptEvent(LogScriptName,EventId,EventLevel,Message)       

    Else
      sDate      = Now()
      strMessage = "" &amp; sDate &amp; Message
     
      If (1 = LogType) Then 
        WScript.Echo strMessage
      End If
      
    End If 
    
 On Error Goto 0
End Sub
</ScriptBody><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds></ProbeAction></MemberModules><Composition><Node ID="VbProbe"><Node ID="DS"/></Node></Composition></Composite></ModuleImplementation><OutputType>System!System.Discovery.Data</OutputType></DataSourceModuleType><DataSourceModuleType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterResourceName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CounterName" type="xsd:string"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PropertyBagProvider"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><ScriptName>Microsoft.Windows.Server.MonitorClusterDisks.vbs</ScriptName><Arguments>$Config/LogSuccessEvent$ "$Config/ScriptGroupId$" "$Config/TargetComputer$" "$Config/ClusterName$"</Arguments><ScriptBody>Option Explicit
SetLocale("en-us")

Const SCRIPT_VERSION = "1.06"
Const LOG_SUCCESS_EVENT_PARAMETER_NAME = "LogSuccessEvent"
Const MP_ELEMENT_PARAMETER_NAME = "MP Element"
Const MANAGED_ENTITY_ID_PARAMETER_NAME = "Managed Entity"
Const TARGET_COMPUTER_PARAMETER_NAME = "Target Computer"
Const CLUSTER_NAME_PARAMETER_NAME = "Cluster Name"

'WMI constants
Const WMI_MSCLUSTER_NAMESPACE = "root\MSCluster"
Const WMI_CIMV2_NAMESPACE = "root\cimv2"
Const WMI_MSCLUSTER_CLUSTER_RESOURCE = "MSCluster_Resource"
Const WMI_CLUSTER_RESOURCE_TO_DISK_ASSOCIATOR_CLASS = "MSCluster_ResourceToDisk"
Const WMI_CLUSTER_DISKPARTITION_TO_DISK_ASSOCIATOR_CLASS = "MSCluster_DiskToDiskPartition"

Const WMI_MSCLUSTER_CLUSTER_CLASS = "MSCluster_Cluster"
Const WMI_NAME_PROPERTY_NAME = "Name"
Const WMI_PATH_PROPERTY_NAME = "Path"
Const WMI_FILESYSTEM_PROPERTY_NAME = "FileSystem"
Const WMI_TOTALSIZE_PROPERTY_NAME = "TotalSize"
Const WMI_FREESPACE_PROPERTY_NAME = "FreeSpace"
Const WMI_VOLUMELABEL_PROPERTY_NAME = "VolumeLabel"

'State property bag constants
Const STATE_DATA_TYPE = 3
Const STATE_PROPERTY_NAME = "State"

'Performance property bag constants
Const INSTANCE_NAME = "ClusterDiskName"
Const PERFORMANCE_DATA_TYPE = 2
Const PERFORMANCE_OBJECT_NAME = "PerfObject"
Const PERFORMANCE_COUNTER_NAME = "PerfCounter"
Const PERFORMANCE_INSTANCE_NAME = "PerfInstance"
Const PERFORMANCE_VALUE_NAME = "PerfValue"
Const PERF_OBJECT_CSV = "Cluster Disk"
Const PERF_COUNTER_TOTAL_SIZE_MB = "Total size / MB"
Const PERF_COUNTER_FREE_SPACE_MB = "Free space / MB"
Const PERF_COUNTER_FREE_SPACE_PERCENT = "Free space / Percent"

'Event constants
Const EVENT_TYPE_SUCCESS = 0
Const EVENT_TYPE_ERROR = 1
Const EVENT_TYPE_WARNING = 2
Const EVENT_TYPE_INFORMATION = 4

Const EVENT_ID_SUCCESS = 1000           'Use IDs in the range 1 - 1000
Const EVENT_ID_SCRIPTERROR = 999        'Then you can use eventcreate.exe to test the MP

'Global vars
Dim mblnLogSuccessEvent 'As Boolean
Dim mstrIdentifier 'As String


Call Main

'*********************************************************************************************
'   PROCEDURE:      Main
'   DESCRIPTION:    Reads the script parameters and creates the cluster disk monitoring data.
'   PARAMETERS:     void
'*********************************************************************************************
Private Sub Main()

        ' Targeted at Microsoft.Windows.Cluster.VirtualServer (based on Microsoft.Windows.Server.Computer)
        Dim objFSO 'As Scripting.FileSystemObject
        Dim boolNoMonitoredClusterDiskAvailable 
    
        Dim strTargetComputer 'As String  '= oArgs(6)
        Dim strClusterName 'As String '= oArgs(7)
        Dim objMomScriptAPI 'As MOM.ScriptAPI
        Dim blnSuccess 'As Boolean
        Dim strErrorMessage
        
        On Error Resume Next
            Err.Clear

            Set objMomScriptAPI = CreateObject("MOM.ScriptAPI")
            If Err.Number &lt;&gt; 0 Then
              Exit Sub
            End If

            If Not GetScriptParameters(strTargetComputer, strClusterName) Then
                    ' If the script is called without the required arguments,
                    ' create an information event and then quit.
                    strErrorMessage = "The script was called with fewer than four arguments or the arguments could not be parsed."
                    Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
                    WScript.Quit(-1)
            End If

            'Monitor instances
            blnSuccess = MonitorClusterDisks(strTargetComputer, strClusterName, objMomScriptAPI, boolNoMonitoredClusterDiskAvailable)

            If blnSuccess Then
                    If mblnLogSuccessEvent Then
                        strErrorMessage = "Script executed successfully."
                        Call LogScriptEvent(0, EVENT_ID_SUCCESS, EVENT_TYPE_INFORMATION, strErrorMessage,objMomScriptAPI)
                     End If
                    'Return the typed property bags
                    If boolNoMonitoredClusterDiskAvailable = true Then 
                          CreateEmptyTypedPropertyBag(objMomScriptAPI)
                    End If
            
            Else
                    CreateEmptyTypedPropertyBag(objMomScriptAPI)
                    strErrorMessage = "TAn error occurred while running script"
                    Call LogScriptEvent(0, EVENT_ID_SCRIPTERROR, EVENT_TYPE_WARNING, strErrorMessage,objMomScriptAPI)
            End If
 
           Call objMomScriptAPI.ReturnItems

           Set objMomScriptAPI = Nothing
End Sub



'****************************************************************************************************************
'   FUNCTION:       MonitorClusterDisks
'   DESCRIPTION:    Creates monitoring data for all instances of the class 'Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk' using WMI.
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'                   IN String strClusterName: the cluster containing the cluster shared volume
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function MonitorClusterDisks(ByRef strTargetComputer, ByRef strClusterName, ByRef objMomScriptAPI, ByRef boolNoMonitoredClusterDiskAvailable) 'As Boolean
    
    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim objClusterResources 'As SWbemObject
    Dim objClusterResource 'As SWbemObject
    Dim objClusterDisk 'As SWbemObject
    Dim objClusterDiskPartition 'As SWbemObject
    Dim objClusterDisks 'As SWbemObject
    Dim objClusterDiskPartitions 'As SWbemObject

    Dim blnSuccess 'As Boolean
    Dim strOSVersion 
    Dim strWMIQuery
    Dim InstancesCount

    InstancesCount = 0
    MonitorClusterDisks = false
    blnSuccess = true   
    boolNoMonitoredClusterDiskAvailable = true

    'Connect to WMI NS \\.\root\MSCluster
    If Not ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        boolNoMonitoredClusterDiskAvailable = true
        Exit Function
    End If
    
    On Error Resume Next
        
        Err.Clear
        strOSVersion = GetRegistryKeyValue("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\", "CurrentVersion")
        
        'Adding OS Validation to use propert WMI query to get correct instances
        'ResourceClass and IsClusterSharedVolume properties are not available in Windows 2008 OS, only 2008 R2 and beyond.
        If (0 = Len(strOSVersion)) Then
          Exit Function
        End If

        If (strOSVersion = "6.0") Then
            strWMIQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_RESOURCE 
            '&amp; " where CoreResource = FALSE"
        Else
            strWMIQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_RESOURCE &amp; " where ResourceClass = 1 and IsClusterSharedVolume = FALSE" 
            '"and CoreResource = FALSE"
        End If

        Set objClusterResources = objMSClusterSWbemServices.ExecQuery(strWMIQuery)
        If (Err.Number &lt;&gt; 0 Or Not HasValue(objClusterResources) ) Then
          Exit Function
        End If

        'Loop through all returned cluster resources
        For Each objClusterResource In objClusterResources
            'Get the associated disk partition
            Set objClusterDisks = objClusterResource.Associators_(WMI_CLUSTER_RESOURCE_TO_DISK_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
            For Each objClusterDisk In   objClusterDisks             'Get the associated resource
                Set objClusterDiskPartitions =  objClusterDisk.Associators_(WMI_CLUSTER_DISKPARTITION_TO_DISK_ASSOCIATOR_CLASS, "", "", "", False, False, "", "", 0)
                For Each objClusterDiskPartition In objClusterDiskPartitions
                   blnSuccess = CreateMonitoringData(objClusterDisk, objClusterDiskPartition, objClusterResource,strTargetComputer, strClusterName, objMomScriptAPI)
                   If (false = blnSuccess) Then
                         InstancesCount = 1
                   Else
                      If (0 = InstancesCount) Then
                        InstancesCount = 2
                      End If
                   End If 
                Next 'objClusterDiskPartition
            Next 'objClusterDisk
        Next 'objClusterResource

        If (InstancesCount = 2) Then
            boolNoMonitoredClusterDiskAvailable = false
        End If
         
        MonitorClusterDisks = True
 
        Set objClusterDiskPartitions = Nothing
        Set objClusterDisks          = Nothing
        Set objClusterResources      = Nothing
 
    On Error Goto 0 
End Function

'****************************************************************************************************************
'   FUNCTION:       CreateMonitoringData
'   DESCRIPTION:    Create monitoring data for a cluster shared volume.
'
'   PARAMETERS:     IN Object objClusterResource: the cluster disks as SWbemObject of type MSCluster_Disk.
'                   IN Object objClusterDiskPartition: the associated disk partition as SWbemObject of type MSCluster_DiskPartition.
'                   IN Object objClusterResource: the associated cluster resource as SWbemObject of type MSCluster_Resource.
'                   IN String strTargetComputer: the principal name of the targeted cluster virtual server hosting the cluster shared volume,
'                                                i.e. the cluster name and not the current owner!
'                   IN String strClusterName: the cluster containing the cluster shared volume
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function CreateMonitoringData(ByRef objClusterDisk, ByRef objClusterDiskPartition, ByRef objClusterResource, _
                                     ByRef strTargetComputer, ByRef strClusterName, ByRef objMomScriptAPI) 'As Boolean

    'Create performance data
    Dim strPartitionName 'As String
    CreateMonitoringData = False
     
    On Error Resume Next
        Err.Clear    
        strPartitionName = objClusterResource.Properties_(WMI_NAME_PROPERTY_NAME) &amp; "_" &amp; objClusterDiskPartition.Properties_(WMI_PATH_PROPERTY_NAME)
    
        'Total Size /MB
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_TOTAL_SIZE_MB, strPartitionName, _
                                          objClusterDiskPartition.Properties_(WMI_TOTALSIZE_PROPERTY_NAME), strPartitionName, objMomScriptAPI)

        'Free Space /MB
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_FREE_SPACE_MB, strPartitionName, _
                                          objClusterDiskPartition.Properties_(WMI_FREESPACE_PROPERTY_NAME), strPartitionName, objMomScriptAPI)
    
        'Free Space /%
        Call CreatePerformanceTypedPropertyBag(PERF_OBJECT_CSV, PERF_COUNTER_FREE_SPACE_PERCENT, strPartitionName, _
                                          Round(CLng(objClusterDiskPartition.Properties_(WMI_FREESPACE_PROPERTY_NAME)) / CLng(objClusterDiskPartition.Properties_(WMI_TOTALSIZE_PROPERTY_NAME)) * 100), _
                                          strPartitionName, objMomScriptAPI)


        If (0 = Err.Number) Then
            CreateMonitoringData = True
        End If

    On Error Goto 0
End Function

'******************************************************************************
'   FUNCTION:       GetScriptParameters
'   DESCRIPTION:    Reads the script's parameters
'                   and sets the global variables.
'
'   PARAMETERS:     OUT String strTargetComputer: Principal name of executing computer
'                                                 (-Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName-)
'                   OUT String strClusterName: Cluster name
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function GetScriptParameters(ByRef strTargetComputer, ByRef strClusterName) 'As Boolean

        Dim objArguments

        On Error Resume Next

            'cmdline: &lt;script&gt; True|False &lt;path to debug log&gt; True|False &lt;script id&gt; .MPElement. .Target/Id. .Target/Property[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName.
            Set objArguments = WScript.Arguments
            If objArguments.Count &lt; 4 Then Exit Function

            Err.Clear
            'Get parameters and set global variables
            mblnLogSuccessEvent = CBool(objArguments(0))
            If (Err.Number &lt;&gt; 0 ) Then
              mblnLogSuccessEvent = False
            End If

            mstrIdentifier = Replace(objArguments(1), Chr(34), "")
            strTargetComputer = Replace(objArguments(2), Chr(34), "")
            strClusterName = Replace(objArguments(3), Chr(34), "")

            If Len(strTargetComputer) &gt; 0 And Len(strClusterName) &gt; 0 Then GetScriptParameters = True
       On Error Goto 0
End Function



'***************************************************************************************
'   PROCEDURE:      CreatePerformanceTypedPropertyBag
'   DESCRIPTION:    Generates a performance typed property bag and adds it to the script's XML output.
'   PARAMETERS:     IN String strObjectName: name of the performance object
'                   IN String strCounterName: name of the performance counter
'                   IN String strInstanceName: name of the performance counter in instance
'                   IN Variant varValue: value of the performance counter
'                   IN String strCSVInstanceName: Friendly volume name of the cluster shared volume
'                   IN Object objMomScriptAPI: initialised MOM.ScriptAPI object
'***************************************************************************************
Sub CreatePerformanceTypedPropertyBag(ByRef strObjectName, ByRef strCounterName, ByRef strInstanceName, _
                                      ByRef varValue, ByRef strCSVInstanceName, ByRef objMomScriptAPI)

    Dim objTypedPropertyBag 'As MOM.ScriptAPI.TypedPropertyBag
    
   
        'Create a new typed property bag of the performance data type
        Set objTypedPropertyBag = objMomScriptAPI.CreateTypedPropertyBag(PERFORMANCE_DATA_TYPE)

        'Add the values for the perf counter's object name, counter name, instance name and the value)
        Call objTypedPropertyBag.AddValue(PERFORMANCE_OBJECT_NAME, CStr(strObjectName))
        Call objTypedPropertyBag.AddValue(PERFORMANCE_COUNTER_NAME, CStr(strCounterName))
        Call objTypedPropertyBag.AddValue(PERFORMANCE_INSTANCE_NAME, CStr(strInstanceName))
        Call objTypedPropertyBag.AddValue(PERFORMANCE_VALUE_NAME, CStr(varValue))
    
        'Necessary information for the property bag data source filter condition
        'to enable Agent cook down
        Call objTypedPropertyBag.AddValue(INSTANCE_NAME, CStr(strCSVInstanceName))
    
        'Add the property bag to the script's XML output
        Call objMomScriptAPI.AddItem(objTypedPropertyBag)
  
End Sub

'***************************************************************************************
'   PROCEDURE:      CreateEmptyTypedPropertyBag
'   DESCRIPTION:    Generates a empty performance typed property bag and adds it to the script's XML output.
'   PARAMETERS:     IN Object objMomScriptAPI: initialised MOM.ScriptAPI object
'***************************************************************************************
Sub CreateEmptyTypedPropertyBag(ByRef objMomScriptAPI)

    Dim objTypedPropertyBag 'As MOM.ScriptAPI.TypedPropertyBag
    
    'Create a new typed property bag of the performance data type
    Set objTypedPropertyBag = objMomScriptAPI.CreateTypedPropertyBag(PERFORMANCE_DATA_TYPE)

    Call objTypedPropertyBag.AddValue(PERFORMANCE_OBJECT_NAME, "EMPTY")
    Call objTypedPropertyBag.AddValue(PERFORMANCE_COUNTER_NAME, "EMPTY")
    Call objTypedPropertyBag.AddValue(PERFORMANCE_INSTANCE_NAME, "EMPTY")
    Call objTypedPropertyBag.AddValue(PERFORMANCE_VALUE_NAME, "EMPTY")

    'Add the property bag to the script's XML output
    Call objMomScriptAPI.AddItem(objTypedPropertyBag)

End Sub

Private Function GetLogScriptName()

  GetLogScriptName = "-- Cluster Disks Monitoring Script -- " &amp; vbCrLf &amp; vbCrLf &amp; "Script name: " &amp; WScript.ScriptName &amp; vbCrLf &amp; "Version: " &amp; SCRIPT_VERSION &amp; vbCrLf

End Function

'****************************************************************************************************************
'   FUNCTION:       GetClusterName
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterName(ByRef strClusterName)   'As Boolean

    Dim objMSClusterSWbemServices 'As SWbemServices
    Dim strWQLQuery 'As String
    Dim objClusters 'As SWbemObjectSet
    Dim objCluster 'As SWbemObject
    Dim bResult

    GetClusterName = False
    bResult = GetClusterNameFromRegistry(strClusterName)
    
    If (True = bResult And Len(strClusterName) &gt; 0 ) Then
      GetClusterName = bResult
      Exit Function
    End If
     
    On Error Resume Next
        Err.Clear    
      
        'Connect to WMI NS \\.\root\MSCluster
        If ConnectToWbemNS(".", WMI_MSCLUSTER_NAMESPACE, objMSClusterSWbemServices) Then
        
            strWQLQuery = "select * from " &amp; WMI_MSCLUSTER_CLUSTER_CLASS
            Set objClusters = objMSClusterSWbemServices.ExecQuery(strWQLQuery)
            If HasValue(objClusters) Then
                For Each objCluster In objClusters
                        strClusterName = objCluster.Name
                Next 'objCluster

                If Len(strClusterName) &gt; 0 Then GetClusterName = True
            End If
            Set objClusters = Nothing
 
        End If

   On Error Goto 0
    
End Function


'****************************************************************************************************************
'   FUNCTION:       GetClusterNameFromRegistry
'   DESCRIPTION:    Returns the cluster name of the given cluster virtual name
'   PARAMETERS:     OUT String strClusterName: string to return the cluster name
'   RETURNS:        Boolean: True if successful
'****************************************************************************************************************
Private Function GetClusterNameFromRegistry(ByRef strClusterName)   'As Boolean

    Dim objReg     'Registry
    Const ClusterNamePath = "HKLM\Cluster\"
 
    strClusterName = GetRegistryKeyValue(ClusterNamePath,"ClusterName")
    GetClusterNameFromRegistry = Len(strClusterName) &gt; 0
    
End Function

'****************************************************************************************************************
'   FUNCTION:       GetComputerName '   DESCRIPTION:    return short computername
'   PARAMETERS:     IN String strTargetComputer: principal name of the targeted 'Microsoft.Windows.Cluster.VirtualServer' instance.
'   RETURNS:        Integer: 0 if successful and 1 if fails
'****************************************************************************************************************
Private Function GetComputerName(strTargetComputer)
    
    Dim strComputerName
    Dim PointPos
    
        PointPos = InStr(strTargetComputer, ".")
            If PointPos &gt; 0 Then
                strComputerName = LCase(Left(strTargetComputer, PointPos - 1)) 
            Else
                strComputerName = LCase(strTargetComputer)
            End If

    GetComputerName = strComputerName 
End Function

'******************************************************************************
'   FUNCTION:       ConnectToWbemNs
'   DESCRIPTION:    Connects to a WMI namespace
'   PARAMETERS:     IN String strServerName: name of the computer. If empty the local computer will be used.
'                   IN String strNameSpace: WMI namespace
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************
Private Function ConnectToWbemNS(ByRef strServerName, ByRef strNameSpace, ByRef objSWbemServices) 'As Boolean

    ConnectToWbemNS = False
    Dim objSWbemLocator 'as WbemScripting.SWbemLocator
    Set objSWbemServices = Nothing

    On Error Resume Next
        'Create a new WMI Locator object
        Set objSWbemLocator = CreateObject("WbemScripting.SWbemLocator")

        IF HasValue(objSWbemLocator) Then
            'Connect to WMI namespace on strServerName computer and create WMI Services object
            Set objSWbemServices = objSWbemLocator.ConnectServer(strServerName, strNameSpace)
        END IF

        'If object is initialised function will be successful
        ConnectToWbemNS = HasValue(objSWbemServices)

    On Error Goto 0

End Function

Private Function HasValue(Value)

    Dim bNothing
    
    bNothing = false

    IF ( IsObject(Value) ) THEN
   	    IF (Nothing is Value) THEN
     		bNothing = true
   		END IF
   	END IF	

	HasValue = Not ( IsEmpty(Value) or bNothing or IsNull(Value) )
End Function

'****************************************************************************************************************
'   FUNCTION:       GetRegistryKeyValue
'   DESCRIPTION:    Get Registry Key value.
'   PARAMETERS:     IN String keyPath: Path to search in registry.
'                   IN String Key: key to return value from
'   RETURNS:        string: Value if successful
'****************************************************************************************************************
Function GetRegistryKeyValue(ByVal keyPath, ByVal key)
  Dim oReg, strKeyValue

  strKeyValue = ""
  GetRegistryKeyValue = strKeyValue
  On Error Resume Next
    Err.Clear
    Set oReg = CreateObject("WScript.Shell")
    If Err.Number &lt;&gt; 0 Then
      Err.Clear
      Exit Function
    End If
    strKeyValue = oReg.RegRead(keyPath &amp; key)
    If Err.Number &lt;&gt; 0 Then
        Err.Clear
        Exit Function
    End If

    GetRegistryKeyValue = strKeyValue

' resume error
  On Error Goto 0

End Function

'******************************************************************************
'   Subroutine:     LogScriptEvent
'   DESCRIPTION:    Logging events to EventSource
'   PARAMETERS:     IN Integer LogType: 0 - MomScriptApi; 1 - File, 2 - Screen . 
'                   IN String Message: Event Description
'                   OUT Object objSWbemServices: WbemScripting.SWbemServices object connected to the given
'                                                namespace on the given server
'   RETURNS:        Boolean: True if successful
'******************************************************************************

Sub LogScriptEvent(LogType,EventId,EventLevel,Message,objMomScriptAPI)

    Dim strMessage
    Dim sDate
    Dim LogScriptName

  On Error Resume Next  
    If (0 = LogType) Then
       If (Not HasValue(objMomScriptAPI)) Then
         Exit Sub
       End If
       LogScriptName  =  GetLogScriptName()
       Call objMomScriptAPI.LogScriptEvent(LogScriptName,EventId,EventLevel,Message)       

    Else
      sDate      = Now()
      strMessage = "" &amp; sDate &amp; Message
     
      If (1 = LogType) Then 
        WScript.Echo strMessage
      End If
      
    End If 
    
 On Error Goto 0
End Sub
</ScriptBody><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds></DataSource><ConditionDetection ID="PerfMapper" TypeID="SystemPerf!System.Performance.DataGenericMapper"><ObjectName>$Data/Property[@Name='PerfObject']$</ObjectName><CounterName>$Data/Property[@Name='PerfCounter']$</CounterName><InstanceName>$Data/Property[@Name='PerfInstance']$</InstanceName><Value>$Data/Property[@Name='PerfValue']$</Value></ConditionDetection><ConditionDetection ID="InstanceFilter" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='PerfInstance']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">$Config/ClusterResourceName$</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='PerfCounter']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">$Config/CounterName$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection></MemberModules><Composition><Node ID="PerfMapper"><Node ID="InstanceFilter"><Node ID="DS"/></Node></Node></Composition></Composite></ModuleImplementation><OutputType>SystemPerf!System.Performance.Data</OutputType></DataSourceModuleType><ConditionDetectionModuleType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfFilterMapper" Accessibility="Internal" Batching="false" Stateful="false" PassThrough="false"><Configuration><IncludeSchemaTypes><SchemaType>System!System.ExpressionEvaluatorSchema</SchemaType></IncludeSchemaTypes><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Expression" type="ExpressionType"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ObjectName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CounterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Value" type="xsd:string"/></Configuration><OverrideableParameters><OverrideableParameter ID="ObjectName" Selector="$Config/ObjectName$" ParameterType="string"/><OverrideableParameter ID="CounterName" Selector="$Config/CounterName$" ParameterType="string"/><OverrideableParameter ID="InstanceName" Selector="$Config/InstanceName$" ParameterType="string"/><OverrideableParameter ID="Value" Selector="$Config/Value$" ParameterType="string"/></OverrideableParameters><ModuleImplementation Isolation="Any"><Composite><MemberModules><ConditionDetection ID="FilterPerf" TypeID="System!System.ExpressionFilter"><Expression>$Config/Expression$</Expression></ConditionDetection><ConditionDetection ID="PerfMapper" TypeID="SystemPerf!System.Performance.DataGenericMapper"><ObjectName>$Config/ObjectName$</ObjectName><CounterName>$Config/CounterName$</CounterName><InstanceName>$Config/InstanceName$</InstanceName><Value>$Config/Value$</Value></ConditionDetection></MemberModules><Composition><Node ID="PerfMapper"><Node ID="FilterPerf"/></Node></Composition></Composite></ModuleImplementation><OutputType>SystemPerf!System.Performance.Data</OutputType><InputTypes><InputType>System!System.BaseData</InputType></InputTypes></ConditionDetectionModuleType></ModuleTypes><MonitorTypes><UnitMonitorType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" Accessibility="Public"><MonitorTypeStates><MonitorTypeState ID="MonitorOk" NoDetection="false"/><MonitorTypeState ID="MonitorError" NoDetection="false"/></MonitorTypeStates><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterSharedVolumeName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="GOODPattern" type="xsd:string"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><MonitorImplementation><MemberModules><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><LogSuccessEvent>$Config/LogSuccessEvent$</LogSuccessEvent><ScriptGroupId>$Config/ScriptGroupId$</ScriptGroupId><TargetComputer>$Config/TargetComputer$</TargetComputer><ClusterName>$Config/ClusterName$</ClusterName><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds><ClusterSharedVolumeName>$Config/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource><ProbeAction ID="OnDemandReset" TypeID="System!System.PassThroughProbe"/><ConditionDetection ID="FilterOK" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">State</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="Double">$Config/GOODPattern$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterError" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">State</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="Double">$Config/GOODPattern$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection></MemberModules><RegularDetections><RegularDetection MonitorTypeStateID="MonitorOk"><Node ID="FilterOK"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorError"><Node ID="FilterError"><Node ID="ScriptDS"/></Node></RegularDetection></RegularDetections><OnDemandDetections><OnDemandDetection MonitorTypeStateID="MonitorOk"><Node ID="OnDemandReset"/></OnDemandDetection></OnDemandDetections></MonitorImplementation></UnitMonitorType><UnitMonitorType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.Monitortype" Accessibility="Public"><MonitorTypeStates><MonitorTypeState ID="MonitorOk" NoDetection="false"/><MonitorTypeState ID="MonitorError" NoDetection="false"/></MonitorTypeStates><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterSharedVolumeName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="BADPattern" type="xsd:string"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/></OverrideableParameters><MonitorImplementation><MemberModules><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><LogSuccessEvent>$Config/LogSuccessEvent$</LogSuccessEvent><ScriptGroupId>$Config/ScriptGroupId$</ScriptGroupId><TargetComputer>$Config/TargetComputer$</TargetComputer><ClusterName>$Config/ClusterName$</ClusterName><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds><ClusterSharedVolumeName>$Config/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource><ProbeAction ID="OnDemandReset" TypeID="System!System.PassThroughProbe"/><ConditionDetection ID="FilterOK" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">NTFSIsDirty</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="Double">$Config/BADPattern$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterError" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">NTFSIsDirty</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="Double">$Config/BADPattern$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection></MemberModules><RegularDetections><RegularDetection MonitorTypeStateID="MonitorOk"><Node ID="FilterOK"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorError"><Node ID="FilterError"><Node ID="ScriptDS"/></Node></RegularDetection></RegularDetections><OnDemandDetections><OnDemandDetection MonitorTypeStateID="MonitorOk"><Node ID="OnDemandReset"/></OnDemandDetection></OnDemandDetections></MonitorImplementation></UnitMonitorType><UnitMonitorType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" Accessibility="Public"><MonitorTypeStates><MonitorTypeState ID="MonitorOk" NoDetection="false"/><MonitorTypeState ID="MonitorWarning" NoDetection="false"/><MonitorTypeState ID="MonitorError" NoDetection="false"/></MonitorTypeStates><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterSharedVolumeName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DriveErrorMBytesThreshold" type="xsd:double"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DriveWarningMBytesThreshold" type="xsd:double"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/><OverrideableParameter ID="DriveErrorMBytesThreshold" Selector="$Config/DriveErrorMBytesThreshold$" ParameterType="double"/><OverrideableParameter ID="DriveWarningMBytesThreshold" Selector="$Config/DriveWarningMBytesThreshold$" ParameterType="double"/></OverrideableParameters><MonitorImplementation><MemberModules><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><LogSuccessEvent>$Config/LogSuccessEvent$</LogSuccessEvent><ScriptGroupId>$Config/ScriptGroupId$</ScriptGroupId><TargetComputer>$Config/TargetComputer$</TargetComputer><ClusterName>$Config/ClusterName$</ClusterName><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds><ClusterSharedVolumeName>$Config/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource><ProbeAction ID="OnDemandReset" TypeID="System!System.PassThroughProbe"/><ConditionDetection ID="FilterOK" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / MB</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>GreaterEqual</Operator><ValueExpression><Value Type="Double">$Config/DriveWarningMBytesThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterWarning" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / MB</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Less</Operator><ValueExpression><Value Type="Double">$Config/DriveWarningMBytesThreshold$</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>GreaterEqual</Operator><ValueExpression><Value Type="Double">$Config/DriveErrorMBytesThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterError" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / MB</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Less</Operator><ValueExpression><Value Type="Double">$Config/DriveErrorMBytesThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection></MemberModules><RegularDetections><RegularDetection MonitorTypeStateID="MonitorOk"><Node ID="FilterOK"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorWarning"><Node ID="FilterWarning"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorError"><Node ID="FilterError"><Node ID="ScriptDS"/></Node></RegularDetection></RegularDetections><OnDemandDetections><OnDemandDetection MonitorTypeStateID="MonitorOk"><Node ID="OnDemandReset"/></OnDemandDetection></OnDemandDetections></MonitorImplementation></UnitMonitorType><UnitMonitorType ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" Accessibility="Public"><MonitorTypeStates><MonitorTypeState ID="MonitorOk" NoDetection="false"/><MonitorTypeState ID="MonitorWarning" NoDetection="false"/><MonitorTypeState ID="MonitorError" NoDetection="false"/></MonitorTypeStates><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterSharedVolumeName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DriveErrorPercentThreshold" type="xsd:double"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DriveWarningPercentThreshold" type="xsd:double"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="ScriptGroupId" Selector="$Config/ScriptGroupId$" ParameterType="string"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/><OverrideableParameter ID="DriveErrorPercentThreshold" Selector="$Config/DriveErrorPercentThreshold$" ParameterType="double"/><OverrideableParameter ID="DriveWarningPercentThreshold" Selector="$Config/DriveWarningPercentThreshold$" ParameterType="double"/></OverrideableParameters><MonitorImplementation><MemberModules><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><LogSuccessEvent>$Config/LogSuccessEvent$</LogSuccessEvent><ScriptGroupId>$Config/ScriptGroupId$</ScriptGroupId><TargetComputer>$Config/TargetComputer$</TargetComputer><ClusterName>$Config/ClusterName$</ClusterName><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds><ClusterSharedVolumeName>$Config/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource><ProbeAction ID="OnDemandReset" TypeID="System!System.PassThroughProbe"/><ConditionDetection ID="FilterOK" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / Percent</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>GreaterEqual</Operator><ValueExpression><Value Type="Double">$Config/DriveWarningPercentThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterWarning" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / Percent</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Less</Operator><ValueExpression><Value Type="Double">$Config/DriveWarningPercentThreshold$</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>GreaterEqual</Operator><ValueExpression><Value Type="Double">$Config/DriveErrorPercentThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterError" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / Percent</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Less</Operator><ValueExpression><Value Type="Double">$Config/DriveErrorPercentThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection></MemberModules><RegularDetections><RegularDetection MonitorTypeStateID="MonitorOk"><Node ID="FilterOK"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorWarning"><Node ID="FilterWarning"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorError"><Node ID="FilterError"><Node ID="ScriptDS"/></Node></RegularDetection></RegularDetections><OnDemandDetections><OnDemandDetection MonitorTypeStateID="MonitorOk"><Node ID="OnDemandReset"/></OnDemandDetection></OnDemandDetections></MonitorImplementation></UnitMonitorType><UnitMonitorType ID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" Accessibility="Public"><MonitorTypeStates><MonitorTypeState ID="MonitorOk" NoDetection="false"/><MonitorTypeState ID="MonitorWarning" NoDetection="false"/><MonitorTypeState ID="MonitorError" NoDetection="false"/></MonitorTypeStates><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="IntervalSeconds" type="xsd:integer" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SyncTime" type="xsd:string" minOccurs="1"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LogSuccessEvent" type="xsd:boolean"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ScriptGroupId" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TargetComputer" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="TimeoutSeconds" type="xsd:integer"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ClusterResourceName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CounterName" type="xsd:string"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DriveErrorThreshold" type="xsd:double"/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DriveWarningThreshold" type="xsd:double"/></Configuration><OverrideableParameters><OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/><OverrideableParameter ID="LogSuccessEvent" Selector="$Config/LogSuccessEvent$" ParameterType="bool"/><OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/><OverrideableParameter ID="DriveErrorThreshold" Selector="$Config/DriveErrorThreshold$" ParameterType="double"/><OverrideableParameter ID="DriveWarningThreshold" Selector="$Config/DriveWarningThreshold$" ParameterType="double"/></OverrideableParameters><MonitorImplementation><MemberModules><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype"><IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds><SyncTime>$Config/SyncTime$</SyncTime><LogSuccessEvent>$Config/LogSuccessEvent$</LogSuccessEvent><ScriptGroupId>$Config/ScriptGroupId$</ScriptGroupId><TargetComputer>$Config/TargetComputer$</TargetComputer><ClusterName>$Config/ClusterName$</ClusterName><TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds><ClusterResourceName>$Config/ClusterResourceName$</ClusterResourceName><CounterName>$Config/CounterName$</CounterName></DataSource><ProbeAction ID="OnDemandReset" TypeID="System!System.PassThroughProbe"/><ConditionDetection ID="FilterOK" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>GreaterEqual</Operator><ValueExpression><Value Type="Double">$Config/DriveWarningThreshold$</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection><ConditionDetection ID="FilterWarning" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Less</Operator><ValueExpression><Value Type="Double">$Config/DriveWarningThreshold$</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>GreaterEqual</Operator><ValueExpression><Value Type="Double">$Config/DriveErrorThreshold$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection><ConditionDetection ID="FilterError" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Less</Operator><ValueExpression><Value Type="Double">$Config/DriveErrorThreshold$</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection></MemberModules><RegularDetections><RegularDetection MonitorTypeStateID="MonitorOk"><Node ID="FilterOK"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorWarning"><Node ID="FilterWarning"><Node ID="ScriptDS"/></Node></RegularDetection><RegularDetection MonitorTypeStateID="MonitorError"><Node ID="FilterError"><Node ID="ScriptDS"/></Node></RegularDetection></RegularDetections><OnDemandDetections><OnDemandDetection MonitorTypeStateID="MonitorOk"><Node ID="OnDemandReset"/></OnDemandDetection></OnDemandDetections></MonitorImplementation></UnitMonitorType></MonitorTypes></TypeDefinitions><Monitoring><Discoveries><Discovery ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.Discovery" Enabled="true" Target="Cluster!Microsoft.Windows.Cluster.VirtualServer" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster"><Property PropertyID="ClusterName"/></DiscoveryClass></DiscoveryTypes><DataSource ID="DS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource"><IntervalSeconds>86400</IntervalSeconds><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><MPElementID>$MPElement$</MPElementID><TargetID>$Target/Id$</TargetID><TargetComputer>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery><Discovery ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"><Property PropertyID="ClusterSharedVolumeName"/><Property PropertyID="FriendlyVolumeName"/><Property PropertyID="PartitionName"/><Property PropertyID="PartitionFileSystem"/><Property PropertyID="PartitionSize"/><Property PropertyID="ClusterName"/></DiscoveryClass></DiscoveryTypes><DataSource ID="DataSource" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource"><IntervalSeconds>86400</IntervalSeconds><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><MPElementID>$MPElement$</MPElementID><TargetID>$Target/Id$</TargetID><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery><Discovery ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Discovery" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster" ConfirmDelivery="false" Remotable="true" Priority="Normal"><Category>Discovery</Category><DiscoveryTypes><DiscoveryClass TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"><Property PropertyID="ClusterResourceName"/><Property PropertyID="ClusterDiskName"/><Property PropertyID="PartitionName"/><Property PropertyID="PartitionFileSystem"/><Property PropertyID="PartitionSize"/><Property PropertyID="ClusterName"/><Property PropertyID="VolumeLabel"/></DiscoveryClass></DiscoveryTypes><DataSource ID="DataSource" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Discovery.ScriptDataSource"><IntervalSeconds>86400</IntervalSeconds><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterDiskMonitoring</ScriptGroupId><MPElementID>$MPElement$</MPElementID><TargetID>$Target/Id$</TargetID><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds></DataSource></Discovery></Discoveries><Rules><Rule ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.TotalSizeMB" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource></DataSources><ConditionDetection ID="FilterPerf" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfFilterMapper"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Total size / MB</Value></ValueExpression></SimpleExpression></Expression><ObjectName>$Data/ObjectName$</ObjectName><CounterName>$Data/CounterName$</CounterName><InstanceName>$Data/InstanceName$</InstanceName><Value>$Data/Value$</Value></ConditionDetection><WriteActions><WriteAction ID="WriteToDB" TypeID="SCLibrary!Microsoft.SystemCenter.CollectPerformanceData"/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData"/></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpaceMB" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource></DataSources><ConditionDetection ID="FilterPerf" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfFilterMapper"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / MB</Value></ValueExpression></SimpleExpression></Expression><ObjectName>$Data/ObjectName$</ObjectName><CounterName>$Data/CounterName$</CounterName><InstanceName>$Data/InstanceName$</InstanceName><Value>$Data/Value$</Value></ConditionDetection><WriteActions><WriteAction ID="WriteToDB" TypeID="SCLibrary!Microsoft.SystemCenter.CollectPerformanceData"/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData"/></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.MonitorClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpacePercent" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource"><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName></DataSource></DataSources><ConditionDetection ID="FilterPerf" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfFilterMapper"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">CounterName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Free space / Percent</Value></ValueExpression></SimpleExpression></Expression><ObjectName>$Data/ObjectName$</ObjectName><CounterName>$Data/CounterName$</CounterName><InstanceName>$Data/InstanceName$</InstanceName><Value>$Data/Value$</Value></ConditionDetection><WriteActions><WriteAction ID="WriteToDB" TypeID="SCLibrary!Microsoft.SystemCenter.CollectPerformanceData"/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData"/></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Monitoring.CollectPerfDataSource.TotalSizeMB" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype"><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterDiskMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterResourceName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</ClusterResourceName><CounterName>Total size / MB</CounterName></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SCLibrary!Microsoft.SystemCenter.CollectPerformanceData"/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData"/></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Monitoring.CollectPerfDataSource.FreeSpaceMB" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype"><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterDiskMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterResourceName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</ClusterResourceName><CounterName>Free space / MB</CounterName></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SCLibrary!Microsoft.SystemCenter.CollectPerformanceData"/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData"/></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Monitoring.CollectPerfDataSource.FreeSpacePercent" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="ScriptDS" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype"><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterDiskMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterResourceName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</ClusterResourceName><CounterName>Free space / Percent</CounterName></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SCLibrary!Microsoft.SystemCenter.CollectPerformanceData"/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData"/></WriteActions></Rule></Rules><Monitors><AggregateMonitor ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMonitorRollup" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>AvailabilityHealth</Category><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMonitorRollup" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>AvailabilityHealth</Category><Algorithm>WorstOf</Algorithm></AggregateMonitor><UnitMonitor ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State" Accessibility="Public" Enabled="false" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1><AlertParameter2>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</AlertParameter2><AlertParameter3>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/FriendlyVolumeName$</AlertParameter3><AlertParameter4>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/PartitionName$</AlertParameter4><AlertParameter5>$Data/Context/Value$</AlertParameter5></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorOk" MonitorTypeStateID="MonitorOk" HealthState="Success"/><OperationalState ID="MonitorError" MonitorTypeStateID="MonitorError" HealthState="Error"/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName><GOODPattern>0</GOODPattern></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS" Accessibility="Public" Enabled="false" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1><AlertParameter2>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</AlertParameter2><AlertParameter3>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/FriendlyVolumeName$</AlertParameter3><AlertParameter4>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/PartitionName$</AlertParameter4><AlertParameter5>$Data/Context/Property[@Name='NTFSIsDirty']$</AlertParameter5></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorOk" MonitorTypeStateID="MonitorOk" HealthState="Success"/><OperationalState ID="MonitorError" MonitorTypeStateID="MonitorError" HealthState="Error"/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName><BADPattern>1</BADPattern></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ParentMonitorID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMonitorRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1><AlertParameter2>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</AlertParameter2><AlertParameter3>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/FriendlyVolumeName$</AlertParameter3><AlertParameter4>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/PartitionName$</AlertParameter4><AlertParameter5>$Data/Context/Value$</AlertParameter5></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorOk" MonitorTypeStateID="MonitorOk" HealthState="Success"/><OperationalState ID="MonitorWarning" MonitorTypeStateID="MonitorWarning" HealthState="Warning"/><OperationalState ID="MonitorError" MonitorTypeStateID="MonitorError" HealthState="Error"/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName><DriveErrorMBytesThreshold>100</DriveErrorMBytesThreshold><DriveWarningMBytesThreshold>500</DriveWarningMBytesThreshold></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" ParentMonitorID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMonitorRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1><AlertParameter2>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</AlertParameter2><AlertParameter3>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/FriendlyVolumeName$</AlertParameter3><AlertParameter4>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/PartitionName$</AlertParameter4><AlertParameter5>$Data/Context/Value$</AlertParameter5></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorOk" MonitorTypeStateID="MonitorOk" HealthState="Success"/><OperationalState ID="MonitorWarning" MonitorTypeStateID="MonitorWarning" HealthState="Warning"/><OperationalState ID="MonitorError" MonitorTypeStateID="MonitorError" HealthState="Error"/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>false</LogSuccessEvent><ScriptGroupId>ClusterSharedVolumeMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterSharedVolumeName>$Target/Property[Type="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"]/ClusterSharedVolumeName$</ClusterSharedVolumeName><DriveErrorPercentThreshold>5</DriveErrorPercentThreshold><DriveWarningPercentThreshold>10</DriveWarningPercentThreshold></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" ParentMonitorID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMonitorRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1><AlertParameter2>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</AlertParameter2><AlertParameter3>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterDiskName$</AlertParameter3><AlertParameter4>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/PartitionName$</AlertParameter4><AlertParameter5>$Data/Context/Value$</AlertParameter5></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorOk" MonitorTypeStateID="MonitorOk" HealthState="Success"/><OperationalState ID="MonitorWarning" MonitorTypeStateID="MonitorWarning" HealthState="Warning"/><OperationalState ID="MonitorError" MonitorTypeStateID="MonitorError" HealthState="Error"/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>true</LogSuccessEvent><ScriptGroupId>ClusterDiskMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterResourceName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</ClusterResourceName><CounterName>Free space / MB</CounterName><DriveErrorThreshold>100</DriveErrorThreshold><DriveWarningThreshold>500</DriveWarningThreshold></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" ParentMonitorID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMonitorRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1><AlertParameter2>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</AlertParameter2><AlertParameter3>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterDiskName$</AlertParameter3><AlertParameter4>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/PartitionName$</AlertParameter4><AlertParameter5>$Data/Context/Value$</AlertParameter5></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorOk" MonitorTypeStateID="MonitorOk" HealthState="Success"/><OperationalState ID="MonitorWarning" MonitorTypeStateID="MonitorWarning" HealthState="Warning"/><OperationalState ID="MonitorError" MonitorTypeStateID="MonitorError" HealthState="Error"/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><SyncTime/><LogSuccessEvent>true</LogSuccessEvent><ScriptGroupId>ClusterDiskMonitoring</ScriptGroupId><TargetComputer>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</TargetComputer><ClusterName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterName$</ClusterName><TimeoutSeconds>300</TimeoutSeconds><ClusterResourceName>$Target/Property[Type="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"]/ClusterResourceName$</ClusterResourceName><CounterName>Free space / Percent</CounterName><DriveErrorThreshold>5</DriveErrorThreshold><DriveWarningThreshold>10</DriveWarningThreshold></Configuration></UnitMonitor><DependencyMonitor ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.CSV2VirtualServer.AvailabilityRollup" Accessibility="Public" Enabled="true" Target="Cluster!Microsoft.Windows.Cluster.VirtualServer" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterSharedVolume" MemberMonitor="SystemHealth!System.Health.AvailabilityState"><Category>SecurityHealth</Category><Algorithm>WorstOf</Algorithm><MemberInMaintenance>Success</MemberInMaintenance><MemberUnAvailable>Error</MemberUnAvailable></DependencyMonitor><DependencyMonitor ID="Microsoft.Windows.Server.ClusterDisksMonitoring.CSV2VirtualServer.AvailabilityRollup" Accessibility="Public" Enabled="true" Target="Cluster!Microsoft.Windows.Cluster.VirtualServer" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="Microsoft.Windows.Server.ClusterDisksMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterDisk" MemberMonitor="SystemHealth!System.Health.AvailabilityState"><Category>SecurityHealth</Category><Algorithm>WorstOf</Algorithm><MemberInMaintenance>Success</MemberInMaintenance><MemberUnAvailable>Error</MemberUnAvailable></DependencyMonitor></Monitors></Monitoring><Presentation><Views><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.AlertView" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" TypeID="SCLibrary!Microsoft.SystemCenter.AlertViewType" Visible="true"><Category>Operations</Category><Criteria><SeverityList><Severity>Error</Severity><Severity>Warning</Severity><!-- <Severity>Success</Severity> --></SeverityList><ResolutionState><StateRange Operator="LessThan">255</StateRange></ResolutionState></Criteria><Presentation><ColumnInfo Index="0" SortIndex="0" Width="50" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Severity</Name><Id>Severity</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="35" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending"><Name>Icon</Name><Id>Icon</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Path</Name><Id>MonitoringObjectPath</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Source</Name><Id>MonitoringObjectDisplayName</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Maintenance Mode</Name><Id>MonitoringObjectInMaintenanceMode</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Name</Name><Id>Name</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Resolution State</Name><Id>ResolutionState</Id></ColumnInfo><ColumnInfo Index="7" SortIndex="1" Width="100" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending"><Name>Age</Name><Id>Age</Id></ColumnInfo><ColumnInfo Index="8" SortIndex="-1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending"><Name>Created</Name><Id>TimeRaised</Id></ColumnInfo></Presentation><Target/></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.AlertView" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" TypeID="SCLibrary!Microsoft.SystemCenter.AlertViewType" Visible="true"><Category>Operations</Category><Criteria><SeverityList><Severity>Error</Severity><Severity>Warning</Severity></SeverityList><ResolutionState><StateRange Operator="LessThan">255</StateRange></ResolutionState></Criteria><Presentation><ColumnInfo Index="0" SortIndex="0" Width="50" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Severity</Name><Id>Severity</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="35" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending"><Name>Icon</Name><Id>Icon</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Path</Name><Id>MonitoringObjectPath</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Source</Name><Id>MonitoringObjectDisplayName</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Maintenance Mode</Name><Id>MonitoringObjectInMaintenanceMode</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Name</Name><Id>Name</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Resolution State</Name><Id>ResolutionState</Id></ColumnInfo><ColumnInfo Index="7" SortIndex="1" Width="100" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending"><Name>Age</Name><Id>Age</Id></ColumnInfo><ColumnInfo Index="8" SortIndex="-1" Width="150" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending"><Name>Created</Name><Id>TimeRaised</Id></ColumnInfo></Presentation><Target/></View><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.DashboardView" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" TypeID="SCLibrary!Microsoft.SystemCenter.DashboardViewType" Visible="true"><Category>Operations</Category><PanelConfiguration Columns="1" Rows="2"><Cell Column="1" Row="1" ViewID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.StateView"/><Cell Column="1" Row="2" ViewID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.AlertView"/></PanelConfiguration></View><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Performance.Dashboard.View" Accessibility="Public" Enabled="true" Target="System!System.Entity" TypeID="SCLibrary!Microsoft.SystemCenter.DashboardViewType" Visible="true"><Category>Operations</Category><PanelConfiguration Columns="2" Rows="2"><Cell Column="1" Row="1" ViewID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.FreeSpaceMB.Performance.View"/><Cell Column="2" Row="1" ViewID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.FreeSpacePercent.Performance.View"/><Cell Column="1" Row="2" ColumnSpan="2" ViewID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.TotalSizeMB.Performance.View"/></PanelConfiguration></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.DashboardView" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" TypeID="SCLibrary!Microsoft.SystemCenter.DashboardViewType" Visible="true"><Category>Operations</Category><PanelConfiguration Columns="1" Rows="2"><Cell Column="1" Row="1" ViewID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.StateView"/><Cell Column="1" Row="2" ViewID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.AlertView"/></PanelConfiguration></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Performance.Dashboard.View" Accessibility="Public" Enabled="true" Target="System!System.Entity" TypeID="SCLibrary!Microsoft.SystemCenter.DashboardViewType" Visible="true"><Category>Operations</Category><PanelConfiguration Columns="2" Rows="2"><Cell Column="1" Row="1" ViewID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB.Performance.View"/><Cell Column="2" Row="1" ViewID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent.Performance.View"/><Cell Column="1" Row="2" ColumnSpan="2" ViewID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.TotalSizeMB.Performance.View"/></PanelConfiguration></View><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.FreeSpaceMB.Performance.View" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" TypeID="SCLibrary!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Cluster Shared Volume</Object><Instance/><Counter>Free space / MB</Counter></Criteria></View><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.FreeSpacePercent.Performance.View" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" TypeID="SCLibrary!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Cluster Shared Volume</Object><Instance/><Counter>Free space / Percent</Counter></Criteria></View><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.TotalSizeMB.Performance.View" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" TypeID="SCLibrary!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Cluster Shared Volume</Object><Instance/><Counter>Total size / MB</Counter></Criteria></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB.Performance.View" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" TypeID="SCLibrary!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Cluster Disk</Object><Instance/><Counter>Free space / MB</Counter></Criteria></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent.Performance.View" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" TypeID="SCLibrary!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Cluster Disk</Object><Instance/><Counter>Free space / Percent</Counter></Criteria></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.TotalSizeMB.Performance.View" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" TypeID="SCLibrary!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Cluster Disk</Object><Instance/><Counter>Total size / MB</Counter></Criteria></View><View ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.StateView" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" TypeID="SCLibrary!Microsoft.SystemCenter.StateViewType" Visible="true"><Category>Operations</Category><Criteria/><Presentation><ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending"><Name>State</Name><Id>Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Maintenance Mode</Name><Id>InMaintenanceMode</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Cluster Name</Name><Id>ClusterName</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Cluster Shared VolumeName</Name><Id>ClusterSharedVolumeName</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Friendly Volume Name</Name><Id>FriendlyVolumeName</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Partition Size</Name><Id>PartitionSize</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Partition Name</Name><Id>PartitionName</Id></ColumnInfo></Presentation><Target/></View><View ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.StateView" Accessibility="Public" Enabled="true" Target="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" TypeID="SCLibrary!Microsoft.SystemCenter.StateViewType" Visible="true"><Category>Operations</Category><Criteria/><Presentation><ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending"><Name>State</Name><Id>Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Maintenance Mode</Name><Id>InMaintenanceMode</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Cluster Name</Name><Id>ClusterName</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Cluster Resource Name</Name><Id>ClusterResourceName</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Volume Label</Name><Id>VolumeLabel</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Partition Size</Name><Id>PartitionSize</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Partition Name</Name><Id>PartitionName</Id></ColumnInfo></Presentation><Target/></View></Views><FolderItems><FolderItem ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.DashboardView" ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.DashboardView" Folder="WindowsServer!Microsoft.Windows.Server.ViewFolder.Health"/><FolderItem ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.DashboardView" ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.DashboardView" Folder="WindowsServer!Microsoft.Windows.Server.ViewFolder.Health"/><FolderItem ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Performance.Dashboard.View" ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Performance.Dashboard.View" Folder="WindowsServer!Microsoft.Windows.Server.ViewFolder.Performance"/><FolderItem ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Performance.Dashboard.View" ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Performance.Dashboard.View" Folder="WindowsServer!Microsoft.Windows.Server.ViewFolder.Performance"/></FolderItems><StringResources><StringResource ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMonitorRollup.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMonitorRollup.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB.AlertMessage"/><StringResource ID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent.AlertMessage"/></StringResources></Presentation><LanguagePacks><LanguagePack ID="ENU" IsDefault="true"><DisplayStrings><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring"><Name>Windows Server Cluster Disks Monitoring</Name><Description>This Management Pack Discovers and Monitors free space and state of cluster disks on Windows Server.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster"><Name>Windows Cluster (disk monitoring)</Name><Description>Windows Cluster class used by the Windows Server Operating Management Pack to do disk monitoring on Windows Clusters</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster" SubElementID="ClusterName"><Name>Cluster Name</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume"><Name>Cluster Shared Volume</Name><Description>Cluster Shared Volumes on failover clusters (Windows Server 2008 R2 and higher). A cluster shared volume is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="ClusterName"><Name>Cluster Name</Name><Description>Cluster Name for the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="ClusterSharedVolumeName"><Name>Cluster Shared Volume Name</Name><Description>Name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="FriendlyVolumeName"><Name>Friendly Volume Name</Name><Description>Friendly name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="PartitionFileSystem"><Name>Partition File System</Name><Description>Partition file system of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="PartitionName"><Name>Partition Name</Name><Description>Partition name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="PartitionSize"><Name>Partition Size</Name><Description>Partition size of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume" SubElementID="VolumeLabel"><Name>Volume Label</Name><Description>Volume Name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.AlertView"><Name>Cluster Shared Volumes Alerts</Name><Description>Windows Server Shared Volume Monitoring - Cluster Shared Volumes alert view.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.DashboardView"><Name>Cluster Shared Volumes Health</Name><Description>Windows Server Shared Volume Monitoring - Cluster Shared Volumes dashboard view.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery"><Name>Cluster Shared Volume Discovery</Name><Description>Discover instances of the cluster shared volume class hosted on the cluster virtual server representing the cluster. A cluster shared volume is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery" SubElementID="DataSource"><Name>Cluster Shared Volume Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource"><Name>Cluster Shared Volume Script Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource" SubElementID="DS"><Name>Cluster Shared Volume Data Store</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource" SubElementID="LogSuccessEvent"><Name>Log Successful Event</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource" SubElementID="ScriptGroupId"><Name>Event Log Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Discovery.ScriptDataSource" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.FreeSpaceMB.Performance.View"><Name>Free Space (MB)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.FreeSpacePercent.Performance.View"><Name>Free Space (%)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpaceMB"><Name>Cluster Shared Volume - Free space / MB</Name><Description>This rule collects the 'Free space / MB' performance counter for a Cluster Shared Volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpaceMB" SubElementID="FilterPerf"><Name>Performance Filter</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpaceMB" SubElementID="ScriptDS"><Name>Script DataSource</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpaceMB" SubElementID="WriteToDB"><Name>Write to DB</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpaceMB" SubElementID="WriteToDW"><Name>Write to DW</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.TotalSizeMB"><Name>Cluster Shared Volume - Total size / MB</Name><Description>This rule collects the 'Total size / MB' performance counter for a Cluster Shared Volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.TotalSizeMB" SubElementID="FilterPerf"><Name>Performance Filter</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.TotalSizeMB" SubElementID="ScriptDS"><Name>Script DataSource</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.TotalSizeMB" SubElementID="WriteToDB"><Name>Write to DB</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.CollectPerfDataSource.TotalSizeMB" SubElementID="WriteToDW"><Name>Write to DW</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB"><Name>Cluster Shared Volume - Free Space Monitor (MB)</Name><Description>This monitor checks the free space in MB of the targeted cluster shared volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.AlertMessage"><Name>Free Space (MB) For Cluster Shared Volume Alert</Name><Description>{0}: The cluster shared volume {1} mounted on {2} is running out of disk space. The value that exceeded the warning or error threshold is {4} free Mbytes. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMonitorRollup"><Name>Cluster Shared Volume - Free Space Rollup Monitor</Name><Description>This monitors aggregates the free space monitors for cluster shared volumes.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMonitorRollup.AlertMessage"><Name>Free Space Is Low On Cluster Shared Volume</Name><Description>{0}: The cluster shared volume {1} mounted on {2} is running out of disk space. Use the health explorer for viewing details. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent"><Name>Cluster Shared Volume - Free Space Monitor (%)</Name><Description>This monitor checks the free space in % of the targeted cluster shared volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.AlertMessage"><Name>Free Space (%) For Cluster Shared Volume Alert</Name><Description>{0}: The cluster shared volume {1} mounted on {2} is running out of disk space. The value that exceeded the warning or error threshold is {4}% free space. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS"><Name>Cluster Shared Volume - NTFS State Monitor</Name><Description>This monitor checks the state of the file system on the targeted cluster shared volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.AlertMessage"><Name>Cluster Shared Volume Filesystem Corrupt</Name><Description>{0}: The file system is corrupt on the cluster shared volume {1} mounted on {2} failed. NTFS dirty bit  = {4}. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.Monitortype"><Name>Reserved</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.Monitortype" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS.Monitortype" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource" SubElementID="LogSuccessEvent"><Name>Log Successful Event</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource" SubElementID="ScriptGroupId"><Name>Event Log Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.PerfDataSource" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource"><Name>Cluster Shared Volume Monitoring Script Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" SubElementID="DS"><Name>Cluster Shared Volume Monitoring Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" SubElementID="Filter"><Name>Filter</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" SubElementID="LogSuccessEvent"><Name>Log Successful Event</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" SubElementID="ScriptGroupId"><Name>Event Log Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.ScriptDataSource" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State"><Name>Cluster Shared Volume - State Monitor</Name><Description>This monitor checks the state of the targeted cluster shared volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.AlertMessage"><Name>Cluster Shared Volume Failed</Name><Description>{0}: The cluster shared volume {1} mounted on {2} failed. WMI object FaultState property value is {4}. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype"><Name>Cluster Shared Volume Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="LogSuccessEvent"><Name>Log on Success</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="OnDemandReset"><Name>Reserved</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="ScriptGroupId"><Name>Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype"><Name>Cluster Shared Volume Free Space MB Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="LogSuccessEvent"><Name>Log on Success</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="OnDemandReset"><Name>Reserved</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="DriveWarningMBytesThreshold"><Name>Warning Threshold in MB</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB.Monitortype" SubElementID="DriveErrorMBytesThreshold"><Name>Error Threshold in MB</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype"><Name>Cluster Shared Volume Free Space MB Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="LogSuccessEvent"><Name>Log on Success</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="OnDemandReset"><Name>Reserved</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="DriveErrorPercentThreshold"><Name>Error Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent.Monitortype" SubElementID="DriveWarningPercentThreshold"><Name>Warning Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype"><Name>Cluster Disk State Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="LogSuccessEvent"><Name>Log on Success</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="OnDemandReset"><Name>Reserved</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="DriveErrorThreshold"><Name>Error Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DiskState.Monitortype" SubElementID="DriveWarningThreshold"><Name>Warning Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Performance.Dashboard.View"><Name>Cluster Shared Volume Disk Capacity</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.StateView"><Name>Cluster Shared Volumes State</Name><Description>Windows Server Shared Volume Monitoring - Cluster Shared Volumes state view.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.TotalSizeMB.Performance.View"><Name>Total Size (MB)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.CSV2VirtualServer.AvailabilityRollup"><Name>Cluster Shared Volumes Availability Rollup</Name><Description>This monitor rolls up the availability state from the cluster shared volumens to the hosting cluster virtual server.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.Cluster"><Name>Virtual Server Hosts Cluster Relationship</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterSharedVolume"><Name>Virtual Server Hosts Cluster Shared Volume Relationship</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterDisk"><Name>Virtual Server Hosts Cluster Disk Relationship</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.MonitorClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpacePercent"><Name>Cluster Shared Volume - Free space / %</Name><Description>This rule collects the 'Free space / %' performance counter for a Cluster Shared Volume.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.MonitorClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpacePercent" SubElementID="FilterPerf"><Name>Performance Filter</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.MonitorClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpacePercent" SubElementID="ScriptDS"><Name>Script DataSource</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.MonitorClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpacePercent" SubElementID="WriteToDB"><Name>Write to DB</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.MonitorClusterSharedVolume.Monitoring.CollectPerfDataSource.FreeSpacePercent" SubElementID="WriteToDW"><Name>Write to DW</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.Discovery"><Name>Cluster Seed Name Discovery</Name><Description>Discover instances of the cluster name class. This class is hosted on the cluster virtual server representing the cluster. This creates a target running on a single cluster node of a cluster only.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.Discovery" SubElementID="DS"><Name>Cluster Name  Discovery Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource"><Name>Discover Cluster Name  Script Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource" SubElementID="Scheduler"><Name>Discover Cluster Name Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource" SubElementID="LogSuccessEvent"><Name>Log Successful Event</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource" SubElementID="ScriptGroupId"><Name>Event Log Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.VirtualServer.DiscoverClusterName.ScriptDataSource" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk"><Name>Cluster Disk</Name><Description>Cluster Disks on failover clusters (Windows Server 2008 and higher). A cluster disk is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="ClusterResourceName"><Name>Cluster Resource Name</Name><Description>Cluster Resource Name for the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="ClusterDiskName"><Name>Cluster Disk Name</Name><Description>Name of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="PartitionName"><Name>Partition Name</Name><Description>Partition name of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="PartitionFileSystem"><Name>Partition File System</Name><Description>Partition file system of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="PartitionSize"><Name>Partition Size</Name><Description>Partition size of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="ClusterName"><Name>Cluster Name</Name><Description>Cluster name</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk" SubElementID="VolumeLabel"><Name>Volume Label</Name><Description>Volume Name of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype"><Name>Cluster Disk  Monitoring Script Data Source</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype" SubElementID="IntervalSeconds"><Name>Interval</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype" SubElementID="LogSuccessEvent"><Name>Log Successful Event</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.DS.Moduletype" SubElementID="TimeoutSeconds"><Name>Timeout</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB"><Name>Cluster Disk - Free Space Monitor (MB)</Name><Description>This monitor checks the free space in MB of the targeted cluster disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent"><Name>Cluster Disk - Free Space Monitor (%)</Name><Description>This monitor checks the free space in % of the targeted cluster disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent" SubElementID="MonitorError"><Name>Error</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent" SubElementID="MonitorOk"><Name>Healthy</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent" SubElementID="MonitorWarning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMonitorRollup.AlertMessage"><Name>Free Space Is Low On Cluster Disk</Name><Description>{0}: The cluster Disk {1} Labeled as {2} is running out of disk space. Use the health explorer for viewing details. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB.AlertMessage"><Name>Free Space (MB) For Cluster Disk Alert</Name><Description>{0}: The cluster Disk {1} Named as {2} is running out of disk space. The value that exceeded the warning or error threshold is {4} free Mbytes. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent.AlertMessage"><Name>Free Space (%) For Cluster Disk Alert</Name><Description>{0}: The cluster Disk {1} Named as {2} is running out of disk space. The value that exceeded the warning or error threshold is {4}% free space. (Partition: {3}).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMonitorRollup"><Name>Cluster Disk - Free Space Rollup Monitor</Name><Description>This monitors aggregates the free space monitors for cluster disks.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.CSV2VirtualServer.AvailabilityRollup"><Name>Cluster Disk Availability Rollup</Name><Description>This monitor rolls up the availability state from the cluster disks to the hosting cluster virtual server.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.StateView"><Name>Cluster Disks State</Name><Description>Windows Server Cluster Disk Monitoring - Cluster Disk state view.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.AlertView"><Name>Cluster Disks Alerts</Name><Description>Windows Server Cluster Disk Monitoring - Cluster Disks alert view.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.DashboardView"><Name>Cluster Disks Health</Name><Description>Windows Server Cluster Disk Monitoring - Cluster Disks dashboard view.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Discovery"><Name>Cluster Disks Discovery</Name><Description>Discover instances of the cluster disks.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Monitoring.CollectPerfDataSource.TotalSizeMB"><Name>Cluster Disk - Total size / MB</Name><Description>This rule collects the 'Total size / MB' performance counter for a Cluster disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Monitoring.CollectPerfDataSource.FreeSpaceMB"><Name>Cluster Disk - Free space / MB</Name><Description>This rule collects the 'Free space / MB' performance counter for a Cluster disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Monitoring.CollectPerfDataSource.FreeSpacePercent"><Name>Cluster Disk - Free space / %</Name><Description>This rule collects the 'Free space / %' performance counter for a Cluster disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB.Performance.View"><Name>Free Space (MB)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent.Performance.View"><Name>Free Space (%)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.TotalSizeMB.Performance.View"><Name>Total Size (MB)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Performance.Dashboard.View"><Name>Cluster Disk Capacity</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.Base"><Name>(Abstract) Windows Cluster Disk Volume monitoring seed</Name><Description>Windows Cluster Seed class used by the Windows Server Operating Management Pack to do disk monitoring on Windows Clusters</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.Base" SubElementID="ClusterName"><Name>Cluster Name</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.NewOS"><Name>[Nano Server] Windows Cluster Disk Volume monitoring seed</Name><Description>Nano Server Cluster Seed class used by the Nano Server Operating Management Pack to do disk monitoring on Windows Clusters</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Cluster.LegacyOS"><Name>[Deprecated] Windows Cluster Disk Volume monitoring seed</Name><Description>Windows Cluster Seed class used by the Windows Server Operating Management Pack to do disk monitoring on Windows Clusters</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.LegacyOS"><Name>[Deprecated] Cluster Shared Volume  Partition</Name><Description>Cluster Shared Volumes  Partition on failover clusters. A cluster shared volume is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base"><Name>(Abstract) Cluster Shared Volume Partition</Name><Description>Cluster Shared Volumes on failover clusters(Windows 2008 R2 and higher). A cluster shared volume is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="ClusterName"><Name>Cluster Name</Name><Description>Cluster Name for the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="ClusterSharedVolumeName"><Name>Cluster Shared Volume Name</Name><Description>Name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="FriendlyVolumeName"><Name>Friendly Volume Name</Name><Description>Friendly name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="PartitionFileSystem"><Name>Partition File System</Name><Description>Partition file system of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="PartitionName"><Name>Partition Name</Name><Description>Partition name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="PartitionSize"><Name>Partition Size</Name><Description>Partition size of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Base" SubElementID="VolumeLabel"><Name>Volume Label</Name><Description>Volume Name of the Cluster Shared Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.NewOS"><Name>[Nano Server] Cluster Shared Volume Partition</Name><Description>Cluster Shared Volumes Partition on failover clusters (Nano Server). A cluster shared volume is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base"><Name>(Abstract) Cluster Disk Volume</Name><Description>Cluster Disks on failover clusters (Windows Server 2008 and higher). A cluster disk is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="ClusterResourceName"><Name>Cluster Resource Name</Name><Description>Cluster Resource Name for the Cluster Disk Volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="ClusterDiskName"><Name>Cluster Disk Name</Name><Description>Name of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="PartitionName"><Name>Partition Name</Name><Description>Partition name of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="PartitionFileSystem"><Name>Partition File System</Name><Description>Partition file system of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="PartitionSize"><Name>Partition Size</Name><Description>Partition size of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="ClusterName"><Name>Cluster Name</Name><Description>Cluster name</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.Base" SubElementID="VolumeLabel"><Name>Volume Label</Name><Description>Volume Name of the Cluster Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.NewOS"><Name>[Nano Server] Cluster Disk Volume</Name><Description>Cluster Disks Volume on failover clusters (Nano Server). A cluster disk is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.LegacyOS"><Name>[Deprecated] Cluster Disk Volume</Name><Description>Cluster Disks Volume on failover clusters (Windows Server 2008 and higher). A cluster disk is accessible for all cluster nodes at the same time and managed in an automated FSMO mode.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterSharedVolume.Base"><Name>Virtual Server Hosts Cluster Shared Volume Partition Relationship</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.Microsoft.Windows.Cluster.VirtualServer.Hosts.ClusterDisk.Base"><Name>Virtual Server Hosts Cluster Disk Volume  Relationship</Name></DisplayString></DisplayStrings><KnowledgeArticles><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The Microsoft Windows Server Cluster Disk Management Pack monitors the availability and performance of Windows Servers Cluster Disks. By detecting, alerting, and automatically responding to critical events and performance indicators, this Management Pack helps identify, correct, and prevent possible Windows Server related outages. As a result this Management Pack can play an important role in ensuring that you’re Windows Server 2008 infrastructure and related components are available and working correctly.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpaceMB" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The amount of free disk space on the Cluster Shared Volume has exceeded the threshold. System performance may be adversely affected and the ability to add or modify existing files on the Cluster Shared Volume may not be possible until additional free space is made available.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Configuration</maml:title><maml:para>The Cluster Shared Volume Free Space monitoring routine is a high configurable solution that enables Operators to set varying threshold values for system and non-system logical disk volumes. In addition separate threshold values can be set for Warning and Error states.</maml:para><maml:para>Since Cluster Shared Volumes may vary in size from a few gigabytes to many terabytes or more the Cluster Shared Volume Free Space monitoring routine requires that an Operator indicate both the Megabyte and Percentage based threshold values that must be passed before the Warning and Error thresholds reached. This means that in order for the threshold to be reached both the Megabyte and Percentage based threshold values for the System or Non-System Drive must be breached.</maml:para><maml:para/></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>When existing files grow in size and the new files are added, the free space is taken up on a Cluster Shared Volume. When the amount of free space on the Cluster Shared Volume disk falls below the threshold, the state for the Cluster Shared Volume disk will change.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>To increase the amount of available disk space, do one or more of the following:</maml:para><maml:list><maml:listItem><maml:para>Run Disk Cleanup to gain more free space on the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Back up and remove files, or delete unnecessary files from the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Move files to another disk or to offline storage.</maml:para></maml:listItem><maml:listItem><maml:para>Purchase additional storage or switch to a larger disk.</maml:para></maml:listItem></maml:list><maml:para/></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.FreeSpacePercent" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The amount of free disk space on the Cluster Shared Volume has exceeded the threshold. System performance may be adversely affected and the ability to add or modify existing files on the Cluster Shared Volume may not be possible until additional free space is made available.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Configuration</maml:title><maml:para>The Cluster Shared Volume Free Space monitoring routine is a high configurable solution that enables Operators to set varying threshold values for system and non-system logical disk volumes. In addition separate threshold values can be set for Warning and Error states.</maml:para><maml:para>Since Cluster Shared Volumes may vary in size from a few gigabytes to many terabytes or more the Cluster Shared Volume Free Space monitoring routine requires that an Operator indicate both the Megabyte and Percentage based threshold values that must be passed before the Warning and Error thresholds reached. This means that in order for the threshold to be reached both the Megabyte and Percentage based threshold values for the System or Non-System Drive must be breached.</maml:para><maml:para/></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>When existing files grow in size and the new files are added, the free space is taken up on a Cluster Shared Volume. When the amount of free space on the Cluster Shared Volume disk falls below the threshold, the state for the Cluster Shared Volume disk will change.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>To increase the amount of available disk space, do one or more of the following:</maml:para><maml:list><maml:listItem><maml:para>Run Disk Cleanup to gain more free space on the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Back up and remove files, or delete unnecessary files from the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Move files to another disk or to offline storage.</maml:para></maml:listItem><maml:listItem><maml:para>Purchase additional storage or switch to a larger disk.</maml:para></maml:listItem></maml:list><maml:para/></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.NTFS" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>NTFS has reported that the Cluster Shared Volume is either corrupted or completely unavailable. Some data stored on the volume may be inaccessible.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Configuration</maml:title><maml:para>A logical disk may become corrupted or inaccessible due to a number of reasons some of which include:</maml:para><maml:list><maml:listItem><maml:para>A physical disk related to the Cluster Shared Volume has been removed or failed</maml:para></maml:listItem><maml:listItem><maml:para>A physical disk related to the Cluster Shared Volume has become corrupt (for example; bad sectors) or inoperable</maml:para></maml:listItem></maml:list><maml:para/></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>Check the status of your hardware for any failures (for example, a disk, controller, cabling failure). In most cases, the system log contains additional events from the lower-level storage drivers that indicate the cause of the failure.</maml:para><maml:para/><maml:para>After you have isolated and resolved the hardware problem:</maml:para><maml:para/><maml:list><maml:listItem><maml:para>Open the Disk Management snap-in.</maml:para></maml:listItem><maml:listItem><maml:para>Rescan the disks and then reactivate any disks with errors.</maml:para></maml:listItem><maml:listItem><maml:para>Run chkdsk on any reactivated volumes.</maml:para></maml:listItem></maml:list><maml:para/></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterSharedVolumeMonitoring.ClusterSharedVolume.Monitoring.State" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The Cluster Shared Volume is not available and can no longer be monitored. </maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The Cluster Shared Volume may have been taken offline or removed from the Cluster. </maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>Verify that the Cluster Shared Volume is available and Online in the Failover Cluster Manager.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpaceMB" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The amount of free disk space on the Cluster Disk has exceeded the threshold. System performance may be adversely affected and the ability to add or modify existing files on the Cluster Disk may not be possible until additional free space is made available.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Configuration</maml:title><maml:para>The Cluster Disk Free Space monitoring routine is a high configurable solution that enables Operators to set varying threshold values for system and non-system logical disk volumes. In addition separate threshold values can be set for Warning and Error states.</maml:para><maml:para>Since Cluster Shared Volumes may vary in size from a few gigabytes to many terabytes or more the Cluster Disk Free Space monitoring routine requires that an Operator indicate the Megabyte based threshold values that must be passed before the Warning and Error thresholds reached. This means that in order for the threshold to be reached the Megabyte based threshold values for the System or Non-System Drive must be breached.</maml:para><maml:para/></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>When existing files grow in size and the new files are added, the free space is taken up on a Cluster Disk. When the amount of free space on the Cluster disk falls below the threshold, the state for the Cluster disk will change.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>To increase the amount of available disk space, do one or more of the following:</maml:para><maml:list><maml:listItem><maml:para>Run Disk Cleanup to gain more free space on the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Back up and remove files, or delete unnecessary files from the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Move files to another disk or to offline storage.</maml:para></maml:listItem><maml:listItem><maml:para>Purchase additional storage or switch to a larger disk.</maml:para></maml:listItem></maml:list><maml:para/></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.Windows.Server.ClusterDisksMonitoring.ClusterDisk.FreeSpacePercent" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The amount of free disk space on the Cluster Disk has exceeded the threshold. System performance may be adversely affected and the ability to add or modify existing files on the Cluster Disk may not be possible until additional free space is made available.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Configuration</maml:title><maml:para>The Cluster Disk Free Space monitoring routine is a high configurable solution that enables Operators to set varying threshold values for system and non-system logical disk volumes. In addition separate threshold values can be set for Warning and Error states.</maml:para><maml:para>Since Cluster Disk may vary in size from a few gigabytes to many terabytes or more the Cluster Disk Free Space monitoring routine requires that an Operator indicate both the Percentage based threshold values that must be passed before the Warning and Error thresholds reached. This means that in order for the threshold to be reached the Percentage based threshold values for the System or Non-System Drive must be breached.</maml:para><maml:para/></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>When existing files grow in size and the new files are added, the free space is taken up on a Cluster Disk. When the amount of free space on the Cluster disk falls below the threshold, the state for the Cluster disk will change.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>To increase the amount of available disk space, do one or more of the following:</maml:para><maml:list><maml:listItem><maml:para>Run Disk Cleanup to gain more free space on the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Back up and remove files, or delete unnecessary files from the disk.</maml:para></maml:listItem><maml:listItem><maml:para>Move files to another disk or to offline storage.</maml:para></maml:listItem><maml:listItem><maml:para>Purchase additional storage or switch to a larger disk.</maml:para></maml:listItem></maml:list><maml:para/></maml:section></MamlContent></KnowledgeArticle></KnowledgeArticles></LanguagePack></LanguagePacks></ManagementPack>
