Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Disk Write Bytes/sec</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>300</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule
ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AverageDiskReadQueueLength.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk Read Queue Length</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>300</Frequency><Tolerance>15</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AverageDiskWriteQueueLength.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk Write Queue
Length</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>300</Frequency><Tolerance>15</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.PhysicalDisk.SplitIOPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS"
TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Split IO/Sec</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.Processor.PercentDPCTime.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ConfirmDelivery="false" Remotable="true"
Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="Microsoft.Windows.Server.10.0.Processor.Performance.ModuleType"><CounterName>% DPC Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.Processor"]/PerfmonInstance$</InstanceName><Frequency>300</Frequency><TimeoutSeconds>300</TimeoutSeconds></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.Processor.PercentInterruptTime.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ConfirmDelivery="false" Remotable="true" Priority="Normal"
DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="Microsoft.Windows.Server.10.0.Processor.Performance.ModuleType"><CounterName>% Interrupt Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.Processor"]/PerfmonInstance$</InstanceName><Frequency>300</Frequency><TimeoutSeconds>300</TimeoutSeconds></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.Processor.PercentProcessorTime.Collection" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource
ID="PerformanceDS" TypeID="Microsoft.Windows.Server.10.0.Processor.Performance.ModuleType"><CounterName>% Processor Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.Processor"]/PerfmonInstance$</InstanceName><Frequency>300</Frequency><TimeoutSeconds>300</TimeoutSeconds></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.LogicalProcessor.PercentDPCTime.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS"
TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% DPC Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>300</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.LogicalProcessor.PercentInterruptTime.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"
ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Interrupt Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>300</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule
ID="Microsoft.Windows.Server.10.0.LogicalProcessor.PercentProcessorTime.Collection" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Processor Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"]/PerfmonInstance$</InstanceName><AllInstances>false</AllInstances><Frequency>300</Frequency><Tolerance>5</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.MemoryFreeSystemPageTableEntries.Collection" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Free System Page Table Entries</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>800</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryCacheBytes.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Cache Bytes</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryCommittedBytes.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Committed Bytes</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesOutputPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Pages Output/sec</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesInputPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Pages Input/sec</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryCommitLimit.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Commit Limit</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPoolPagedResidentBytes.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Pool Paged Resident Bytes</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction
ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemorySystemCacheResidentBytes.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>System Cache Resident Bytes</CounterName><ObjectName>Memory</ObjectName><InstanceName
/><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Percentage</ToleranceType><MaximumSampleSeparation>6</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.CacheDataMapHitsPercent.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Data Map Hits %</CounterName><ObjectName>Cache</ObjectName><InstanceName
/><Frequency>300</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>12</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv4.ConnectionsEstablished.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Connections Established</CounterName><ObjectName>TCPv4</ObjectName><InstanceName
/><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>25</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv6.ConnectionsEstablished.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Connections
Established</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>25</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv4.ConnectionFailures.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS"
TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Connection Failures</CounterName><ObjectName>TCPv4</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>25</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv6.ConnectionFailures.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal"
DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Connection Failures</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>25</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv4.ConnectionsReset.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false"
Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Connections Reset</CounterName><ObjectName>TCPv4</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>25</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv6.ConnectionsReset.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Connections Reset</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>25</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsRetransmittedPerSec.Collection" Enabled="false"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Segments Retransmitted/sec</CounterName><ObjectName>TCPv4</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>100</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule
ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsRetransmittedPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Segments Retransmitted/sec</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>100</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW"
TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsReceivedPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Segments Received/sec</CounterName><ObjectName>TCPv4</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>100</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData"
/><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsReceivedPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Segments Received/sec</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>100</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB"
TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsSentPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Segments Sent/sec</CounterName><ObjectName>TCPv4</ObjectName><InstanceName
/><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>100</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule><Rule ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsSentPerSec.Collection" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="PerformanceDS" TypeID="SystemPerf!System.Performance.OptimizedDataProvider"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><CounterName>Segments
Sent/sec</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><AllInstances>false</AllInstances><Frequency>600</Frequency><Tolerance>10</Tolerance><ToleranceType>Absolute</ToleranceType><MaximumSampleSeparation>100</MaximumSampleSeparation></DataSource></DataSources><WriteActions><WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" /><WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" /></WriteActions></Rule></Rules><Tasks><Task ID="Microsoft.Windows.Server.10.0.Computer.ActiveConnections.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NETSTAT.EXE</ApplicationName><WorkingDirectory /><CommandLine /><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files
/></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.IPConfig.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\IPCONFIG.EXE</ApplicationName><WorkingDirectory /><CommandLine>/ALL</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.LocalUsersQuery.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NET.EXE</ApplicationName><WorkingDirectory
/><CommandLine>USER</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.NetStatisticsServer.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" RunAs="System!System.PrivilegedMonitoringAccount" TypeID="Windows!Microsoft.Windows.PowerShellProbe"><ScriptName>Microsoft.Windows.Server.10.0.Computer.NetStatisticsServer.Task.ps1</ScriptName><ScriptBody>
                  
                              param ()
                             $SCRIPT_NAME = "NetStatisticsServer"
                             try
                              {
                              $ErrorActionPreference = "Stop"
                              $Error.Clear()
                              net.exe statistics server 
                              }
                              catch{
                                if($Error[0].Exception.Message.Contains("The syntax of this command is"))
                                    { "Task is not supported on this OS" }
                                   else
                                    { $Error[0].Exception.Message }
                               $Error.Clear()
                              }
                          
                </ScriptBody><TimeoutSeconds>300</TimeoutSeconds></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.NetStatisticsWorkstation.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NET.EXE</ApplicationName><WorkingDirectory /><CommandLine>statistics workstation</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.NetworkShareQuery.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NET.EXE</ApplicationName><WorkingDirectory
/><CommandLine>SHARE</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.ProcessList.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\CMD.EXE</ApplicationName><WorkingDirectory /><CommandLine>/c $file/process.cmd$</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files><File><Name>process.cmd</Name><Contents>
                        
                        @echo off
                         if exist "%WINDIR%\System32\TASKLIST.EXE" (
                            %WINDIR%\System32\TASKLIST.EXE
                            goto end
                          )
                         if exist "%windir%\system32\WindowsPowerShell\v1.0\powershell.exe" (
                            "%windir%\system32\WindowsPowerShell\v1.0\powershell.exe" -Command Get-Process
                            goto end
                          )
                         :end 
                        
                      </Contents><Unicode>false</Unicode></File></Files></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.RoutePrint.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\ROUTE.EXE</ApplicationName><WorkingDirectory /><CommandLine>print</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.ServicesQuery.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NET.EXE</ApplicationName><WorkingDirectory
/><CommandLine>Start</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.SessionQuery.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NET.EXE</ApplicationName><WorkingDirectory /><CommandLine>SESSION</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.Computer.UserAccountSettingsQuery.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA"
TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\NET.EXE</ApplicationName><WorkingDirectory /><CommandLine>ACCOUNTS</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkdsk.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\chkdsk.exe</ApplicationName><WorkingDirectory /><CommandLine>"$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$"</CommandLine><TimeoutSeconds>300</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkntfs.Task" Accessibility="Public" Enabled="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\CMD.EXE</ApplicationName><WorkingDirectory /><CommandLine>/c $file/checkntfs.cmd$</CommandLine><TimeoutSeconds>30</TimeoutSeconds><RequireOutput>true</RequireOutput><Files><File><Name>checkntfs.cmd</Name><Contents>
                      
                        @echo off
                         if exist %WINDIR%\System32\chkntfs.exe (
                            %WINDIR%\System32\chkntfs.exe "$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$"
                            goto end
                          )
                          echo chkntfs is not supported on this Operating System.
                         :end 
                        
                    </Contents><Unicode>false</Unicode></File></Files></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.VolumeInfo.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\fsutil.exe</ApplicationName><WorkingDirectory /><CommandLine>fsinfo volumeinfo "$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$"</CommandLine><TimeoutSeconds>300</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.OperatingSystem.StartServerService.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Timeout="600" Remotable="true"><Category>Maintenance</Category><WriteAction ID="WA"
TypeID="WindowsServer!Microsoft.Windows.Server.StartServiceViaWMI.ModuleType.PowerShell"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName><ServiceName>LanmanServer</ServiceName></WriteAction></Task><Task ID="Microsoft.Windows.Server.10.0.OperatingSystem.TopCPUUsage.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Timeout="600" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="WindowsServer!Microsoft.Windows.Server.TopCPUUsage.ProbeAction.PowerShell"><IntervalMilliseconds>2000</IntervalMilliseconds><NumSamples>5</NumSamples></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="3600" Remotable="true"><Category>Maintenance</Category><WriteAction ID="Defrag"
TypeID="Microsoft.Windows.PSScriptWriteAction"><ScriptName>Microsoft.Windows.Server.LogicalDisk.Defrag.ps1</ScriptName><Arguments>"-TargetComputer '$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$' -DiskLabel '$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$'"</Arguments><ScriptBody>
                  
param ($TargetComputer, $DiskLabel)
$ErrorActionPreference = "Stop"
# Event type constants
$EVENT_TYPE_LOG = 0
$EVENT_TYPE_ERROR = 1
$EVENT_TYPE_WARNING = 2
$EVENT_TYPE_INFORMATION = 4
# Typed property bag constants
$PROPERTY_TYPE_ALERT = 0
$PROPERTY_TYPE_EVENT = 1
$PROPERTY_TYPE_PERFORMANCE = 2
$PROPERTY_TYPE_STATE = 3
# State type constants
$STATE_SUCCESS = "Success"
$STATE_WARNING = "Warning"
$STATE_ERROR = "Error"
$momAPI = New-Object -ComObject Mom.ScriptAPI 
if ($null -eq $momAPI)
{
   exit -1
}
Function Load-CimModules
{
	$ErrorActionPreference = 'SilentlyContinue' 
	$error.Clear()
	$CimModule = Get-Module CimCmdlets
	if ($null -eq $CimModule)
	{
			Import-Module CimCmdlets
	}
}
Load-CimModules
# WMI Constant
$wbemCimtypeUseDefault        = 0   #Use Default Type CIM type - Custom
$wbemCimtypeSint16            = 2   #Signed 16-bit integer 
$wbemCimtypeSint32            = 3   #Signed 32-bit integer 
$wbemCimtypeReal32            = 4   #32-bit real number 
$wbemCimtypeReal64            = 5   #64-bit real number 
$wbemCimtypeString            = 8   #String 
$wbemCimtypeBoolean           = 11  #Boolean value 
$wbemCimtypeObject            = 13  #CIM object 
$wbemCimtypeSint8             = 16  #Signed 8-bit integer 
$wbemCimtypeUint8             = 17  #Unsigned 8-bit integer 
$wbemCimtypeUint16            = 18  #Unsigned 16-bit integer 
$wbemCimtypeUint32            = 19  #Unsigned 32-bit integer 
$wbemCimtypeSint64            = 20  #Signed 64-bit integer  
$wbemCimtypeUint64            = 21  #Unsigned 64-bit integer 
$wbemCimtypeDatetime          = 101 #Date/time value 
$wbemCimtypeReference         = 102 #Reference to a CIM object 
$wbemCimtypeChar16            = 103 #16-bit character 
$ErrAction_None               = 0
$ErrAction_Trace              = 1
$ErrAction_ThrowError         = 16
$ErrAction_Abort              = 32
$ErrAction_ThrowErrorAndAbort = 48
$DISKSIZE_BYTES_IN_MB = 1048576
$g_ErrorEventNumber = 4001
$g_TraceEventNumber = 4002
$g_DebugFlag = $false
#---------------------------------------------------------------------------
# Returns WMI Instance requested. Tries to execute WMI query a N times.
#---------------------------------------------------------------------------
Function WMIGetInstanceExTryN
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery, 
           [int]$N)
    for ($i = 0; $i -lt $N; $i++)
    {
        $error.Clear();
        
		Load-CimModules
		try
        {
		    $cimSessionOption = New-CimSessionOption -Protocol DCOM
		    $cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
            $oInstance = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue
        }
        catch
        {
             $oInstance = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue 
        }
        Finally
        {
            Get-CimSession | Remove-CimSession
		    $cimsession =$null
		    $cimSessionOption = $null 
        }
        if ($error.Count -gt 0)
        {
            if ($i -eq ($N-1))
            {
                ThrowScriptError ("The class name '" + $sInstanceQuery + "' returned no instances.  Please check to see if this is a valid WMI class name.") $error[0]
            }
        }
        else
        {
            break;
        }
        sleep -m 1000
    }
    return $oInstance
}
#---------------------------------------------------------------------------
# Returns WMI Instance requested.
#---------------------------------------------------------------------------
Function WMIGetInstanceEx
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery)
    $error.Clear();
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oInstance = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue
    }
    catch
    {
            $oInstance = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    if ($error.Count -gt 0)
    {
        ThrowScriptError ("The class name '" + $sInstanceQuery + "' returned no instances.  Please check to see if this is a valid WMI class name.") $error[0]
    }
    return $oInstance
}
#---------------------------------------------------------------------------
# Connect to WMI.
#---------------------------------------------------------------------------
Function WMIConnect
{
    param ([string]$sTargetComputer,
           [string]$sNamespace)
    $error.Clear()
    # !!! Refactoring comment: 
    # Original VBScript only tries to connect to the namespace. Piping to get only the first one saves time. 
    
	Load-CimModules
	try
	{
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
		$oWMI = Get-CimClass -CimSession $cimsession -Namespace $sNamespace -ErrorAction SilentlyContinue | select -First 1
	}
	Finally
	{
		Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
	}
    
    if ($error.Count -gt 0)
    {
        $msg = "Unable to open WMI Namespace 'winmgmts:\\" + $sTargetComputer + "\" + $sNamespace + "'. Check to see if the WMI service is enabled and running, and ensure this WMI namespace exists."
        ThrowScriptError $msg $error[0]
    }
}
#---------------------------------------------------------------------------
# Returns WMI Instance requested.
#---------------------------------------------------------------------------
Function WMIGetInstance
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery)
    WMIConnect $sTargetComputer $sNamespace
    $oInstance = WMIGetInstanceEx $sTargetComputer $sNamespace $sInstanceQuery
    return $oInstance
}
#---------------------------------------------------------------------------
# Returns WMI Instance requested.
#---------------------------------------------------------------------------
Function WMIGetInstanceNoAbort
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery)
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oInstance = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue
    }
    catch
    {
        $oInstance = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    return $oInstance
}
#---------------------------------------------------------------------------
# Executes the WMI query and returns the result set.
#---------------------------------------------------------------------------
Function WMIExecQuery
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sQuery)
    $error.Clear()
    # !!! Refactoring comment: 
    # Original VBScript only tries to connect to the namespace. Piping to get only the first one saves time. 
	Load-CimModules
	try
	{
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
		$oWMI = Get-CimClass -CimSession $cimsession -Namespace $sNamespace -ErrorAction SilentlyContinue | select -First 1
	}
	Finally
	{
		Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
	}
    if ($error.Count -gt 0)
    {
        $msg = "Unable to open WMI Namespace 'winmgmts:\\" + $sTargetComputer + "\" + $sNamespace + "'. Check to see if the WMI service is enabled and running, and ensure this WMI namespace exists."
        ThrowScriptError $msg, $error[0]
    }
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oQuery = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue
    }
    catch
    {
        $oQuery = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    if ($error.Count -gt 0)
    {
        ThrowScriptError ("The Query '" + $sQuery + "' returned an invalid result set.  Please check to see if this is a valid WMI Query.") $error[0]
    }
    return $oQuery
}
#---------------------------------------------------------------------------
# Executes the WMI query and returns the result set, no abort version.
#---------------------------------------------------------------------------
Function WMIExecQueryNoAbort
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sQuery)    
    
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oQuery = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue
    }
    catch
    {
        $oQuery = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    return $oQuery
}
#---------------------------------------------------------------------------
# Creates an event and sends it back to the mom server.
#---------------------------------------------------------------------------
Function ThrowScriptErrorNoAbort
{
    param ([string]$sMessage, 
           [System.Management.Automation.ErrorRecord]$oErr)
    # Retrieve the name of this (running) script
    $ScriptFileName = $MyInvocation.ScriptName
    
    if ($oErr -ne $null)
    {
        $sMessage = $sMessage + ". " + $oErr.ErrorDetails
    }
    
    $momAPI.LogScriptEvent($ScriptFileName, $g_ErrorEventNumber, $EVENT_TYPE_ERROR, $sMessage)
    
    Write-Host $sMessage
}
#---------------------------------------------------------------------------
# Creates an event and sends it back to the mom server.
#---------------------------------------------------------------------------
Function ThrowScriptError
{
    param ([string]$sMessage, 
           [System.Management.Automation.ErrorRecord]$oErr)
    ThrowScriptErrorNoAbort $sMessage $oErr
    exit
}
#---------------------------------------------------------------------------
# Verifies that number of arguments is correct
#---------------------------------------------------------------------------
Function VerifyNumberOfArguments
{
    param ($NumberOfArguments)
    if ($args.Length -ne $NumberOfArguments)
    {
       $sArgs = ""
       foreach ($argument in $args)
       {
           $sArgs += " {" + $argument + "}"
       }
       ThrowScriptError ("Invalid number of arguments (" + $args.Length + " instead of " + $NumberOfArguments + "). Arguments:" + $sArgs) $null
    }
}
#---------------------------------------------------------------------------
# Outputs to file and echo for debugging purposes
#---------------------------------------------------------------------------
Function TraceLogMessage
{
    param ([string]$sMessage)
    Write-Host $sMessage
    
    If ($g_DebugFlag -eq $true)
    {
        # Retrieve the name of this (running) script
        $ScriptFileName = $MyInvocation.ScriptName
        
        $momAPI.LogScriptEvent($ScriptFileName, $g_TraceEventNumber, $EVENT_TYPE_INFORMATION, $sMessage)
    }
}
#---------------------------------------------------------------------------
# Verifies the expression. If equals to False then generates an error and quits the script
#   Usage:
#     Verify Not WMISet Is Nothing, "WMISet is invalid!"
#     Verify WMISet.Count = 1, "Invalid quantity of services with name 'Server' (qty = " &amp; WMISet.Count &amp; ")."
#---------------------------------------------------------------------------
Function Verify
{
    param ([bool]$bBool, 
           [string]$sMessage)
    If ($bBool -eq $false)
    {
        ThrowScriptError $sMessage $null
    }
}
Function GetRegistryKeyValue
{
    param ([string]$keyPath, 
           [string]$key)
    $error.Clear()
    $strKeyValue = Get-ItemProperty -Path $keyPath -Name $key -ErrorAction SilentlyContinue
    if ($error.Count -gt 0)
    {
        ThrowScriptError ("An error occurred while reading the registry: '" + $keyPath + $key + "'") $error[0]
    }
    return $strKeyValue.$key
}
#---------------------------------------------------------------------------
# Function: ExpressedInMB
#   Usage:
#     Parameter (SizeInBytes) 
#     Returns the Size Expressed in MBytes
#---------------------------------------------------------------------------
Function ExpressedInMB
{
    param ($SizeInBytes)
    $NumberSizeExpInMB = [math]::Round($SizeInBytes / $DISKSIZE_BYTES_IN_MB, 0)
    return $NumberSizeExpInMB
}
Function Is_Win32_Volume_Supported($TargetComputer)
{
    $blnRet = $false
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$IsNano = Is_NanoServer
	
	if ($true -eq $IsNano)
	{
		return $blnRet #NanoServer does not support Win32_Volume
	}
    $objWMISet = WMIGetInstance $TargetComputer "root\cimv2" "Win32_OperatingSystem"
    foreach ($objWMIOS in $objWMISet)
    {
        if ([int]$objWMIOS.BuildNumber -ge 3624) 
		{
			 $blnRet = $true 
		}
    }
    return $blnRet
}
Function Get_System_Drive($TargetComputer)
{
    $objWMISet = WMIGetInstance $TargetComputer "root\cimv2" "Win32_OperatingSystem"
    foreach ($objWMIOS in $objWMISet)
    {
        return $objWMIOS.SystemDirectory.SubString(0,2)
    }
}
Function Is_NanoServer
{
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$IsNano = (Get-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels").GetValue("NanoServer")
	
	$IsNano = $IsNano -eq 1
	$error.Clear()
	return $IsNano
}
#---------------------------------------------------------------------------
# Function: StripEndChar
#   Usage:
#     Parameter (sName) 
#     Returns the sName without last special Character "\"
#---------------------------------------------------------------------------
Function StripEndChar([string]$sName)
{
    if ([string]::IsNullOrEmpty($sName))
    { 
        return [string]::Empty
    }
    else
    {
        return $sName.Substring(0, $sName.Length-1)
    }
}
Function Load-Module ([string] $ModuleName)
{
	if ([string]::IsNullOrEmpty($ModuleName) )
	{
		return $false
	}
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$retval = $false
	$cim = Get-Module -Name $ModuleName
	########Check for powershell 1.0
	if ($error.Count -ne 0)
	{
	   $type = $error[0].Exception.GetType()
	   if ([System.Management.Automation.CommandNotFoundException] -eq $type)
	   {
		   $error.Clear()
		   return $retval
	   }
       $error.Clear()
	}
	if ($null -eq $cim)
	{
			Import-Module $ModuleName
		    if ($error.Count -eq 0)
		    {
				$retval = $true
			}
			
		   $error.Clear()
	}
	else
	    {
			$retval = $true
		}
	return $retval
}
Function Get-Volumes([bool]$IsNano,[bool]$IsVolumeSupported,[string] $TargetComputer)
{
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$oVolumes = $null
	if ($true -eq $IsNano)
	{
		$bLoadModule = Load-Module -ModuleName "Storage"
		if($false -eq $bLoadModule)
        {
			return $null
		} 
		$oVolumes =  Get-Volume | where {$_.DriveType -eq "Fixed" -and $false -eq [string]::IsNullOrEmpty($_.FileSystem )}
	}
	else 
		{
			if ($true -eq $IsVolumeSupported)
			{
				 $oVolumes = WMIGetInstanceNoAbort $TargetComputer "root\cimv2" "Win32_Volume where (DriveType=3) and FileSystem!=null" 
			}
			else
			   {
				   $oVolumes = WMIGetInstanceNoAbort $TargetComputer "root\cimv2" "Win32_LogicalDisk where (DriveType=3) and FileSystem!=null"  
			   }
		}
	return $oVolumes
} 
Function Get-VolumeId([bool]$IsNano,[bool]$IsVolumeSupported,$Volume)
{
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	if ($null -eq $Volume)
	{
		return $null
	}
	if ($true -eq $IsVolumeSupported)
	{
		$VolumeId = $Volume.DriveLetter
		if([string]::IsNullOrEmpty($VolumeId) )
		{
			$VolumeId = StripEndChar -sName $Volume.Name 
		}
	}
	else
	    {
			if ($true -eq $IsNano )
			{
				$VolumeId = $Volume.DriveLetter
				if([string]::IsNullOrEmpty($VolumeId) )
				{
					$VolumeId = StripEndChar -sName $Volume.UniqueId 
				}
				else
				{
					if (1 -eq $VolumeId.Length)
					{
						$VolumeId = $VolumeId + ":" 
					}
				}
			}
			else
			    {
					$VolumeId = $Volume.DeviceId
				}
			
		}
	return $VolumeId
} 
Function CreatePerformanceCounterData($strObjectName, $strCounterName, $strInstanceName, $varValue)
{
									return @{ "PerfObject"  = $strObjectName;
                                             "PerfCounter"  = $strCounterName;
                                             "PerfInstance" = $strInstanceName;
                                             "PerfValue"     =  $varValue;
                                             }
}
Function Create-PerformancePropertyBag ($strObjectName, $strCounterName, $strInstanceName, $varValue,$objMomScriptAPI)
{
				$ErrorActionPreference = "SilentlyContinue"
				$error.Clear()
				if ([string]::IsNullOrEmpty($varValue))
	            {
					$varValue = 0
				}	
	            if ($null -eq $objMomScriptAPI)
				{
					return
				}
				$objTypedPropertyBag = $objMomScriptAPI.CreateTypedPropertyBag($PROPERTY_TYPE_PERFORMANCE)
				$objTypedPropertyBag.AddValue("PerfObject"   ,$strObjectName)
				$objTypedPropertyBag.AddValue("PerfCounter"  ,$strCounterName)
				$objTypedPropertyBag.AddValue("PerfInstance" ,$strInstanceName)
				$objTypedPropertyBag.AddValue("PerfValue"    ,$varValue)
				$objTypedPropertyBag
     
}
Function Create-EmptyPerfData ($objMomScriptAPI)
{
	 if ($null -eq $objMomScriptAPI)
  	 {
		return
 
	 }
		$ErrorActionPreference = 'SilentlyContinue' # Scoped only to function
		$error.Clear()
		$objTypedPropertyBag = $objMomScriptAPI.CreateTypedPropertyBag($PROPERTY_TYPE_PERFORMANCE)
		$objTypedPropertyBag.AddValue("PerfObject"   ,"EMPTY")
		$objTypedPropertyBag.AddValue("PerfCounter"  ,"EMPTY")
		$objTypedPropertyBag.AddValue("PerfInstance" ,"EMPTY")
		$objTypedPropertyBag.AddValue("PerfValue"    ,"EMPTY")
		#Add the property bag to the script#s XML output
		$objTypedPropertyBag
	   
	   $error.Clear()
}
Function Convert-ToBoolean([string] $sBool)
 {
    [bool] $result  = $false
    [bool] $iresult = $false
    if ($false -eq [string]::IsNullOrEmpty($sBool) )
    {
       $result  = $sBool.Equals("true",[System.StringComparison]::InvariantCultureIgnoreCase)
       $iresult = $sBool.Equals("1",[System.StringComparison]::InvariantCultureIgnoreCase)
       $result  = $result -or $iresult
    }
    
    return $result
 }
 Function Unload-Module([string]$ModuleName)
 {
		$ErrorActionPreference = 'SilentlyContinue' # Scoped only to function
		$error.Clear()
	    if ([string]::IsNullOrEmpty($ModuleName))
		{
			return
		}
	    $module = Get-Module $ModuleName  
	    if ($null -eq $module)
		{
		   return
		}
		Remove-Module -Name $ModuleName -Force 
 }
Function Load-CimModules
{
	$error.Clear()
	$CimModule = Get-Module CimCmdlets
	if ($null -eq $CimModule)
	{
			Import-Module CimCmdlets
			$error.Clear()
	}
}
#Copyright (c) Microsoft Corporation. All rights reserved.
                      
# Parameters that should be passed to this script
# 0 Computer (FQDN)
# 1 Logical Drive Letter
Function Main()
{   
    # Fragmentation analysis requires lots of time and consumes lots of CPU.
    # So it is important to trace such activity in events log in order to be able
    # to understand what is going on.
    $g_DebugFlag = $true
	$IsMsftVolumeSupported = Is_MSFT_Volume_Supported_On_NanoServer $TargetComputer
	$IsVolumeInfoSupported = Is_Win32_Volume_Supported $TargetComputer
	if ($IsMsftVolumeSupported -eq $true) # Win32_Volume is not supported on NanoServer
	{
		Start-DefragOnNano -TargetComputer $TargetComputer -DiskLabel $DiskLabel
	}
	else
       {
		   if ($false -eq $IsVolumeInfoSupported)
			{ 
				TraceLogMessage ("This Operating System doesn't support volumes WMI class.")
				return
			}
           
		    Start-Defrag -TargetComputer $TargetComputer -DiskLabel $DiskLabel
	   }
   
    Unload-Module -ModuleName "CimCmdLets"
}
Function Is_MSFT_Volume_Supported_On_NanoServer($TargetComputer)
{
	$ErrorActionPreference = "SilentlyContinue"
	$error.Clear()
	$bRet = $false
	$IsNano = Is_NanoServer 
	if ($true -eq $IsNano)
	{
		Load-CimModules
		try
		{
	 		$cimSessionOption = New-CimSessionOption -Protocol DCOM
	 		$cimsession = New-CimSession -SessionOption $cimSessionOption 
	 		$oWMI = Get-CimClass -CimSession $cimsession -NameSpace "root\microsoft\windows\storage" MSFT_Volume -ErrorAction SilentlyContinue
		}
		Finally
		{
	 		Get-CimSession | Remove-CimSession
	 		$cimsession =$null
	 		$cimSessionOption = $null 
		}
		if ($oWMI -ne $null)
		{
	 		$bRet = $true
		}
	}
	return $bRet
}
Function Start-DefragOnNano($TargetComputer,$DiskLabel)
{
	$ErrorActionPreference = "SilentlyContinue"
	$error.Clear()
	$IsDiskFound = $false
		$oWmiDiskSet = WMIGetInstanceNoAbort $TargetComputer "root\microsoft\windows\storage" "MSFT_Volume WHERE (DriveType=3 or DriveType=6) and FileSystem!=null"
		foreach ($oWmiDisk in $oWmiDiskSet)
		{
			$sDriveLetter = $oWmiDisk.DriveLetter
			if ([string]::IsNullOrEmpty($sDriveLetter))
			{
				$sDriveLetter = $oWmiDisk.UniqueId
			}
			else
				{
				   $sDriveLetter = $oWmiDisk.DriveLetter + ":" # MSFT_Volume only has "C" instead of "C:" as DriveLetter
				}
			if ($sDriveLetter -ieq $DiskLabel)
			{
					TraceLogMessage ("Perform Defragmentation (disk: " + $DiskLabel + "; computer: " + $TargetComputer + ").")
					$error.Clear()
					Load-CimModules
					try
					{
						$cimSessionOption = New-CimSessionOption -Protocol DCOM
						$cimsession = New-CimSession -SessionOption $cimSessionOption 
						$ret = Invoke-CimMethod -CimSession $cimsession -CimInstance $oWmiDisk -MethodName Optimize -Arguments @{ReTrim=$false;Analyze=$false;Defrag=$true;SlabConsolidate=$false;TierOptimize=$false} -ErrorAction SilentlyContinue
					}
					Finally
					{
						Get-CimSession | Remove-CimSession
						$cimsession =$null
						$cimSessionOption = $null 
					}
					TraceLogMessage ("Defragmentation completed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + ").")
            
					If ($ret.ReturnValue -ne 0 -or $error.Count -ne 0)
					{
							ThrowScriptError ("Defrag failed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). Return code: " + $ret.ReturnValue + ".") $error[0]
					}
					$IsDiskFound = $true
					break
		   }
 
		}
        if ($false -eq $IsDiskFound)
		{
		   		TraceLogMessage ("ERROR: Could not find a disk (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). In cluster environment this might occur when disk does not belong to current computer anymore.")
		}
		return
}
Function Start-Defrag($TargetComputer,$DiskLabel)
{
	$ErrorActionPreference = "SilentlyContinue"
	$error.Clear()
	$IsDiskFound = $false
    $oWmiDiskSet = WMIGetInstanceNoAbort $TargetComputer "root\cimv2" "Win32_Volume WHERE (DriveType=3 or DriveType=6) and FileSystem!=null"
		foreach ($oWmiDisk in $oWmiDiskSet)
		{
			$sDriveLetter = $oWmiDisk.DriveLetter
			if ([string]::IsNullOrEmpty($sDriveLetter))
			{
				            $sDriveLetter = $oWmiDisk.Name
							$sDriveLetter = StripEndChar -sName $sDriveLetter
			}
			if ($sDriveLetter -ieq $DiskLabel)
			{
					TraceLogMessage ("Perform Defragmentation (disk: " + $DiskLabel + "; computer: " + $TargetComputer + ").")
					$error.Clear()
					Load-CimModules
					try
					{
						$cimSessionOption = New-CimSessionOption -Protocol DCOM
						$cimsession = New-CimSession -SessionOption $cimSessionOption 
						$ret = Invoke-CimMethod -CimSession $cimsession -CimInstance $oWmiDisk -MethodName Defrag -Arguments @{Force=$false} -ErrorAction SilentlyContinue
					}
					Finally
					{
						Get-CimSession | Remove-CimSession
						$cimsession =$null
						$cimSessionOption = $null 
					}
		            TraceLogMessage ("Defragmentation completed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "): FilePercentFragmentation = " + $ret.DefragAnalysis.FilePercentFragmentation + ".")
            
					If ($ret.ReturnValue -ne 0 -or $error.Count -ne 0)
					{
							ThrowScriptError ("Defrag failed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). Return code: " + $ret.ReturnValue + ".") $error[0]
					}
					$IsDiskFound = $true
					break
		   }
 
		}
        if ($false -eq $IsDiskFound)
		{
		   		TraceLogMessage ("ERROR: Could not find a disk (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). In cluster environment this might occur when disk does not belong to current computer anymore.")
		}
		return
}
Function Load-CimModules
{
	$error.Clear()
	$CimModule = Get-Module CimCmdlets
	if ($null -eq $CimModule)
	{
			Import-Module CimCmdlets
			$error.Clear()
	}
}
Main
</ScriptBody><TimeoutSeconds>3600</TimeoutSeconds></WriteAction></Task><Task ID="Microsoft.Windows.Server.10.0.Monitoring.BPA.CheckBPAResult.Task" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Timeout="300" Remotable="true"><Category>ConfigurationHealth</Category><WriteAction ID="Probe" TypeID="Microsoft.Windows.Server.10.0.Monitoring.BPA.Task.WA.ModuleType"><IncludeCompliant>true</IncludeCompliant></WriteAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkdsk.Scan.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\chkdsk.exe</ApplicationName><WorkingDirectory /><CommandLine>"$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$"
/scan</CommandLine><TimeoutSeconds>300</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkdsk.SpotFix.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\chkdsk.exe</ApplicationName><WorkingDirectory /><CommandLine>"$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$" /spotfix</CommandLine><TimeoutSeconds>300</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkdsk.Full.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA"
TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\chkdsk.exe</ApplicationName><WorkingDirectory /><CommandLine>"$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$" /f</CommandLine><TimeoutSeconds>300</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task ID="Microsoft.Windows.Server.10.0.LogicalDisk.FsUtil.RepairState.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Timeout="300" Remotable="true"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="System!System.CommandExecuterProbe"><ApplicationName>%WINDIR%\System32\fsutil.exe</ApplicationName><WorkingDirectory /><CommandLine>repair state "$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$"</CommandLine><TimeoutSeconds>300</TimeoutSeconds><RequireOutput>true</RequireOutput><Files /></ProbeAction></Task><Task
ID="Microsoft.Windows.Server.10.0.OperatingSystem.StartFirewallService.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Timeout="600" Remotable="true"><Category>Maintenance</Category><WriteAction ID="WA" TypeID="WindowsServer!Microsoft.Windows.Server.StartServiceViaWMI.ModuleType.PowerShell"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName><ServiceName>MpsSvc</ServiceName></WriteAction></Task><Task ID="Microsoft.Windows.Server.10.0.OperatingSystem.StartWindowsRemoteManagementService.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Timeout="600" Remotable="true"><Category>Maintenance</Category><WriteAction ID="WA"
TypeID="WindowsServer!Microsoft.Windows.Server.StartServiceViaWMI.ModuleType.PowerShell"><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName><ServiceName>WinRM</ServiceName></WriteAction></Task></Tasks><Monitors><AggregateMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>StateCollection</Category><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpaceMonitorRollup" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true"
Priority="Normal"><Category>AvailabilityHealth</Category><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.Windows.Server.10.0.Processor.PerformanceRollup" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal"><Category>PerformanceHealth</Category><Algorithm>WorstOf</Algorithm></AggregateMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.Monitoring.BPA.OperatingSystem.Monitor" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.ConfigurationState" Remotable="true" Priority="Normal" RunAs="System!System.PrivilegedMonitoringAccount" TypeID="Microsoft.Windows.Server.10.0.Monitoring.MonitorType" ConfirmDelivery="true"><Category>ConfigurationHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.Monitoring.BPA.OperatingSystem.Monitor.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Property[@Name='Message']$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MonitorHealthyState" MonitorTypeStateID="Healthy" HealthState="Success" /><OperationalState ID="MonitorWarningState" MonitorTypeStateID="Warning" HealthState="Warning" /><OperationalState ID="MonitorErrorState" MonitorTypeStateID="Error" HealthState="Error" /></OperationalStates><Configuration><Interval>86400</Interval></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk"
ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/Name$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotAvailabile" MonitorTypeStateID="Bad" HealthState="Error" /><OperationalState ID="Availabile" MonitorTypeStateID="Good" HealthState="Success"
/></OperationalStates><Configuration><IntervalSeconds>3600</IntervalSeconds><TargetComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</TargetComputerName><DiskLabel>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</DiskLabel><TimeoutSeconds>300</TimeoutSeconds></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype" ConfirmDelivery="true"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/Name$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Disconnected" MonitorTypeStateID="Bad" HealthState="Error" /><OperationalState ID="Connected" MonitorTypeStateID="Good" HealthState="Success"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><DeviceName>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</DeviceName><TimeoutSeconds>300</TimeoutSeconds><MonitorMediaDisconnection>false</MonitorMediaDisconnection><MonitorDisconnection>true</MonitorDisconnection><MonitorHardwareMalfunction>false</MonitorHardwareMalfunction></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" RunAs="System!System.PrivilegedMonitoringAccount" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>Browser</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>DHCP</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>DNSCache</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>Eventlog</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.PlugandPlayServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.PlugandPlayServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>PlugPlay</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.RPCServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.RPCServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>RpcSs</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServerServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.ServerServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>lanmanserver</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.TCPIPNetBiosHelperBrowserServiceHealth" Accessibility="Public" Enabled="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.TCPIPNetBiosHelperBrowserServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>LmHosts</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.WindowsActivation" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.ConfigurationState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.3SingleEventLog3StateUnitMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.WindowsActivation.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/EventDescription$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Activated" MonitorTypeStateID="FirstEventRaised" HealthState="Success" /><OperationalState ID="NeedsActivated6Days" MonitorTypeStateID="ThirdEventRaised" HealthState="Error" /><OperationalState ID="NeedsActivated15Days" MonitorTypeStateID="SecondEventRaised" HealthState="Warning"
/></OperationalStates><Configuration><FirstComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</FirstComputerName><FirstLogName>Application</FirstLogName><FirstExpression><And><Expression><SimpleExpression><ValueExpression><XPathQuery>EventSourceName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>Windows Product
Activation</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery>EventDisplayNumber</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>1006</Value></ValueExpression></SimpleExpression></Expression></And></FirstExpression><SecondComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</SecondComputerName><SecondLogName>Application</SecondLogName><SecondExpression><And><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery>EventSourceName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>Windows Product
Activation</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery>EventDisplayNumber</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>1005</Value></ValueExpression></SimpleExpression></Expression></And></Expression><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Integer">Params/Param[1]</XPathQuery></ValueExpression><Operator>Greater</Operator><ValueExpression><Value Type="Integer">6</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Integer">Params/Param[1]</XPathQuery></ValueExpression><Operator>LessEqual</Operator><ValueExpression><Value
Type="Integer">15</Value></ValueExpression></SimpleExpression></Expression></And></Expression></And></SecondExpression><ThirdComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ThirdComputerName><ThirdLogName>Application</ThirdLogName><ThirdExpression><And><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery>EventSourceName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>Windows Product Activation</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery>EventDisplayNumber</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>1005</Value></ValueExpression></SimpleExpression></Expression></And></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Integer">Params/Param[1]</XPathQuery></ValueExpression><Operator>LessEqual</Operator><ValueExpression><Value
Type="Integer">6</Value></ValueExpression></SimpleExpression></Expression></And></ThirdExpression></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.WorkstationServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.WorkstationServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>Lanmanworkstation</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.MaxConcurrentAPI.Monitor" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RunAs="System!System.PrivilegedMonitoringAccount" TypeID="WindowsServer!Microsoft.Windows.Server.MaxConcurrentAPI.MonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.MaxConcurrentAPI.Monitor.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="MaxConcurrentAPIAvailable" MonitorTypeStateID="Success" HealthState="Success" /><OperationalState ID="MaxConcurrentAPIReached" MonitorTypeStateID="Error" HealthState="Error"
/></OperationalStates><Configuration><DiagnosticMode>0</DiagnosticMode><IntervalSeconds>900</IntervalSeconds><SyncTime /><TimeoutSeconds>300</TimeoutSeconds><ThresholdWaiters>50</ThresholdWaiters><ThresholdTimeouts>2000</ThresholdTimeouts></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.FirewallServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.FirewallServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>MpsSvc</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.WindowsRemoteManagementServiceHealth" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
ParentMonitorID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false"><Category>StateCollection</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.WindowsRemoteManagementServiceHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" /><OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><ServiceName>WinRM</ServiceName></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.StorportMiniportDriver.Timedout.153.Monitor" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer" ParentMonitorID="WindowsServer!Microsoft.Windows.Server.Computer.HardwareAvailabilityAggregate" Remotable="true" Priority="Normal" RunAs="System!System.PrivilegedMonitoringAccount" TypeID="Windows!Microsoft.Windows.SingleEventLogTimer2StateMonitorType" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.StorportMiniportDriver.Timedout.153.Monitor.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="TimerEventRaised" MonitorTypeStateID="TimerEventRaised" HealthState="Success" /><OperationalState ID="EventRaised" MonitorTypeStateID="EventRaised" HealthState="Error" /></OperationalStates><Configuration><ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><LogName>System</LogName><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value
Type="UnsignedInteger">153</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">PublisherName</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="String">Disk</Value></ValueExpression></SimpleExpression></Expression></And></Expression><TimerWaitInSeconds>86400</TimerWaitInSeconds></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Idle Time</CounterName><ObjectName>LogicalDisk</ObjectName><InstanceName>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</InstanceName><Frequency>900</Frequency><Threshold>20</Threshold><Direction>lessequal</Direction><NumSamples>24</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength"
Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Current Disk Queue
Length</CounterName><ObjectName>LogicalDisk</ObjectName><InstanceName>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</InstanceName><Frequency>300</Frequency><Threshold>32</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Idle Time</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><Frequency>900</Frequency><Threshold>20</Threshold><Direction>lessequal</Direction><NumSamples>24</NumSamples></Configuration></UnitMonitor><UnitMonitor
ID="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Current Disk Queue Length</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><Frequency>300</Frequency><Threshold>32</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Free System Page Table Entries</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>300</Frequency><Threshold>5000</Threshold><Direction>lessequal</Direction><NumSamples>6</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond" Accessibility="Public" Enabled="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Pages/Sec</CounterName><ObjectName>Memory</ObjectName><InstanceName
/><Frequency>300</Frequency><Threshold>5000</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType" ConfirmDelivery="true"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads.Alert.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="UnderThreshold" MonitorTypeStateID="HealthyState" HealthState="Success" /><OperationalState
ID="OverThreshold" MonitorTypeStateID="WarningState" HealthState="Warning" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.NetworkAdapter"]/PerfmonInstance$</InstanceName><CounterName>PercentBandwidthUsedRead</CounterName><Threshold>60</Threshold><NumOfSamples>12</NumOfSamples><IntervalSeconds>300</IntervalSeconds><IsDiscoverDisabled>false</IsDiscoverDisabled><IsUseMacAddress>true</IsUseMacAddress></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType"
ConfirmDelivery="true"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal.Alert.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="UnderThreshold" MonitorTypeStateID="HealthyState" HealthState="Success" /><OperationalState ID="OverThreshold" MonitorTypeStateID="WarningState" HealthState="Warning"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.NetworkAdapter"]/PerfmonInstance$</InstanceName><CounterName>PercentBandwidthUsedTotal</CounterName><Threshold>75</Threshold><NumOfSamples>12</NumOfSamples><IntervalSeconds>300</IntervalSeconds><IsDiscoverDisabled>false</IsDiscoverDisabled><IsUseMacAddress>true</IsUseMacAddress></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType" ConfirmDelivery="true"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites.Alert.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="UnderThreshold" MonitorTypeStateID="HealthyState" HealthState="Success" /><OperationalState ID="OverThreshold" MonitorTypeStateID="WarningState" HealthState="Warning"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</ComputerName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.NetworkAdapter"]/PerfmonInstance$</InstanceName><CounterName>PercentBandwidthUsedWrite</CounterName><Threshold>60</Threshold><NumOfSamples>12</NumOfSamples><IntervalSeconds>300</IntervalSeconds><IsDiscoverDisabled>false</IsDiscoverDisabled><IsUseMacAddress>true</IsUseMacAddress></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk sec/Read</CounterName><ObjectName>LogicalDisk</ObjectName><InstanceName>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</InstanceName><Frequency>60</Frequency><Threshold>0.04</Threshold><Direction>greater</Direction><NumSamples>15</NumSamples></Configuration></UnitMonitor><UnitMonitor
ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk sec/Transfer</CounterName><ObjectName>LogicalDisk</ObjectName><InstanceName>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</InstanceName><Frequency>60</Frequency><Threshold>0.04</Threshold><Direction>greater</Direction><NumSamples>15</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk sec/Write</CounterName><ObjectName>LogicalDisk</ObjectName><InstanceName>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</InstanceName><Frequency>60</Frequency><Threshold>0.04</Threshold><Direction>greater</Direction><NumSamples>15</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace"
Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" ConfirmDelivery="true"><Category>Custom</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</AlertParameter1><AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="UnderWarningThresholds" MonitorTypeStateID="UnderWarningThresholds" HealthState="Success" /><OperationalState
ID="OverWarningUnderErrorThresholds" MonitorTypeStateID="OverWarningUnderErrorThresholds" HealthState="Warning" /><OperationalState ID="OverErrorThresholds" MonitorTypeStateID="OverErrorThresholds" HealthState="Error"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><DiskLabel>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</DiskLabel><IntervalSeconds>900</IntervalSeconds><SystemDriveWarningMBytesThreshold>500</SystemDriveWarningMBytesThreshold><SystemDriveWarningPercentThreshold>10</SystemDriveWarningPercentThreshold><SystemDriveErrorMBytesThreshold>300</SystemDriveErrorMBytesThreshold><SystemDriveErrorPercentThreshold>5</SystemDriveErrorPercentThreshold><NonSystemDriveWarningMBytesThreshold>2000</NonSystemDriveWarningMBytesThreshold><NonSystemDriveWarningPercentThreshold>10</NonSystemDriveWarningPercentThreshold><NonSystemDriveErrorMBytesThreshold>1000</NonSystemDriveErrorMBytesThreshold><NonSystemDriveErrorPercentThreshold>5</NonSystemDriveErrorPercentThreshold><NumSamples>4</NumSamples></Configuration></UnitMonitor><UnitMonitor
ID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" RunAs="System!System.PrivilegedMonitoringAccount" TypeID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$
($Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/Name$)</AlertParameter1><AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2><AlertParameter3>$Data/Context/Property[@Name='FilePercentFragmentation']$</AlertParameter3><AlertParameter4>$Data/Context/Property[@Name='OSRecommended']$</AlertParameter4></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="UnderThreshold" MonitorTypeStateID="Warning" HealthState="Warning" /><OperationalState ID="OverThreshold" MonitorTypeStateID="Success" HealthState="Success" /></OperationalStates><Configuration><SchedulerStart>03:00</SchedulerStart><SchedulerDaysOfWeekMask>64</SchedulerDaysOfWeekMask><FilePercentFragmentationThreshold>10</FilePercentFragmentationThreshold><UseOSRecommendation>true</UseOSRecommendation></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes" Accessibility="Public"
Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Property[@Name='AvailableMBytes']$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="MemoryAvailableMBytesNormal" HealthState="Success" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="MemoryAvailableMBytesLow" HealthState="Error"
/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><TimeoutSeconds>300</TimeoutSeconds><TargetComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</TargetComputerName><MemoryThreshold>100</MemoryThreshold><NumSamples>3</NumSamples><CounterName>Available MBytes</CounterName><ObjectName>Memory</ObjectName><InstanceName /><AllInstances>false</AllInstances></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentCommittedBytesInUse" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.PercentCommittedBytesInUse.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Error" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Committed Bytes In Use</CounterName><ObjectName>Memory</ObjectName><InstanceName /><Frequency>120</Frequency><Threshold>80</Threshold><Direction>greater</Direction><NumSamples>3</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalCPUUtilization" Accessibility="Public" Enabled="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.TotalCPUUtilization.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Property[@Name='PctUsage']$</AlertParameter1><AlertParameter2>$Data/Context/Property[@Name='QueueLength']$</AlertParameter2></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="CPUUtilizationHigh" HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="CPUUtilizationNormal" HealthState="Success"
/></OperationalStates><Configuration><IntervalSeconds>900</IntervalSeconds><TimeoutSeconds>300</TimeoutSeconds><TargetComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</TargetComputerName><CPUPercentageThreshold>95</CPUPercentageThreshold><CPUQueueLengthThreshold>15</CPUQueueLengthThreshold><NumSamples>3</NumSamples><CounterName>% Processor Time</CounterName><ObjectName>Processor Information</ObjectName><InstanceName>_Total</InstanceName><AllInstances>false</AllInstances></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalDPCTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.TotalDPCTime.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% DPC Time</CounterName><ObjectName>Processor Information</ObjectName><InstanceName>_Total</InstanceName><Frequency>120</Frequency><Threshold>95</Threshold><Direction>greater</Direction><NumSamples>5</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentInterruptTime" Accessibility="Public" Enabled="false"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentInterruptTime.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Interrupt Time</CounterName><ObjectName>Processor
Information</ObjectName><InstanceName>_Total</InstanceName><Frequency>120</Frequency><Threshold>10</Threshold><Direction>greater</Direction><NumSamples>5</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerRead" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerRead.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState
ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk sec/Read</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><Frequency>60</Frequency><Threshold>0.04</Threshold><Direction>greater</Direction><NumSamples>15</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerTransfer" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerTransfer.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk sec/Transfer</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><Frequency>60</Frequency><Threshold>0.04</Threshold><Direction>greater</Direction><NumSamples>15</NumSamples></Configuration></UnitMonitor><UnitMonitor
ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerWrite" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerWrite.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Avg. Disk sec/Write</CounterName><ObjectName>PhysicalDisk</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.PhysicalDisk"]/PerfmonInstance$</InstanceName><Frequency>60</Frequency><Threshold>0.04</Threshold><Direction>greater</Direction><NumSamples>15</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.Processor.CPUUtilization" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ParentMonitorID="Microsoft.Windows.Server.10.0.Processor.PerformanceRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.Processor.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold"
HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" /></OperationalStates><Configuration><CounterName>% Processor Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.Processor"]/PerfmonInstance$</InstanceName><Frequency>120</Frequency><Threshold>95</Threshold><NumSamples>5</NumSamples><TimeoutSeconds>300</TimeoutSeconds></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.Processor.PercentDPCTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ParentMonitorID="Microsoft.Windows.Server.10.0.Processor.PerformanceRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.Processor.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold"
HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" /></OperationalStates><Configuration><CounterName>% DPC Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.Processor"]/PerfmonInstance$</InstanceName><Frequency>120</Frequency><Threshold>15</Threshold><NumSamples>5</NumSamples><TimeoutSeconds>300</TimeoutSeconds></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.Processor.PercentInterruptTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ParentMonitorID="Microsoft.Windows.Server.10.0.Processor.PerformanceRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.Processor.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold"
HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" /></OperationalStates><Configuration><CounterName>% Interrupt Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="WindowsServer!Microsoft.Windows.Server.Processor"]/PerfmonInstance$</InstanceName><Frequency>120</Frequency><Threshold>10</Threshold><NumSamples>5</NumSamples><TimeoutSeconds>300</TimeoutSeconds></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalProcessor.CPUUtilization" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue"
HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Processor Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"]/PerfmonInstance$</InstanceName><Frequency>120</Frequency><Threshold>95</Threshold><Direction>greaterequal</Direction><NumSamples>5</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalProcessor.PercentDPCTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold"
ConfirmDelivery="false"><Category>PerformanceHealth</Category><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% DPC Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"]/PerfmonInstance$</InstanceName><Frequency>120</Frequency><Threshold>15</Threshold><Direction>greaterequal</Direction><NumSamples>5</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalProcessor.PercentInterruptTime" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"
ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>% Interrupt Time</CounterName><ObjectName>Processor</ObjectName><InstanceName>$Target/Property[Type="ServervNext!Microsoft.Windows.Server.10.0.LogicalProcessor"]/PerfmonInstance$</InstanceName><Frequency>120</Frequency><Threshold>10</Threshold><Direction>greaterequal</Direction><NumSamples>5</NumSamples></Configuration></UnitMonitor><UnitMonitor
ID="Microsoft.Windows.Server.10.0.LogicalDisk.MBFreeSpace" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpaceMonitorRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.DiskState.Monitortype" ConfirmDelivery="true"><Category>Custom</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.MBFreeSpace.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</AlertParameter1><AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2><AlertParameter3>$Data/Context/SampleValue$</AlertParameter3></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="UnderWarningThresholds" MonitorTypeStateID="UnderWarningThresholds" HealthState="Success" /><OperationalState ID="OverWarningUnderErrorThresholds" MonitorTypeStateID="OverWarningUnderErrorThresholds" HealthState="Warning" /><OperationalState ID="OverErrorThresholds" MonitorTypeStateID="OverErrorThresholds" HealthState="Error"
/></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><DiskLabel>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</DiskLabel><CounterName>MbFree</CounterName><IntervalSeconds>900</IntervalSeconds><NumSamples>4</NumSamples><SystemDriveWarningThreshold>500</SystemDriveWarningThreshold><SystemDriveErrorThreshold>300</SystemDriveErrorThreshold><NonSystemDriveWarningThreshold>2000</NonSystemDriveWarningThreshold><NonSystemDriveErrorThreshold>1000</NonSystemDriveErrorThreshold></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentageFreeSpace" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpaceMonitorRollup" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.DiskState.Monitortype"
ConfirmDelivery="true"><Category>Custom</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.LogicalDisk.PercentageFreeSpace.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</AlertParameter1><AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2><AlertParameter3>$Data/Context/SampleValue$</AlertParameter3></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="UnderWarningThresholds" MonitorTypeStateID="UnderWarningThresholds" HealthState="Success" /><OperationalState ID="OverWarningUnderErrorThresholds" MonitorTypeStateID="OverWarningUnderErrorThresholds" HealthState="Warning" /><OperationalState ID="OverErrorThresholds" MonitorTypeStateID="OverErrorThresholds"
HealthState="Error" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><DiskLabel>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</DiskLabel><CounterName>PercentFree</CounterName><IntervalSeconds>900</IntervalSeconds><NumSamples>4</NumSamples><SystemDriveWarningThreshold>10</SystemDriveWarningThreshold><SystemDriveErrorThreshold>5</SystemDriveErrorThreshold><NonSystemDriveWarningThreshold>10</NonSystemDriveWarningThreshold><NonSystemDriveErrorThreshold>5</NonSystemDriveErrorThreshold></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.Legacy.LogicalDisk.FreeSpace.Monitor" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal"
TypeID="Microsoft.Windows.Server.10.0.Legacy.LogicalDisk.FreeSpace.Monitortype" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.Legacy.LogicalDisk.FreeSpace.Monitor.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>MatchMonitorHealth</AlertSeverity><AlertParameters><AlertParameter1>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</AlertParameter1><AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2><AlertParameter3>$Data/Context/Property[@Name='PctFree']$</AlertParameter3><AlertParameter4>$Data/Context/Property[@Name='MbFree']$</AlertParameter4></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="UnderWarningThresholds" MonitorTypeStateID="UnderWarningThresholds" HealthState="Success" /><OperationalState
ID="OverWarningUnderErrorThresholds" MonitorTypeStateID="OverWarningUnderErrorThresholds" HealthState="Warning" /><OperationalState ID="OverErrorThresholds" MonitorTypeStateID="OverErrorThresholds" HealthState="Error"
/></OperationalStates><Configuration><IntervalSeconds>3600</IntervalSeconds><TargetComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</TargetComputerName><SystemDriveWarningMBytesThreshold>500</SystemDriveWarningMBytesThreshold><SystemDriveWarningPercentThreshold>10</SystemDriveWarningPercentThreshold><SystemDriveErrorMBytesThreshold>300</SystemDriveErrorMBytesThreshold><SystemDriveErrorPercentThreshold>5</SystemDriveErrorPercentThreshold><NonSystemDriveWarningMBytesThreshold>2000</NonSystemDriveWarningMBytesThreshold><NonSystemDriveWarningPercentThreshold>10</NonSystemDriveWarningPercentThreshold><NonSystemDriveErrorMBytesThreshold>1000</NonSystemDriveErrorMBytesThreshold><NonSystemDriveErrorPercentThreshold>5</NonSystemDriveErrorPercentThreshold><DiskLabel>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</DiskLabel><TimeoutSeconds>360</TimeoutSeconds><DebugFlag>false</DebugFlag></Configuration></UnitMonitor><UnitMonito
r ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalTimeOffset" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.Server.10.0.TimeOffset.Monitortype" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.OperatingSystem.TotalTimeOffset.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Property[@Name='TimeOffset']$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="TimeOffsetHigh" HealthState="Error" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="TimeOffsetNormal" HealthState="Success"
/></OperationalStates><Configuration><IntervalSeconds>600</IntervalSeconds><TimeoutSeconds>120</TimeoutSeconds><TargetComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</TargetComputerName><Threshold>60000</Threshold><NumSamples>4</NumSamples><CounterName>Computed Time Offset</CounterName><ObjectName>Windows Time Service</ObjectName><InstanceName /><AllInstances>false</AllInstances></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsRetransmittedPerSec" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.TCPv4.SegmentsRetransmittedPerSec.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Segments Retransmitted/sec</CounterName><ObjectName>TCPv4</ObjectName><InstanceName /><Frequency>300</Frequency><Threshold>10</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsReceivedPerSec" Accessibility="Public" Enabled="false"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.TCPv4.SegmentsReceivedPerSec.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Segments Received/sec</CounterName><ObjectName>TCPv4</ObjectName><InstanceName
/><Frequency>300</Frequency><Threshold>100</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsSentPerSec" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.TCPv4.SegmentsSentPerSec.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse"
HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Segments Sent/sec</CounterName><ObjectName>TCPv4</ObjectName><InstanceName /><Frequency>300</Frequency><Threshold>100</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsRetransmittedPerSec" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings
AlertMessage="Microsoft.Windows.Server.10.0.TCPv6.SegmentsRetransmittedPerSec.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Segments Retransmitted/sec</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><Frequency>300</Frequency><Threshold>10</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsReceivedPerSec" Accessibility="Public" Enabled="false"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.TCPv6.SegmentsReceivedPerSec.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse" HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Segments Received/sec</CounterName><ObjectName>TCPv6</ObjectName><InstanceName
/><Frequency>300</Frequency><Threshold>100</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsSentPerSec" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="SystemPerf!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false"><Category>PerformanceHealth</Category><AlertSettings AlertMessage="Microsoft.Windows.Server.10.0.TCPv6.SegmentsSentPerSec.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity></AlertSettings><OperationalStates><OperationalState ID="OverThreshold" MonitorTypeStateID="ConditionTrue" HealthState="Warning" /><OperationalState ID="UnderThreshold" MonitorTypeStateID="ConditionFalse"
HealthState="Success" /></OperationalStates><Configuration><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName><CounterName>Segments Sent/sec</CounterName><ObjectName>TCPv6</ObjectName><InstanceName /><Frequency>300</Frequency><Threshold>100</Threshold><Direction>greaterequal</Direction><NumSamples>12</NumSamples></Configuration></UnitMonitor><UnitMonitor ID="Microsoft.SystemCenter.HealthService.UpdateAgent.StateMonitor" Accessibility="Public" Enabled="true" Target="SC!Microsoft.SystemCenter.HealthService" ParentMonitorID="SystemHealth!System.Health.ConfigurationState" Remotable="true" Priority="Normal" TypeID="Microsoft.SystemCenter.HealthService.UpdateAgent.ProbScript" ConfirmDelivery="false"><Category>AvailabilityHealth</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.HealthService.UpdateAgent.StateMonitor.AlertMessage"><AlertOnState>Warning</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>Normal</AlertPriority><AlertSeverity>Warning</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Property[@Name='AgentVersion']$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Critical" MonitorTypeStateID="Error" HealthState="Error" /><OperationalState ID="Warning" MonitorTypeStateID="Warning" HealthState="Warning" /><OperationalState ID="Healthy" MonitorTypeStateID="Success" HealthState="Success" /></OperationalStates><Configuration><TargetVersion>10.19.10177.0</TargetVersion><ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName><IntervalSeconds>86400</IntervalSeconds><SyncTime
/><TimeoutSeconds>300</TimeoutSeconds><AgentVersion>$Target/Property[Type="SC!Microsoft.SystemCenter.HealthService"]/Version$</AgentVersion></Configuration></UnitMonitor><DependencyMonitor ID="Microsoft.Windows.Server.10.0.DiskPartition.LogicalDiskAvailabilityRollup" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.DiskPartition" ParentMonitorID="SystemHealth!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="ServervNext!Microsoft.Windows.Server.10.0.DiskPartitionContainsLogicalDisk" MemberMonitor="SystemHealth!System.Health.AvailabilityState"><Category>AvailabilityHealth</Category><Algorithm>WorstOf</Algorithm><MemberUnAvailable>Error</MemberUnAvailable></DependencyMonitor><DependencyMonitor ID="Microsoft.Windows.Server.10.0.DiskPartition.LogicalDiskPerformanceRollup" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.DiskPartition"
ParentMonitorID="SystemHealth!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="ServervNext!Microsoft.Windows.Server.10.0.DiskPartitionContainsLogicalDisk" MemberMonitor="SystemHealth!System.Health.PerformanceState"><Category>StateCollection</Category><Algorithm>WorstOf</Algorithm><MemberUnAvailable>Error</MemberUnAvailable></DependencyMonitor><DependencyMonitor ID="Microsoft.Windows.Server.10.0.Processor.LogicalProcessorPerformanceRollup" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" ParentMonitorID="Microsoft.Windows.Server.10.0.Processor.PerformanceRollup" Remotable="true" Priority="Normal" RelationshipType="ServervNext!Microsoft.Windows.Server.10.0.ProcessorHostsLogicalProcessor"
MemberMonitor="SystemHealth!System.Health.PerformanceState"><Category>PerformanceHealth</Category><Algorithm>BestOf</Algorithm><MemberUnAvailable>Error</MemberUnAvailable></DependencyMonitor></Monitors><Diagnostics><Diagnostic ID="Microsoft.Windows.Server.10.0.OperatingSystem.TopCPUUsage.Diagnostic" Comment="List Top CPU Consuming processes." Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Monitor="Microsoft.Windows.Server.10.0.OperatingSystem.TotalCPUUtilization" ExecuteOnState="Error" Remotable="true" Timeout="300"><Category>Maintenance</Category><ProbeAction ID="PA" TypeID="WindowsServer!Microsoft.Windows.Server.TopCPUUsage.ProbeAction.PowerShell"><IntervalMilliseconds>2000</IntervalMilliseconds><NumSamples>5</NumSamples></ProbeAction></Diagnostic><Diagnostic ID="Microsoft.Windows.Server.10.0.Monitoring.BPA.Diagnostic" Accessibility="Public" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"
Monitor="Microsoft.Windows.Server.10.0.Monitoring.BPA.OperatingSystem.Monitor" ExecuteOnState="Warning" Remotable="true" Timeout="300"><Category>ConfigurationHealth</Category><ProbeAction ID="Probe" TypeID="Microsoft.Windows.Server.10.0.Monitoring.BPA.Task.ModuleType"><IncludeCompliant>true</IncludeCompliant></ProbeAction></Diagnostic><Diagnostic ID="Microsoft.Windows.Server.10.0.MaxConcurrentAPI.Diagnostic" Comment="List all Max Concurrent API. performance data" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" Monitor="Microsoft.Windows.Server.10.0.MaxConcurrentAPI.Monitor" ExecuteOnState="Error" Remotable="true" Timeout="300"><Category>Maintenance</Category><ProbeAction ID="PA"
TypeID="WindowsServer!Microsoft.Windows.Server.MaxConcurrentAPI.Probe"><DiagnosticMode>1</DiagnosticMode><TimeoutSeconds>300</TimeoutSeconds><ThresholdWaiters>50</ThresholdWaiters><ThresholdTimeouts>2000</ThresholdTimeouts></ProbeAction></Diagnostic></Diagnostics><Recoveries><Recovery ID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Recovery" Accessibility="Internal" Enabled="false" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" Monitor="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis" ResetMonitor="true" ExecuteOnState="Warning" Remotable="true" Timeout="3600"><Category>Maintenance</Category><WriteAction ID="Defrag" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction"><ScriptName>Microsoft.Windows.Server.LogicalDisk.Defrag.ps1</ScriptName><ScriptBody>
                  
  param ($TargetComputer, $DiskLabel)
  
$ErrorActionPreference = "Stop"
# Event type constants
$EVENT_TYPE_LOG = 0
$EVENT_TYPE_ERROR = 1
$EVENT_TYPE_WARNING = 2
$EVENT_TYPE_INFORMATION = 4
# Typed property bag constants
$PROPERTY_TYPE_ALERT = 0
$PROPERTY_TYPE_EVENT = 1
$PROPERTY_TYPE_PERFORMANCE = 2
$PROPERTY_TYPE_STATE = 3
# State type constants
$STATE_SUCCESS = "Success"
$STATE_WARNING = "Warning"
$STATE_ERROR = "Error"
$momAPI = New-Object -ComObject Mom.ScriptAPI 
if ($null -eq $momAPI)
{
   exit -1
}
Function Load-CimModules
{
	$ErrorActionPreference = 'SilentlyContinue' 
	$error.Clear()
	$CimModule = Get-Module CimCmdlets
	if ($null -eq $CimModule)
	{
			Import-Module CimCmdlets
	}
}
Load-CimModules
# WMI Constant
$wbemCimtypeUseDefault        = 0   #Use Default Type CIM type - Custom
$wbemCimtypeSint16            = 2   #Signed 16-bit integer 
$wbemCimtypeSint32            = 3   #Signed 32-bit integer 
$wbemCimtypeReal32            = 4   #32-bit real number 
$wbemCimtypeReal64            = 5   #64-bit real number 
$wbemCimtypeString            = 8   #String 
$wbemCimtypeBoolean           = 11  #Boolean value 
$wbemCimtypeObject            = 13  #CIM object 
$wbemCimtypeSint8             = 16  #Signed 8-bit integer 
$wbemCimtypeUint8             = 17  #Unsigned 8-bit integer 
$wbemCimtypeUint16            = 18  #Unsigned 16-bit integer 
$wbemCimtypeUint32            = 19  #Unsigned 32-bit integer 
$wbemCimtypeSint64            = 20  #Signed 64-bit integer  
$wbemCimtypeUint64            = 21  #Unsigned 64-bit integer 
$wbemCimtypeDatetime          = 101 #Date/time value 
$wbemCimtypeReference         = 102 #Reference to a CIM object 
$wbemCimtypeChar16            = 103 #16-bit character 
$ErrAction_None               = 0
$ErrAction_Trace              = 1
$ErrAction_ThrowError         = 16
$ErrAction_Abort              = 32
$ErrAction_ThrowErrorAndAbort = 48
$DISKSIZE_BYTES_IN_MB = 1048576
$g_ErrorEventNumber = 4001
$g_TraceEventNumber = 4002
$g_DebugFlag = $false
#---------------------------------------------------------------------------
# Returns WMI Instance requested. Tries to execute WMI query a N times.
#---------------------------------------------------------------------------
Function WMIGetInstanceExTryN
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery, 
           [int]$N)
    for ($i = 0; $i -lt $N; $i++)
    {
        $error.Clear();
        
		Load-CimModules
		try
        {
		    $cimSessionOption = New-CimSessionOption -Protocol DCOM
		    $cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
            $oInstance = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue
        }
        catch
        {
             $oInstance = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue 
        }
        Finally
        {
            Get-CimSession | Remove-CimSession
		    $cimsession =$null
		    $cimSessionOption = $null 
        }
        if ($error.Count -gt 0)
        {
            if ($i -eq ($N-1))
            {
                ThrowScriptError ("The class name '" + $sInstanceQuery + "' returned no instances.  Please check to see if this is a valid WMI class name.") $error[0]
            }
        }
        else
        {
            break;
        }
        sleep -m 1000
    }
    return $oInstance
}
#---------------------------------------------------------------------------
# Returns WMI Instance requested.
#---------------------------------------------------------------------------
Function WMIGetInstanceEx
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery)
    $error.Clear();
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oInstance = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue
    }
    catch
    {
            $oInstance = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    if ($error.Count -gt 0)
    {
        ThrowScriptError ("The class name '" + $sInstanceQuery + "' returned no instances.  Please check to see if this is a valid WMI class name.") $error[0]
    }
    return $oInstance
}
#---------------------------------------------------------------------------
# Connect to WMI.
#---------------------------------------------------------------------------
Function WMIConnect
{
    param ([string]$sTargetComputer,
           [string]$sNamespace)
    $error.Clear()
    # !!! Refactoring comment: 
    # Original VBScript only tries to connect to the namespace. Piping to get only the first one saves time. 
    
	Load-CimModules
	try
	{
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
		$oWMI = Get-CimClass -CimSession $cimsession -Namespace $sNamespace -ErrorAction SilentlyContinue | select -First 1
	}
	Finally
	{
		Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
	}
    
    if ($error.Count -gt 0)
    {
        $msg = "Unable to open WMI Namespace 'winmgmts:\\" + $sTargetComputer + "\" + $sNamespace + "'. Check to see if the WMI service is enabled and running, and ensure this WMI namespace exists."
        ThrowScriptError $msg $error[0]
    }
}
#---------------------------------------------------------------------------
# Returns WMI Instance requested.
#---------------------------------------------------------------------------
Function WMIGetInstance
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery)
    WMIConnect $sTargetComputer $sNamespace
    $oInstance = WMIGetInstanceEx $sTargetComputer $sNamespace $sInstanceQuery
    return $oInstance
}
#---------------------------------------------------------------------------
# Returns WMI Instance requested.
#---------------------------------------------------------------------------
Function WMIGetInstanceNoAbort
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sInstanceQuery)
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oInstance = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue
    }
    catch
    {
        $oInstance = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query ("Select * from "+$sInstanceQuery) -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    return $oInstance
}
#---------------------------------------------------------------------------
# Executes the WMI query and returns the result set.
#---------------------------------------------------------------------------
Function WMIExecQuery
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sQuery)
    $error.Clear()
    # !!! Refactoring comment: 
    # Original VBScript only tries to connect to the namespace. Piping to get only the first one saves time. 
	Load-CimModules
	try
	{
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
		$oWMI = Get-CimClass -CimSession $cimsession -Namespace $sNamespace -ErrorAction SilentlyContinue | select -First 1
	}
	Finally
	{
		Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
	}
    if ($error.Count -gt 0)
    {
        $msg = "Unable to open WMI Namespace 'winmgmts:\\" + $sTargetComputer + "\" + $sNamespace + "'. Check to see if the WMI service is enabled and running, and ensure this WMI namespace exists."
        ThrowScriptError $msg, $error[0]
    }
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oQuery = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue
    }
    catch
    {
        $oQuery = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    if ($error.Count -gt 0)
    {
        ThrowScriptError ("The Query '" + $sQuery + "' returned an invalid result set.  Please check to see if this is a valid WMI Query.") $error[0]
    }
    return $oQuery
}
#---------------------------------------------------------------------------
# Executes the WMI query and returns the result set, no abort version.
#---------------------------------------------------------------------------
Function WMIExecQueryNoAbort
{
    param ([string]$sTargetComputer,
           [string]$sNamespace,
           [string]$sQuery)    
    
	Load-CimModules
	try
    {
		$cimSessionOption = New-CimSessionOption -Protocol DCOM
		$cimsession = New-CimSession -ComputerName $sTargetComputer -SessionOption $cimSessionOption 
        $oQuery = Get-CimInstance -CimSession $cimsession -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue
    }
    catch
    {
        $oQuery = Get-WMIObject -ComputerName $sTargetComputer -Namespace $sNamespace -Query $sQuery -ErrorAction SilentlyContinue 
    }
    Finally
    {
        Get-CimSession | Remove-CimSession
		$cimsession =$null
		$cimSessionOption = $null 
    }
    return $oQuery
}
#---------------------------------------------------------------------------
# Creates an event and sends it back to the mom server.
#---------------------------------------------------------------------------
Function ThrowScriptErrorNoAbort
{
    param ([string]$sMessage, 
           [System.Management.Automation.ErrorRecord]$oErr)
    # Retrieve the name of this (running) script
    $ScriptFileName = $MyInvocation.ScriptName
    
    if ($oErr -ne $null)
    {
        $sMessage = $sMessage + ". " + $oErr.ErrorDetails
    }
    
    $momAPI.LogScriptEvent($ScriptFileName, $g_ErrorEventNumber, $EVENT_TYPE_ERROR, $sMessage)
    
    Write-Host $sMessage
}
#---------------------------------------------------------------------------
# Creates an event and sends it back to the mom server.
#---------------------------------------------------------------------------
Function ThrowScriptError
{
    param ([string]$sMessage, 
           [System.Management.Automation.ErrorRecord]$oErr)
    ThrowScriptErrorNoAbort $sMessage $oErr
    exit
}
#---------------------------------------------------------------------------
# Verifies that number of arguments is correct
#---------------------------------------------------------------------------
Function VerifyNumberOfArguments
{
    param ($NumberOfArguments)
    if ($args.Length -ne $NumberOfArguments)
    {
       $sArgs = ""
       foreach ($argument in $args)
       {
           $sArgs += " {" + $argument + "}"
       }
       ThrowScriptError ("Invalid number of arguments (" + $args.Length + " instead of " + $NumberOfArguments + "). Arguments:" + $sArgs) $null
    }
}
#---------------------------------------------------------------------------
# Outputs to file and echo for debugging purposes
#---------------------------------------------------------------------------
Function TraceLogMessage
{
    param ([string]$sMessage)
    Write-Host $sMessage
    
    If ($g_DebugFlag -eq $true)
    {
        # Retrieve the name of this (running) script
        $ScriptFileName = $MyInvocation.ScriptName
        
        $momAPI.LogScriptEvent($ScriptFileName, $g_TraceEventNumber, $EVENT_TYPE_INFORMATION, $sMessage)
    }
}
#---------------------------------------------------------------------------
# Verifies the expression. If equals to False then generates an error and quits the script
#   Usage:
#     Verify Not WMISet Is Nothing, "WMISet is invalid!"
#     Verify WMISet.Count = 1, "Invalid quantity of services with name 'Server' (qty = " &amp; WMISet.Count &amp; ")."
#---------------------------------------------------------------------------
Function Verify
{
    param ([bool]$bBool, 
           [string]$sMessage)
    If ($bBool -eq $false)
    {
        ThrowScriptError $sMessage $null
    }
}
Function GetRegistryKeyValue
{
    param ([string]$keyPath, 
           [string]$key)
    $error.Clear()
    $strKeyValue = Get-ItemProperty -Path $keyPath -Name $key -ErrorAction SilentlyContinue
    if ($error.Count -gt 0)
    {
        ThrowScriptError ("An error occurred while reading the registry: '" + $keyPath + $key + "'") $error[0]
    }
    return $strKeyValue.$key
}
#---------------------------------------------------------------------------
# Function: ExpressedInMB
#   Usage:
#     Parameter (SizeInBytes) 
#     Returns the Size Expressed in MBytes
#---------------------------------------------------------------------------
Function ExpressedInMB
{
    param ($SizeInBytes)
    $NumberSizeExpInMB = [math]::Round($SizeInBytes / $DISKSIZE_BYTES_IN_MB, 0)
    return $NumberSizeExpInMB
}
Function Is_Win32_Volume_Supported($TargetComputer)
{
    $blnRet = $false
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$IsNano = Is_NanoServer
	
	if ($true -eq $IsNano)
	{
		return $blnRet #NanoServer does not support Win32_Volume
	}
    $objWMISet = WMIGetInstance $TargetComputer "root\cimv2" "Win32_OperatingSystem"
    foreach ($objWMIOS in $objWMISet)
    {
        if ([int]$objWMIOS.BuildNumber -ge 3624) 
		{
			 $blnRet = $true 
		}
    }
    return $blnRet
}
Function Get_System_Drive($TargetComputer)
{
    $objWMISet = WMIGetInstance $TargetComputer "root\cimv2" "Win32_OperatingSystem"
    foreach ($objWMIOS in $objWMISet)
    {
        return $objWMIOS.SystemDirectory.SubString(0,2)
    }
}
Function Is_NanoServer
{
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$IsNano = (Get-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels").GetValue("NanoServer")
	
	$IsNano = $IsNano -eq 1
	$error.Clear()
	return $IsNano
}
#---------------------------------------------------------------------------
# Function: StripEndChar
#   Usage:
#     Parameter (sName) 
#     Returns the sName without last special Character "\"
#---------------------------------------------------------------------------
Function StripEndChar([string]$sName)
{
    if ([string]::IsNullOrEmpty($sName))
    { 
        return [string]::Empty
    }
    else
    {
        return $sName.Substring(0, $sName.Length-1)
    }
}
Function Load-Module ([string] $ModuleName)
{
	if ([string]::IsNullOrEmpty($ModuleName) )
	{
		return $false
	}
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$retval = $false
	$cim = Get-Module -Name $ModuleName
	########Check for powershell 1.0
	if ($error.Count -ne 0)
	{
	   $type = $error[0].Exception.GetType()
	   if ([System.Management.Automation.CommandNotFoundException] -eq $type)
	   {
		   $error.Clear()
		   return $retval
	   }
       $error.Clear()
	}
	if ($null -eq $cim)
	{
			Import-Module $ModuleName
		    if ($error.Count -eq 0)
		    {
				$retval = $true
			}
			
		   $error.Clear()
	}
	else
	    {
			$retval = $true
		}
	return $retval
}
Function Get-Volumes([bool]$IsNano,[bool]$IsVolumeSupported,[string] $TargetComputer)
{
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	$oVolumes = $null
	if ($true -eq $IsNano)
	{
		$bLoadModule = Load-Module -ModuleName "Storage"
		if($false -eq $bLoadModule)
        {
			return $null
		} 
		$oVolumes =  Get-Volume | where {$_.DriveType -eq "Fixed" -and $false -eq [string]::IsNullOrEmpty($_.FileSystem )}
	}
	else 
		{
			if ($true -eq $IsVolumeSupported)
			{
				 $oVolumes = WMIGetInstanceNoAbort $TargetComputer "root\cimv2" "Win32_Volume where (DriveType=3) and FileSystem!=null" 
			}
			else
			   {
				   $oVolumes = WMIGetInstanceNoAbort $TargetComputer "root\cimv2" "Win32_LogicalDisk where (DriveType=3) and FileSystem!=null"  
			   }
		}
	return $oVolumes
} 
Function Get-VolumeId([bool]$IsNano,[bool]$IsVolumeSupported,$Volume)
{
	$ErrorActionPreference="SilentlyContinue"
	$error.Clear()
	if ($null -eq $Volume)
	{
		return $null
	}
	if ($true -eq $IsVolumeSupported)
	{
		$VolumeId = $Volume.DriveLetter
		if([string]::IsNullOrEmpty($VolumeId) )
		{
			$VolumeId = StripEndChar -sName $Volume.Name 
		}
	}
	else
	    {
			if ($true -eq $IsNano )
			{
				$VolumeId = $Volume.DriveLetter
				if([string]::IsNullOrEmpty($VolumeId) )
				{
					$VolumeId = StripEndChar -sName $Volume.UniqueId 
				}
				else
				{
					if (1 -eq $VolumeId.Length)
					{
						$VolumeId = $VolumeId + ":" 
					}
				}
			}
			else
			    {
					$VolumeId = $Volume.DeviceId
				}
			
		}
	return $VolumeId
} 
Function CreatePerformanceCounterData($strObjectName, $strCounterName, $strInstanceName, $varValue)
{
									return @{ "PerfObject"  = $strObjectName;
                                             "PerfCounter"  = $strCounterName;
                                             "PerfInstance" = $strInstanceName;
                                             "PerfValue"     =  $varValue;
                                             }
}
Function Create-PerformancePropertyBag ($strObjectName, $strCounterName, $strInstanceName, $varValue,$objMomScriptAPI)
{
				$ErrorActionPreference = "SilentlyContinue"
				$error.Clear()
				if ([string]::IsNullOrEmpty($varValue))
	            {
					$varValue = 0
				}	
	            if ($null -eq $objMomScriptAPI)
				{
					return
				}
				$objTypedPropertyBag = $objMomScriptAPI.CreateTypedPropertyBag($PROPERTY_TYPE_PERFORMANCE)
				$objTypedPropertyBag.AddValue("PerfObject"   ,$strObjectName)
				$objTypedPropertyBag.AddValue("PerfCounter"  ,$strCounterName)
				$objTypedPropertyBag.AddValue("PerfInstance" ,$strInstanceName)
				$objTypedPropertyBag.AddValue("PerfValue"    ,$varValue)
				$objTypedPropertyBag
     
}
Function Create-EmptyPerfData ($objMomScriptAPI)
{
	 if ($null -eq $objMomScriptAPI)
  	 {
		return
 
	 }
		$ErrorActionPreference = 'SilentlyContinue' # Scoped only to function
		$error.Clear()
		$objTypedPropertyBag = $objMomScriptAPI.CreateTypedPropertyBag($PROPERTY_TYPE_PERFORMANCE)
		$objTypedPropertyBag.AddValue("PerfObject"   ,"EMPTY")
		$objTypedPropertyBag.AddValue("PerfCounter"  ,"EMPTY")
		$objTypedPropertyBag.AddValue("PerfInstance" ,"EMPTY")
		$objTypedPropertyBag.AddValue("PerfValue"    ,"EMPTY")
		#Add the property bag to the script#s XML output
		$objTypedPropertyBag
	   
	   $error.Clear()
}
Function Convert-ToBoolean([string] $sBool)
 {
    [bool] $result  = $false
    [bool] $iresult = $false
    if ($false -eq [string]::IsNullOrEmpty($sBool) )
    {
       $result  = $sBool.Equals("true",[System.StringComparison]::InvariantCultureIgnoreCase)
       $iresult = $sBool.Equals("1",[System.StringComparison]::InvariantCultureIgnoreCase)
       $result  = $result -or $iresult
    }
    
    return $result
 }
 Function Unload-Module([string]$ModuleName)
 {
		$ErrorActionPreference = 'SilentlyContinue' # Scoped only to function
		$error.Clear()
	    if ([string]::IsNullOrEmpty($ModuleName))
		{
			return
		}
	    $module = Get-Module $ModuleName  
	    if ($null -eq $module)
		{
		   return
		}
		Remove-Module -Name $ModuleName -Force 
 }
Function Load-CimModules
{
	$error.Clear()
	$CimModule = Get-Module CimCmdlets
	if ($null -eq $CimModule)
	{
			Import-Module CimCmdlets
			$error.Clear()
	}
}
#Copyright (c) Microsoft Corporation. All rights reserved.
                      
# Parameters that should be passed to this script
# 0 Computer (FQDN)
# 1 Logical Drive Letter
Function Main()
{   
    # Fragmentation analysis requires lots of time and consumes lots of CPU.
    # So it is important to trace such activity in events log in order to be able
    # to understand what is going on.
    $g_DebugFlag = $true
	$IsMsftVolumeSupported = Is_MSFT_Volume_Supported_On_NanoServer $TargetComputer
	$IsVolumeInfoSupported = Is_Win32_Volume_Supported $TargetComputer
	if ($IsMsftVolumeSupported -eq $true) # Win32_Volume is not supported on NanoServer
	{
		Start-DefragOnNano -TargetComputer $TargetComputer -DiskLabel $DiskLabel
	}
	else
       {
		   if ($false -eq $IsVolumeInfoSupported)
			{ 
				TraceLogMessage ("This Operating System doesn't support volumes WMI class.")
				return
			}
           
		    Start-Defrag -TargetComputer $TargetComputer -DiskLabel $DiskLabel
	   }
   
    Unload-Module -ModuleName "CimCmdLets"
}
Function Is_MSFT_Volume_Supported_On_NanoServer($TargetComputer)
{
	$ErrorActionPreference = "SilentlyContinue"
	$error.Clear()
	$bRet = $false
	$IsNano = Is_NanoServer 
	if ($true -eq $IsNano)
	{
		Load-CimModules
		try
		{
	 		$cimSessionOption = New-CimSessionOption -Protocol DCOM
	 		$cimsession = New-CimSession -SessionOption $cimSessionOption 
	 		$oWMI = Get-CimClass -CimSession $cimsession -NameSpace "root\microsoft\windows\storage" MSFT_Volume -ErrorAction SilentlyContinue
		}
		Finally
		{
	 		Get-CimSession | Remove-CimSession
	 		$cimsession =$null
	 		$cimSessionOption = $null 
		}
		if ($oWMI -ne $null)
		{
	 		$bRet = $true
		}
	}
	return $bRet
}
Function Start-DefragOnNano($TargetComputer,$DiskLabel)
{
	$ErrorActionPreference = "SilentlyContinue"
	$error.Clear()
	$IsDiskFound = $false
		$oWmiDiskSet = WMIGetInstanceNoAbort $TargetComputer "root\microsoft\windows\storage" "MSFT_Volume WHERE (DriveType=3 or DriveType=6) and FileSystem!=null"
		foreach ($oWmiDisk in $oWmiDiskSet)
		{
			$sDriveLetter = $oWmiDisk.DriveLetter
			if ([string]::IsNullOrEmpty($sDriveLetter))
			{
				$sDriveLetter = $oWmiDisk.UniqueId
			}
			else
				{
				   $sDriveLetter = $oWmiDisk.DriveLetter + ":" # MSFT_Volume only has "C" instead of "C:" as DriveLetter
				}
			if ($sDriveLetter -ieq $DiskLabel)
			{
					TraceLogMessage ("Perform Defragmentation (disk: " + $DiskLabel + "; computer: " + $TargetComputer + ").")
					$error.Clear()
					Load-CimModules
					try
					{
						$cimSessionOption = New-CimSessionOption -Protocol DCOM
						$cimsession = New-CimSession -SessionOption $cimSessionOption 
						$ret = Invoke-CimMethod -CimSession $cimsession -CimInstance $oWmiDisk -MethodName Optimize -Arguments @{ReTrim=$false;Analyze=$false;Defrag=$true;SlabConsolidate=$false;TierOptimize=$false} -ErrorAction SilentlyContinue
					}
					Finally
					{
						Get-CimSession | Remove-CimSession
						$cimsession =$null
						$cimSessionOption = $null 
					}
					TraceLogMessage ("Defragmentation completed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + ").")
            
					If ($ret.ReturnValue -ne 0 -or $error.Count -ne 0)
					{
							ThrowScriptError ("Defrag failed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). Return code: " + $ret.ReturnValue + ".") $error[0]
					}
					$IsDiskFound = $true
					break
		   }
 
		}
        if ($false -eq $IsDiskFound)
		{
		   		TraceLogMessage ("ERROR: Could not find a disk (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). In cluster environment this might occur when disk does not belong to current computer anymore.")
		}
		return
}
Function Start-Defrag($TargetComputer,$DiskLabel)
{
	$ErrorActionPreference = "SilentlyContinue"
	$error.Clear()
	$IsDiskFound = $false
    $oWmiDiskSet = WMIGetInstanceNoAbort $TargetComputer "root\cimv2" "Win32_Volume WHERE (DriveType=3 or DriveType=6) and FileSystem!=null"
		foreach ($oWmiDisk in $oWmiDiskSet)
		{
			$sDriveLetter = $oWmiDisk.DriveLetter
			if ([string]::IsNullOrEmpty($sDriveLetter))
			{
				            $sDriveLetter = $oWmiDisk.Name
							$sDriveLetter = StripEndChar -sName $sDriveLetter
			}
			if ($sDriveLetter -ieq $DiskLabel)
			{
					TraceLogMessage ("Perform Defragmentation (disk: " + $DiskLabel + "; computer: " + $TargetComputer + ").")
					$error.Clear()
					Load-CimModules
					try
					{
						$cimSessionOption = New-CimSessionOption -Protocol DCOM
						$cimsession = New-CimSession -SessionOption $cimSessionOption 
						$ret = Invoke-CimMethod -CimSession $cimsession -CimInstance $oWmiDisk -MethodName Defrag -Arguments @{Force=$false} -ErrorAction SilentlyContinue
					}
					Finally
					{
						Get-CimSession | Remove-CimSession
						$cimsession =$null
						$cimSessionOption = $null 
					}
		            TraceLogMessage ("Defragmentation completed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "): FilePercentFragmentation = " + $ret.DefragAnalysis.FilePercentFragmentation + ".")
            
					If ($ret.ReturnValue -ne 0 -or $error.Count -ne 0)
					{
							ThrowScriptError ("Defrag failed (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). Return code: " + $ret.ReturnValue + ".") $error[0]
					}
					$IsDiskFound = $true
					break
		   }
 
		}
        if ($false -eq $IsDiskFound)
		{
		   		TraceLogMessage ("ERROR: Could not find a disk (disk: " + $DiskLabel + "; computer: " + $TargetComputer + "). In cluster environment this might occur when disk does not belong to current computer anymore.")
		}
		return
}
Function Load-CimModules
{
	$error.Clear()
	$CimModule = Get-Module CimCmdlets
	if ($null -eq $CimModule)
	{
			Import-Module CimCmdlets
			$error.Clear()
	}
}
Main
</ScriptBody><Parameters><Parameter><Name>TargetComputer</Name><Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Value></Parameter><Parameter><Name>DiskLabel</Name><Value>$Target/Property[Type="Windows!Microsoft.Windows.LogicalDevice"]/DeviceID$</Value></Parameter></Parameters><TimeoutSeconds>3600</TimeoutSeconds></WriteAction></Recovery></Recoveries></Monitoring><PresentationTypes><UIPageSets><UIPageSet ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet" TypeDefinitionID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype"><UIPageReferences><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference1" PageID="SystemHealth!System.Health.MonitorGeneralPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference2" PageID="System!System.SimpleSchedulerPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet
xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="SimpleReccuringSchedule"><xsl:element name="Interval"><xsl:value-of select="IntervalSeconds" /></xsl:element></xsl:element></xsl:template></xsl:stylesheet></InputTransform></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference3" PageID="SystemPerf!System.Performance.ThresholdPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="Threshold"><xsl:value-of select="CPUPercentageThreshold" /></xsl:element><xsl:element name="Direction">greaterthan</xsl:element><xsl:copy-of select="NumSamples" /></xsl:template></xsl:stylesheet></InputTransform><TabName
ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference3.TabName" /></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference4" PageID="SystemPerf!System.Performance.ThresholdComparisonPage" Usage="CreationAndUpdate"><InputParameters><ValidOperators><Operator>greater</Operator><Operator>greaterequal</Operator><Operator>less</Operator><Operator>lessequal</Operator></ValidOperators></InputParameters><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="Threshold"><xsl:value-of select="CPUQueueLengthThreshold" /></xsl:element><xsl:element name="Operator">greater</xsl:element></xsl:template></xsl:stylesheet></InputTransform><TabName ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference4.TabName"
/></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference5" PageID="SystemHealth!System.Health.OperationalStatesConfigPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference6" PageID="SystemHealth!System.Health.AlertingPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference7" PageID="SystemHealth!System.Health.DiagnosticAndRecoveryPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference8" PageID="SystemHealth!System.Health.ProductKnowledgePage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference9" PageID="SystemHealth!System.Health.CompanyKnowledgePage" Usage="CreationAndUpdate"
/></UIPageReferences></UIPageSet><UIPageSet ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet" TypeDefinitionID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype"><UIPageReferences><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference1" PageID="SystemHealth!System.Health.MonitorGeneralPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference2" PageID="System!System.SimpleSchedulerPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="SimpleReccuringSchedule"><xsl:element name="Interval"><xsl:value-of select="IntervalSeconds" /></xsl:element></xsl:element></xsl:template></xsl:stylesheet></InputTransform></UIPageReference><UIPageReference
ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference3" PageID="SystemPerf!System.Performance.DoubleThresholdPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="Threshold1"><xsl:value-of select="SystemDriveErrorPercentThreshold" /></xsl:element><xsl:element name="Threshold2"><xsl:value-of select="SystemDriveWarningPercentThreshold" /></xsl:element></xsl:template></xsl:stylesheet></InputTransform><TabName ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference3.TabName" /></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference4" PageID="SystemPerf!System.Performance.DoubleThresholdPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="Threshold1"><xsl:value-of select="SystemDriveErrorMBytesThreshold" /></xsl:element><xsl:element name="Threshold2"><xsl:value-of select="SystemDriveWarningMBytesThreshold" /></xsl:element></xsl:template></xsl:stylesheet></InputTransform><TabName ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference4.TabName" /></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference5" PageID="SystemPerf!System.Performance.DoubleThresholdPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="Threshold1"><xsl:value-of select="NonSystemDriveErrorPercentThreshold" /></xsl:element><xsl:element name="Threshold2"><xsl:value-of
select="NonSystemDriveWarningPercentThreshold" /></xsl:element></xsl:template></xsl:stylesheet></InputTransform><TabName ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference5.TabName" /></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference6" PageID="SystemPerf!System.Performance.DoubleThresholdPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="Threshold1"><xsl:value-of select="NonSystemDriveErrorMBytesThreshold" /></xsl:element><xsl:element name="Threshold2"><xsl:value-of select="NonSystemDriveWarningMBytesThreshold" /></xsl:element></xsl:template></xsl:stylesheet></InputTransform><TabName ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference6.TabName" /></UIPageReference><UIPageReference
ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference7" PageID="SystemHealth!System.Health.OperationalStatesConfigPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference8" PageID="SystemHealth!System.Health.AlertingPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference9" PageID="SystemHealth!System.Health.DiagnosticAndRecoveryPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference10" PageID="SystemHealth!System.Health.ProductKnowledgePage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference11" PageID="SystemHealth!System.Health.CompanyKnowledgePage" Usage="CreationAndUpdate" /></UIPageReferences></UIPageSet><UIPageSet
ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet" TypeDefinitionID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype"><UIPageReferences><UIPageReference ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference1" PageID="SystemHealth!System.Health.MonitorGeneralPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference2" PageID="System!System.SimpleSchedulerPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="SimpleReccuringSchedule"><xsl:element name="Interval"><xsl:value-of select="IntervalSeconds" /></xsl:element></xsl:element></xsl:template></xsl:stylesheet></InputTransform></UIPageReference><UIPageReference
ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference5" PageID="SystemHealth!System.Health.OperationalStatesConfigPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference6" PageID="SystemHealth!System.Health.AlertingPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference7" PageID="SystemHealth!System.Health.DiagnosticAndRecoveryPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference8" PageID="SystemHealth!System.Health.ProductKnowledgePage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype.PageSet.PageReference9" PageID="SystemHealth!System.Health.CompanyKnowledgePage" Usage="CreationAndUpdate" /></UIPageReferences></UIPageSet><UIPageSet
ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet" TypeDefinitionID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype"><UIPageReferences><UIPageReference ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference1" PageID="SystemHealth!System.Health.MonitorGeneralPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference2" PageID="System!System.SimpleSchedulerPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:element name="SimpleReccuringSchedule"><xsl:element name="Interval"><xsl:value-of select="IntervalSeconds" /></xsl:element></xsl:element></xsl:template></xsl:stylesheet></InputTransform></UIPageReference><UIPageReference
ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference3" PageID="SystemPerf!System.Performance.NumSamplesPage" Usage="CreationAndUpdate"><InputTransform><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:output method="xml" indent="yes" omit-xml-declaration="yes" /><xsl:template match="/"><xsl:copy-of select="NumSamples" /></xsl:template></xsl:stylesheet></InputTransform><TabName ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference3.TabName" /></UIPageReference><UIPageReference ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference4" PageID="SystemHealth!System.Health.OperationalStatesConfigPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference5" PageID="SystemHealth!System.Health.AlertingPage" Usage="CreationAndUpdate" /><UIPageReference
ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference6" PageID="SystemHealth!System.Health.DiagnosticAndRecoveryPage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference7" PageID="SystemHealth!System.Health.ProductKnowledgePage" Usage="CreationAndUpdate" /><UIPageReference ID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference8" PageID="SystemHealth!System.Health.CompanyKnowledgePage" Usage="CreationAndUpdate" /></UIPageReferences></UIPageSet></UIPageSets></PresentationTypes><Presentation><ConsoleTasks><ConsoleTask ID="Microsoft.Windows.Server.10.0.DiskPartition.ComputerManagement.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.DiskPartition"
RequireOutput="false"><Assembly>Res.Microsoft.Windows.Server.10.0.DiskPartition.ComputerManagement.Task</Assembly><Handler>ShellHandler</Handler><Parameters><Argument Name="WorkingDirectory" /><Argument Name="Application">%windir%\system32\mmc.exe</Argument><Argument>%windir%\system32\compmgmt.msc</Argument><Argument>/computer:$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Argument></Parameters></ConsoleTask><ConsoleTask ID="Microsoft.Windows.Server.10.0.LogicalDisk.ComputerManagement.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" RequireOutput="false"><Assembly>Res.Microsoft.Windows.Server.10.0.LogicalDisk.ComputerManagement.Task</Assembly><Handler>ShellHandler</Handler><Parameters><Argument Name="WorkingDirectory" /><Argument
Name="Application">%windir%\system32\mmc.exe</Argument><Argument>%windir%\system32\compmgmt.msc</Argument><Argument>/computer:$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Argument></Parameters></ConsoleTask><ConsoleTask ID="Microsoft.Windows.Server.10.0.NetworkAdapter.ComputerManagement.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" RequireOutput="false"><Assembly>Res.Microsoft.Windows.Server.10.0.NetworkAdapter.ComputerManagement.Task</Assembly><Handler>ShellHandler</Handler><Parameters><Argument Name="WorkingDirectory" /><Argument Name="Application">%windir%\system32\mmc.exe</Argument><Argument>%windir%\system32\compmgmt.msc</Argument><Argument>/computer:$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Argument></Parameters></ConsoleTask><ConsoleTask ID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerManagement.Task" Accessibility="Public"
Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" RequireOutput="false"><Assembly>Res.Microsoft.Windows.Server.10.0.OperatingSystem.ComputerManagement.Task</Assembly><Handler>ShellHandler</Handler><Parameters><Argument Name="WorkingDirectory" /><Argument Name="Application">%windir%\system32\mmc.exe</Argument><Argument>%windir%\system32\compmgmt.msc</Argument><Argument>/computer:$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Argument></Parameters></ConsoleTask><ConsoleTask ID="Microsoft.Windows.Server.10.0.PhysicalDisk.ComputerManagement.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" RequireOutput="false"><Assembly>Res.Microsoft.Windows.Server.10.0.PhysicalDisk.ComputerManagement.Task</Assembly><Handler>ShellHandler</Handler><Parameters><Argument Name="WorkingDirectory" /><Argument
Name="Application">%windir%\system32\mmc.exe</Argument><Argument>%windir%\system32\compmgmt.msc</Argument><Argument>/computer:$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Argument></Parameters></ConsoleTask><ConsoleTask ID="Microsoft.Windows.Server.10.0.Processor.ComputerManagement.Task" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" RequireOutput="false"><Assembly>Res.Microsoft.Windows.Server.10.0.Processor.ComputerManagement.Task</Assembly><Handler>ShellHandler</Handler><Parameters><Argument Name="WorkingDirectory" /><Argument Name="Application">%windir%\system32\mmc.exe</Argument><Argument>%windir%\system32\compmgmt.msc</Argument><Argument>/computer:$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Argument></Parameters></ConsoleTask></ConsoleTasks><Views><View ID="Microsoft.Windows.Server.10.0.NetworkAdapterUtilization.Dashboard.View" Accessibility="Public"
Enabled="true" Target="System!System.Entity" TypeID="SC!Microsoft.SystemCenter.DashboardViewType" Visible="true"><Category>Operations</Category><PanelConfiguration Columns="2" Rows="2"><Cell Column="1" Row="1" ViewID="Microsoft.Windows.Server.10.0.NetworkAdapterBytesReceivedsec.View" /><Cell Column="2" Row="1" ViewID="Microsoft.Windows.Server.10.0.NetworkAdapterBytesSentsec.View" /><Cell Column="1" Row="2" ColumnSpan="2" ViewID="Microsoft.Windows.Server.10.0.NetworkAdapterBytesTotalsec.View" /></PanelConfiguration></View><View ID="Microsoft.Windows.Server.10.0.DiskPartition.State.DetailsView" Accessibility="Internal" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.DiskPartition" TypeID="SC!Microsoft.SystemCenter.StateDetailDefinitionViewType"
Visible="true"><Category>Operations</Category><Monitors><Monitor>$MPElement[Name="SystemHealth!System.Health.PerformanceState"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.DiskPartition.LogicalDiskPerformanceRollup"]$</Monitor></Monitors></View><View ID="Microsoft.Windows.Server.10.0.LogicalDisk.State.DetailsView" Accessibility="Internal" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk" TypeID="SC!Microsoft.SystemCenter.StateDetailDefinitionViewType"
Visible="true"><Category>Operations</Category><Monitors><Monitor>$MPElement[Name="SystemHealth!System.Health.AvailabilityState"]$</Monitor><Monitor>$MPElement[Name="SystemHealth!System.Health.PerformanceState"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer"]$</Monitor></Monitors></View><View ID="Microsoft.Windows.Server.10.0.NetworkAdapter.State.DetailsView" Accessibility="Internal" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" TypeID="SC!Microsoft.SystemCenter.StateDetailDefinitionViewType"
Visible="true"><Category>Operations</Category><Monitors><Monitor>$MPElement[Name="SystemHealth!System.Health.AvailabilityState"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth"]$</Monitor></Monitors></View><View ID="Microsoft.Windows.Server.10.0.OperatingSystem.State.DetailsView" Accessibility="Internal" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem" TypeID="SC!Microsoft.SystemCenter.StateDetailDefinitionViewType"
Visible="true"><Category>Operations</Category><Monitors><Monitor>$MPElement[Name="SystemHealth!System.Health.AvailabilityState"]$</Monitor><Monitor>$MPElement[Name="SystemHealth!System.Health.ConfigurationState"]$</Monitor><Monitor>$MPElement[Name="SystemHealth!System.Health.PerformanceState"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.TotalCPUUtilization"]$</Monitor></Monitors></View><View ID="Microsoft.Windows.Server.10.0.PhysicalDisk.State.DetailsView" Accessibility="Internal" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.PhysicalDisk" TypeID="SC!Microsoft.SystemCenter.StateDetailDefinitionViewType"
Visible="true"><Category>Operations</Category><Monitors><Monitor>$MPElement[Name="SystemHealth!System.Health.PerformanceState"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerRead"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerWrite"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerTransfer"]$</Monitor></Monitors></View><View ID="Microsoft.Windows.Server.10.0.Processor.State.DetailsView" Accessibility="Internal" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Processor" TypeID="SC!Microsoft.SystemCenter.StateDetailDefinitionViewType" Visible="true"><Category>Operations</Category><Monitors><Monitor>$MPElement[Name="SystemHealth!System.Health.PerformanceState"]$</Monitor><Monitor>$MPElement[Name="Microsoft.Windows.Server.10.0.Processor.CPUUtilization"]$</Monitor></Monitors></View><View
ID="Microsoft.Windows.Server.10.0.NetworkAdapterBytesReceivedsec.View" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Network Adapter</Object><Instance /><Counter>Bytes Received/sec</Counter></Criteria></View><View ID="Microsoft.Windows.Server.10.0.NetworkAdapterBytesSentsec.View" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Network Adapter</Object><Instance /><Counter>Bytes Sent/sec</Counter></Criteria></View><View ID="Microsoft.Windows.Server.10.0.NetworkAdapterBytesTotalsec.View" Accessibility="Public" Enabled="true" Target="ServervNext!Microsoft.Windows.Server.10.0.NetworkAdapter"
TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true"><Category>Operations</Category><Criteria><Object>Network Adapter</Object><Instance /><Counter>Bytes Total/sec</Counter></Criteria></View></Views><FolderItems><FolderItem ElementID="Microsoft.Windows.Server.10.0.NetworkAdapterUtilization.Dashboard.View" ID="Microsoft.Windows.Server.10.0.NetworkAdapterUtilization.Dashboard.View" Folder="WindowsServer!Microsoft.Windows.Server.ViewFolder.Performance" /></FolderItems><StringResources><StringResource ID="Microsoft.SystemCenter.HealthService.UpdateAgent.StateMonitor.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength.AlertMessage"
/><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite.AlertMessage" /><StringResource
ID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogFull.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.IPAddressConflict.Alert.AlertMessage" /><StringResource
ID="Microsoft.Windows.Server.10.0.OperatingSystem.LDMCantReadDisk.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.NTFSDelayedWriteLost.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.NTFSFileSystemCorrupt.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentCommittedBytesInUse.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.PerfCounterDataRequestTimeOut.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.PerformanceRegistryCorruption.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.PlugandPlayServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.RPCServiceHealth.AlertMessage" /><StringResource
ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServerServiceConfiguration.Rule.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServerServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServiceEnteredUnpredictableState.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServiceMisconfigured.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServiceOrDriverFailedToStart.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ServiceTerminatedUnexpextedly.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.ShareConfigurationInvalid.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.SoftwareUpdateInstallationFailed.Alert.AlertMessage" /><StringResource
ID="Microsoft.Windows.Server.10.0.OperatingSystem.TCPIPNetBiosHelperBrowserServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalCPUUtilization.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalDPCTime.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentInterruptTime.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.WindowsActivation.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.WorkstationServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerRead.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerTransfer.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskSecPerWrite.AlertMessage" /><StringResource
ID="Microsoft.Windows.Server.10.0.Monitoring.BPA.OperatingSystem.Monitor.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.MBFreeSpace.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentageFreeSpace.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpaceMonitorRollup.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.LogicalDisk.NTFSFileSystemCorrupt.Alert.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.MaxConcurrentAPI.Monitor.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.FirewallServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.WindowsRemoteManagementServiceHealth.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.Legacy.LogicalDisk.FreeSpace.Monitor.AlertMessage" /><StringResource
ID="Microsoft.Windows.Server.10.0.StorportMiniportDriver.Timedout.153.Monitor.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.OperatingSystem.TotalTimeOffset.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsRetransmittedPerSec.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsReceivedPerSec.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.TCPv4.SegmentsSentPerSec.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsRetransmittedPerSec.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsReceivedPerSec.AlertMessage" /><StringResource ID="Microsoft.Windows.Server.10.0.TCPv6.SegmentsSentPerSec.AlertMessage" /></StringResources></Presentation><Reporting><LinkedReports><LinkedReport ID="Report.Windows.Server.10.0.DiskPerformanceAnalysis" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance"
Visible="true" Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
          &lt;Data&gt;
            &lt;Chart ObjectJoin="ChartPerObject"&gt;
              &lt;Series&gt;
                &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskQueueLength.Collection"]$&lt;/Rule&gt;
                &lt;Scale&gt;100&lt;/Scale&gt;
                &lt;Type&gt;Line&lt;/Type&gt;
                &lt;Color&gt;63, 63, 255&lt;/Color&gt;
              &lt;/Series&gt;
              &lt;Series&gt;
                &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.DiskReadsPerSec.Collection"]$&lt;/Rule&gt;
                &lt;Scale&gt;1&lt;/Scale&gt;
                &lt;Type&gt;Line&lt;/Type&gt;
                &lt;Color&gt;0,159,0&lt;/Color&gt;
              &lt;/Series&gt;
              &lt;Series&gt;
                &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.DiskWritesPerSec.Collection"]$&lt;/Rule&gt;
                &lt;Scale&gt;1&lt;/Scale&gt;
                &lt;Type&gt;Line&lt;/Type&gt;
                &lt;Color&gt;255,31,31&lt;/Color&gt;
              &lt;/Series&gt;
              &lt;Series&gt;
                &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer.Collection"]$&lt;/Rule&gt;
                &lt;Scale&gt;1000&lt;/Scale&gt;
                &lt;Type&gt;Line&lt;/Type&gt;
                &lt;Color&gt;255,221,0&lt;/Color&gt;
              &lt;/Series&gt;
              &lt;Series&gt;
                &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.DiskBytesPerSec.Collection"]$&lt;/Rule&gt;
                &lt;Scale&gt;1&lt;/Scale&gt;
                &lt;Type&gt;Line&lt;/Type&gt;
                &lt;Color&gt;0,0,0&lt;/Color&gt;
              &lt;/Series&gt;
            &lt;/Chart&gt;
          &lt;/Data&gt;   
                              
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.LogicalDisk</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>0</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.OperatingSystemConfiguration" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.CustomConfiguration" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="4"><Controls><Control columnSpan="1" rowSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType"
/><ReportParameter name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /></ReportParameters></Control><Control columnSpan="2" rowSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.MonitoringObjectXmlPicker"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList"
/></ReportParameters><Properties><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control></Controls></ParameterBlock><Parameters><Parameter Name="Properties"><Value>
                            
        &lt;Data&gt;
        &lt;Columns&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/LogicalProcessors$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/PhysicalMemory$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/BuildNumber$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/ServicePackVersion$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/InstallDate$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/CSDVersion$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/OSVersionDisplayName$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/SerialNumber$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/SystemDrive$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.OperatingSystem"]/WindowsDirectory$&lt;/ID&gt;
	        &lt;/Column&gt;
        &lt;/Columns&gt;
        &lt;/Data&gt;
                        
                        </Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.OperatingSystemPerformance" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true" Target="ServervNext!Microsoft.Windows.Server.10.0.OperatingSystem"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter
name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property name="ValueTemplate"><Value>
                                        
        &lt;Data&gt;
          &lt;Chart ObjectJoin="ChartPerObject"&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentProcessorTime.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;63, 63, 255&lt;/Color&gt;
            &lt;/Series&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.SystemProcessorQueueLength.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;0,159,0&lt;/Color&gt;
            &lt;/Series&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;255,31,31&lt;/Color&gt;
            &lt;/Series&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSec.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;255,221,0&lt;/Color&gt;
            &lt;/Series&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;0,0,0&lt;/Color&gt;
            &lt;/Series&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;63,255,63&lt;/Color&gt;
            &lt;/Series&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;255,127,63&lt;/Color&gt;
            &lt;/Series&gt;
          &lt;/Chart&gt;
        &lt;/Data&gt;                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>0</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.OperatingSystemStorageConfiguration" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.CustomConfiguration" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.LogicalDisk"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="4"><Controls><Control columnSpan="1" rowSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /></ReportParameters></Control><Control columnSpan="2" rowSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.MonitoringObjectXmlPicker"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.LogicalDisk</Value></Property></Properties></Control></Controls></ParameterBlock><Parameters><Parameter Name="Properties"><Value>
                            
        &lt;Data&gt;
        &lt;Columns&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.LogicalDevice"]/Name$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="WindowsServer!Microsoft.Windows.Server.LogicalDisk"]/FileSystem$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="Windows!Microsoft.Windows.LogicalDevice"]/Description$&lt;/ID&gt;
	        &lt;/Column&gt;
	        &lt;Column Visible ="True"&gt;
		        &lt;ID&gt;$MPElement[Name="WindowsServer!Microsoft.Windows.Server.LogicalDisk"]/Size$&lt;/ID&gt;
	        &lt;/Column&gt;
        &lt;/Columns&gt;
        &lt;/Data&gt;
                        
                        </Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistory" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true" Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter
name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
                        &lt;Data&gt;
                            &lt;Chart ObjectJoin="ChartPerObject"&gt;
                                &lt;Series&gt;
                                    &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentProcessorTime.Collection"]$&lt;/Rule&gt;
                                    &lt;Scale&gt;1&lt;/Scale&gt;
                                    &lt;Type&gt;Line&lt;/Type&gt;
                                    &lt;Color&gt;63, 63, 255&lt;/Color&gt;
                                &lt;/Series&gt;
                            &lt;/Chart&gt;
                        &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryContextSwitchesPerSec" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.SystemContextSwitchesPerSec.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;255,31,31&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryMemory.AvailableMB" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
        &lt;Data&gt;
          &lt;Chart ObjectJoin="ChartPerObject"&gt;
            &lt;Series&gt;
              &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes.Collection"]$&lt;/Rule&gt;
              &lt;Scale&gt;1&lt;/Scale&gt;
              &lt;Type&gt;Line&lt;/Type&gt;
              &lt;Color&gt;0,0,0&lt;/Color&gt;
            &lt;/Series&gt;
          &lt;/Chart&gt;
        &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryMemory.PageReadsPerSec" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPageReadsPerSec.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;0,0,0&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryMemory.PagesPerSec" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSec.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;0,0,0&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryMemory.PageWritesPerSec" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPageWritesPerSec.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;0,0,0&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryPagingFile.PercentageUsage" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.PageFilePercentUsage.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Area&lt;/Type&gt;
            &lt;Color&gt;63,63,255&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryPercentInterruptTime" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentInterruptTime.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;255,31,31&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryPercentProcessorTime" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.TotalPercentProcessorTime.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;255,31,31&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryPhysicalDisk.AvgDiskQueueLength" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.PhysicalDisk.AvgDiskQueueLength.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;255,31,31&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.PhysicalDisk</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryPoolNonpagedBytes" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPoolNonPagedBytes.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;0,0,0&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryPoolPagedBytes" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPoolPagedBytes.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;0,0,0&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport><LinkedReport ID="Report.Windows.Server.10.0.PerformanceHistoryProcessorQueueLength" Accessibility="Public" Base="ReportLibrary!Microsoft.SystemCenter.DataWarehouse.Report.Performance" Visible="true"
Target="ServervNext!Microsoft.Windows.Server.10.0.Computer"><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="3"><Controls><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.ComboBox" columnSpan="1"><ReportParameters><ReportParameter name="DataAggregation"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.DataAggregation</Prompt></ReportParameter></ReportParameters></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.LinkedPerformanceChartObjectPicker" columnSpan="2" rowSpan="2"><ReportParameters><ReportParameter name="ObjectList"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.ObjectList</Prompt></ReportParameter><ReportParameter name="ManagementGroupId" binding="GroupList" /></ReportParameters><Properties><Property
name="ContextObjectBinding"><Value>Containment</Value></Property><Property name="ValueTemplate"><Value>
                                        
      &lt;Data&gt;
        &lt;Chart ObjectJoin="ChartPerObject"&gt;
          &lt;Series&gt;
            &lt;Rule&gt;$MPElement[Name="Microsoft.Windows.Server.10.0.OperatingSystem.SystemProcessorQueueLength.Collection"]$&lt;/Rule&gt;
            &lt;Scale&gt;1&lt;/Scale&gt;
            &lt;Type&gt;Line&lt;/Type&gt;
            &lt;Color&gt;255,31,31&lt;/Color&gt;
          &lt;/Series&gt;
        &lt;/Chart&gt;
      &lt;/Data&gt;
                        
                                    </Value></Property><Property name="TypeFilter"><Value>Microsoft.Windows.Server.10.0.OperatingSystem</Value></Property></Properties></Control><Control type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.BusinessRelativeDateTimePicker" columnSpan="1"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter
name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="TimeType" binding="TimeType" /><ReportParameter name="TimeWeekMap" binding="TimeWeekMap" /></ReportParameters></Control></Controls></ParameterBlock><Parameters><Parameter Name="AggregationType"><Value>3</Value></Parameter></Parameters></LinkedReport></LinkedReports></Reporting><LanguagePacks><LanguagePack ID="ENU" IsDefault="true"><DisplayStrings><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentMemoryUsed.ModuleType"><Name>Percent
Memory Used Module Type</Name><Description>Data Source module type for collecting amount of used physical memory.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentMemoryUsed.Collection"><Name>Percent Memory Used</Name><Description>This rule collects data about used physical memory.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentMemoryUsed.ModuleType" SubElementID="Frequency"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentMemoryUsed.ModuleType" SubElementID="Tolerance"><Name>Tolerance</Name><Description>Tolerance</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.PercentMemoryUsed.ModuleType" SubElementID="NumOfSamples"><Name>Number of
Samples</Name><Description>Number of Samples</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime"><Name>Logical Disk Percent Idle Time</Name><Description>Monitor the performance counter LogicalDisk\% Idle Time</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime" SubElementID="OverThreshold"><Name>Disk Idle time percentage Low</Name><Description>Disk Idle time percentage is too Low</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime" SubElementID="UnderThreshold"><Name>Disk Idle time percentage OK</Name><Description>Disk Idle time percentage OK</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdleTime.AlertMessage"><Name>Logical disk idle time percentage is too low</Name><Description>The threshold for the Logical Disk\% Idle Time performance counter
has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength"><Name>Current Disk Queue Length (Logical Disk)</Name><Description>Monitor the performance counter LogicalDisk\Current Disk Queue Length</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength" SubElementID="OverThreshold"><Name>Current Disk Queue Length High</Name><Description>The disk current queue length High.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength" SubElementID="UnderThreshold"><Name>Current Disk Queue Length OK</Name><Description>The disk current queue length OK.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength.AlertMessage"><Name>Logical disk current queue length is too high</Name><Description>The threshold for the Logical
Disk\Current Disk Queue Length performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime"><Name>Physical Disk Percent Idle Time</Name><Description>Monitor the performance counter PhysicalDisk\% Idle Time</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime" SubElementID="OverThreshold"><Name>Disk Idle time percentage Low</Name><Description>Disk Idle time percentage is too Low</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime" SubElementID="UnderThreshold"><Name>Disk Idle time percentage OK</Name><Description>Disk Idle time percentage OK</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.PercentIdleTime.AlertMessage"><Name>Physical disk idle time percentage is too low</Name><Description>The threshold for the Physical Disk\%
Idle Time performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength"><Name>Current Disk Queue Length (Physical Disk)</Name><Description>Monitor the performance counter PhysicalDisk\Current Disk Queue Length</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength" SubElementID="OverThreshold"><Name>Current Disk Queue Length High</Name><Description>The disk current queue length High.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength" SubElementID="UnderThreshold"><Name>Current Disk Queue Length OK</Name><Description>The disk current queue length OK.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PhysicalDisk.CurrentDiskQueueLength.AlertMessage"><Name>Physical disk current queue length is too
high</Name><Description>The threshold for the Physical Disk\Current Disk Queue Length performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries"><Name>Free System Page Table Entries</Name><Description>Monitor the performance counter Memory\Free System Page Table Entries</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries" SubElementID="OverThreshold"><Name>Free System Page Table Entries Low</Name><Description>Memory Free System Page Table Entries Low.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries" SubElementID="UnderThreshold"><Name>Free System Page Table Entries OK</Name><Description>Memory Free System Page Table Entries OK.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryFreeSystemPageTableEntries.AlertMessage"><Name>Free System Page Table Entries is too Low.</Name><Description>The threshold for the Memory\Free System Page Table Entries performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond"><Name>Memory Pages Per Second</Name><Description>Monitor the performance counter Memory\MemoryPagesPerSecond</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond" SubElementID="OverThreshold"><Name>Pages Per Second High</Name><Description>Memory Memory Pages Per Second High.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond" SubElementID="UnderThreshold"><Name>Pages Per Second OK</Name><Description>Memory Pages Per Second
OK.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryPagesPerSecond.AlertMessage"><Name>Memory Pages Per Second is too High.</Name><Description>The threshold for the Memory\Pages\sec performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.BandwidthUsed.ConditionDetection.ModuleType"><Name>Network Adapter Bandwidth Used Expression Module Type</Name><Description>Condition detection module type which filters data according to monitoring object name and values delta.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.BandwidthUsed.ModuleType"><Name>Network Adapter Bandwidth Used Module Type</Name><Description>Data Source module type for network adapter bandwidth used counters.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.BandwidthUsed.ModuleType"
SubElementID="Interval"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads"><Name>Percent Bandwidth Used Read</Name><Description>This monitor checks percentage of used network adapter read bandwidth.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads" SubElementID="OverThreshold"><Name>Warning State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads" SubElementID="UnderThreshold"><Name>Healthy State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads.Collection"><Name>Percent Bandwidth Used Read</Name><Description>Rule collects Bandwidth Used Read counter for network
adapters.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType"><Name>Percent of Used Bandwidth Monitor Type</Name><Description>Monitor type to check percentage of used network adapter bandwidth.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType" SubElementID="Threshold"><Name>Threshold (percentage)</Name><Description>The threshold (in percentage) over which the monitor will change state.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsed.MonitorType" SubElementID="NumOfSamples"><Name>Number of
samples</Name><Description>The number of consecutive samples that need to be over the threshold before the monitor will change state.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedReads.Alert.AlertMessage"><Name>Used read bandwidth is over threshold</Name><Description>Percentage of used network adapter read bandwidth is over threshold.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal.Collection"><Name>Percent Bandwidth Used Total</Name><Description>Rule collects Bandwidth Used Total counter for network adapters.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites.Collection"><Name>Percent Bandwidth Used Write</Name><Description>Rule collects Bandwidth Used Write counter for network adapters.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal"><Name>Percent Bandwidth Used Total</Name><Description>This monitor checks percentage of total used network adapter bandwidth..</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal" SubElementID="UnderThreshold"><Name>Healthy State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal" SubElementID="OverThreshold"><Name>Warning State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedTotal.Alert.AlertMessage"><Name>Used total bandwidth is over threshold</Name><Description>Percentage of used network adapter total bandwidth is over threshold.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites"><Name>Percent Bandwidth Used
Write</Name><Description>This monitor checks percentage of used network adapter write bandwidth.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites" SubElementID="OverThreshold"><Name>Warning State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites" SubElementID="UnderThreshold"><Name>Healthy State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.PercentBandwidthUsedWrites.Alert.AlertMessage"><Name>Used write bandwidth is over threshold</Name><Description>Percentage of used network adapter write bandwidth is over threshold.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.ActiveConnections.Task"><Name>Display Active Connections</Name><Description>Execute the NETSTAT command line tool to display a list of active
connections.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.IPConfig.Task"><Name>IPConfig</Name><Description>Run ipconfig /all on the server</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.LocalUsersQuery.Task"><Name>Display Local Users</Name><Description>Query and display a list of local users on the server</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.NetStatisticsServer.Task"><Name>Display Server Statistics</Name><Description>Display a list of all the network statistics for the Server service of the server.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.NetStatisticsWorkstation.Task"><Name>Display Workstation Statistics</Name><Description>Display a list of all the network statistics for the Workstation service of the server.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.Computer.NetworkShareQuery.Task"><Name>Display Network Shares</Name><Description>Query and display a list of local network shares</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.ProcessList.Task"><Name>List Processes</Name><Description>Query and display a list of currently running processes.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.RoutePrint.Task"><Name>Route Print</Name><Description>Execute the Route tool using it's Print command.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.ServicesQuery.Task"><Name>List Services</Name><Description>List running services on the server</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.SessionQuery.Task"><Name>Display Active Sessions</Name><Description>Display a list of all the sessions on the
server.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Computer.UserAccountSettingsQuery.Task"><Name>Display Account Settings</Name><Description>Query and display the current settings, password requirements and the server role for a server</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.ModuleType"><Name>Windows CPU Utilization Data Source Module</Name><Description>Monitor CPU utilization of individual CPUs on Windows Servers</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.ModuleType" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.ModuleType" SubElementID="NumSamples"><Name>Num Samples</Name></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype"><Name>Windows CPU Utilization Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="CPUPercentageThreshold"><Name>CPU Percentage Utilization Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="CPUQueueLengthThreshold"><Name>CPU Queue Length Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="CPUUtilizationHigh"><Name>CPU Utilization Too High</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="CPUUtilizationNormal"><Name>CPU Utilization OK</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How
frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="NumSamples"><Name>Number of Samples</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout Seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference3" SubElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference3.TabName"><Name>CPU Utilization Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference4" SubElementID="Microsoft.Windows.Server.10.0.CPUUtilization.Monitortype.PageSet.PageReference4.TabName"><Name>CPU Queue Threshold</Name></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.DiskPartition.ComputerManagement.Task"><Name>Start Computer Management Console</Name><Description>This task starts the Computer Management console.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.DiskPartition.LogicalDiskAvailabilityRollup"><Name>Logical Disk Availability Rollup</Name><Description>This monitor rolls up the availability of Logical Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.DiskPartition.LogicalDiskPerformanceRollup"><Name>Logical Disk Performance Rollup</Name><Description>This monitor roles up the performance of Logical Disk</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.LogicalProcessorPerformanceRollup"><Name>Logical Processors Performance Rollup</Name><Description>This monitor roles up the performance of Logical Processor</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.DiskPartition.State.DetailsView"><Name>Windows Server 2016 and above Disk Partition State Detail View</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype"><Name>Windows Logical Disk Free Space Data Source Module</Name><Description>Monitor the Logical Disk Free Space on Windows Servers</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype"><Name>Windows Logical Disk Free Space Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="IntervalSeconds"><Name>Interval Seconds</Name><Description>Interval in seconds</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="NonSystemDriveErrorMBytesThreshold"><Name>Error Mbytes Threshold for Non-System Drives</Name><Description>Error Mbytes Threshold for Non-System
Drives</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="NonSystemDriveErrorPercentThreshold"><Name>Error % Threshold for Non-System Drives</Name><Description>Error % Threshold for Non-System Drives</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="NonSystemDriveWarningMBytesThreshold"><Name>Warning threshold in MBytes for the non-system drives</Name><Description>Warning threshold in MBytes for the non system drives.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="NonSystemDriveWarningPercentThreshold"><Name>Warning % Threshold for Non-System Drives</Name><Description>Warning % Threshold for Non-System Drives</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype"
SubElementID="SystemDriveErrorMBytesThreshold"><Name>Error MBytes Threshold for System Drives</Name><Description>Error MBytes Threshold for System Drives</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="SystemDriveErrorPercentThreshold"><Name>Error %Threshold for System Drives</Name><Description>Error % Threshold for System Drives</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="SystemDriveWarningMBytesTheshold"><Name>Warning MBytes Threshold for System Drives</Name><Description>Warning MBytes Threshold for System Drives</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="SystemDriveWarningPercentThreshold"><Name>Warning % Threshold for System Drives</Name><Description>Warning % Threshold for System Drives</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="Interval"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="NonSystemDriveErrorMBytesThreshold"><Name>Error MBytes Threshold for Non-System Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="NonSystemDriveErrorPercentThreshold"><Name>Error % Threshold for Non-System Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="NonSystemDriveWarningMBytesThreshold"><Name>Warning MBytes Threshold for Non-System Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="NonSystemDriveWarningPercentThreshold"><Name>Warning % Threshold for Non-System
Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="OverErrorThresholds"><Name>Over Error Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="OverWarningUnderErrorThresholds"><Name>Over Warning and Under Error Thresholds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="SystemDriveErrorMBytesThreshold"><Name>Error MBytes Threshold for System Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="SystemDriveErrorPercentThreshold"><Name>Error % Threshold for System Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="SystemDriveWarningMBytesThreshold"><Name>Warning MBytes Threshold for System Drives</Name></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Moduletype" SubElementID="SystemDriveWarningPercentThreshold"><Name>Warning % Threshold for System Drives</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype" SubElementID="UnderWarningThresholds"><Name>Under Warning Threshold</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference3" SubElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference3.TabName"><Name>System Drive %</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference4" SubElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference4.TabName"><Name>System Drive MBytes</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference5"
SubElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference5.TabName"><Name>Non-System Drive %</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference6" SubElementID="Microsoft.Windows.Server.10.0.FreeSpace.Monitortype.PageSet.PageReference6.TabName"><Name>Non-System Drive MBytes</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype"><Name>Windows Processor Performance Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.PerformanceRollup"><Name>Windows Server 2016 and above Processor Performance Rollup Monitor</Name><Description>This monitor aggregates the performance monitors for Processor.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype" SubElementID="Frequency"><Name>Frequency seconds</Name><Description>How frequently (in seconds) the
value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype" SubElementID="Threshold"><Name>Threshold (percentage)</Name><Description>The threshold (in percentage) over which the monitor will change state.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype" SubElementID="NumSamples"><Name>Number of Samples</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout (seconds)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype" SubElementID="UnderThreshold"><Name>Healthy State</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Monitortype" SubElementID="OverThreshold"><Name>Critical State</Name></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.Processor.Performance.ModuleType"><Name>Windows Processor Utilization Data Source Module</Name><Description>Monitor Processor utilization of individual Processors(Socket) on Windows Servers</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Performance.ModuleType" SubElementID="Frequency"><Name>Frequency seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.Processor.Performance.ModuleType" SubElementID="TimeoutSeconds"><Name>Timeout seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PowerShellPropertyBagProbe"><Name>Windows PowerShell Property Bag Probe Action Library Module</Name><Description>This module starts PowerShell script based probe action module.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.PowerShellPropertyBagProbe" SubElementID="TimeoutSeconds"><Name>Timeout seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.BPA.PowerShellPropertyBagProbe"><Name>Windows PowerShell BPA Property Bag Probe Action Library Module</Name><Description>Collect BPA Scan results.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.BPA.PowerShellPropertyBagProbe" SubElementID="TimeoutSeconds"><Name>Timeout seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PowerShellPerformanceProbe"><Name>Windows PowerShell Performance Probe Action Library Module</Name><Description>This module collects performance counter based on PowerShell script.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.PowerShellPerformanceProbe" SubElementID="TimeoutSeconds"><Name>Timeout seconds</Name></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth"><Name>File system error or corruption</Name><Description>Monitors whether the file system has reported an error with the file system or corruption on the logical disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth" SubElementID="Availabile"><Name>File system available</Name><Description>The file system is available</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth" SubElementID="NotAvailabile"><Name>File system is in error or corrupt</Name><Description>The file system has reported an error or is corrupt</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvailabilityHealth.AlertMessage"><Name>NTFS reported the logical disk is in error or corrupt.</Name><Description>NTFS on the logical disk {0} has reported that some portion of the file
system is in error or is corrupted.  This dirty bit has been set for the logical disk.  In most cases running the CHKDSK utility will address the problem.  Refer to the product knowledge for more complete guidance.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskQueueLength.Collection"><Name>Collection Rule for the Average Disk Queue Length Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Avg Disk Queue Length</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead"><Name>Average Logical Disk Seconds Per Read</Name><Description>Monitor the performance counter LogicalDisk\Avg Disk Sec Per Read</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead" SubElementID="OverThreshold"><Name>Average Disk Seconds Per Read High</Name><Description>The disk read latency is too
high.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead" SubElementID="UnderThreshold"><Name>Average Disk Seconds Per Read  OK</Name><Description>The disk read latency is OK.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead.AlertMessage"><Name>Disk read latency  is too high</Name><Description>The threshold for the Logical Disk\Avg. Disk sec/Read performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerRead.Collection"><Name>Collection Rule for Average Disk Seconds Per Read Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Avg Disk Sec Per Read</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer"><Name>Average Logical Disk Seconds Per
Transfer</Name><Description>Monitor the performance counter LogicalDisk\Avg Disk Sec Per Transfer</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer" SubElementID="OverThreshold"><Name>Average Disk Seconds Per Transfer High</Name><Description>The disk transfer latency is too high.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer" SubElementID="UnderThreshold"><Name>Average Disk Seconds Per Transfer OK</Name><Description>The disk transfer latency is OK.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer.AlertMessage"><Name>Logical disk transfer (reads and writes) latency  is too high</Name><Description>The threshold for the Logical Disk\Avg. Disk sec/Transfer performance counter has been exceeded.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerTransfer.Collection"><Name>Collection Rule for Average Disk Seconds Per Transfer Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Avg Disk Sec Per Transfer</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite"><Name>Average Disk Seconds Per Write (Logical Disk)</Name><Description>Monitor the performance counter LogicalDisk\Avg Disk Sec Per Write</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite" SubElementID="OverThreshold"><Name>Average Disk Seconds Per Write High</Name><Description>The disk write latency is too high.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite" SubElementID="UnderThreshold"><Name>Average Disk Seconds Per Write OK</Name><Description>The disk write latency is
OK.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite.AlertMessage"><Name>Disk write latency  is too high</Name><Description>The threshold for the Logical Disk\Avg. Disk sec/Write performance counter has been exceeded.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AvgDiskSecPerWrite.Collection"><Name>Collection Rule for Average Disk Seconds Per Write Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Avg Disk Sec Per Write</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkdsk.Task"><Name>Run Chkdsk</Name><Description>Execute a chkdsk against the logical disk and display the results</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Chkntfs.Task"><Name>Run Chkntfs</Name><Description>Execute a chkntfs command against the logical disk
and display the results.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.ComputerManagement.Task"><Name>Start Computer Management Console</Name><Description>This task starts the Computer Management console.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.CurrentDiskQueueLength.Collection"><Name>Collection rule for Current Disk Queue Length Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Current Disk Queue Length</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DiskBytesPerSec.Collection"><Name>Collection Rule for Disk Bytes Per Second Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Disk Bytes Per Second</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DiskReadsPerSec.Collection"><Name>Collection Rule for
Disk Reads Per Second Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Disk Reads Per Second</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DiskWritesPerSec.Collection"><Name>Collection Rule for Disk Writes Per Second Windows Server 2016 and above</Name><Description>Collects the performance counter LogicalDisk\Disk Writes Per Second</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeMB.Collection"><Name>Logical Disk Free Megabytes Windows Server 2016 and above</Name><Description>The space in megabytes on the logical disk that is unallocated</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace"><Name>[Deprecated] Logical Disk Free Space</Name><Description>Monitors the percentage free space and number of free MBytes remaining on a logical disk. Only when both the low percentage free space
and low number of free MBytes thresholds are reached, the disk is flagged as having low disk free space.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace" SubElementID="OverErrorThresholds"><Name>Free Space Critically Low</Name><Description>Disk free space is very low</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace" SubElementID="OverWarningUnderErrorThresholds"><Name>Free Space Low</Name><Description>Disk free space is low</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace" SubElementID="UnderWarningThresholds"><Name>Free Space Acceptable</Name><Description>Disk free space is OK</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace.AlertMessage"><Name>Logical Disk Free Space is running low</Name><Description>The disk {0} on computer {1} is running out of disk
space.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis"><Name>Logical Disk Fragmentation Level</Name><Description>This monitor runs on a periodic basis (Every Saturday  at 3 a.m. by default) to check the fragmentation levels of all logical drives.  If fragmentation levels are found to be above threshold then by default the state of the monitor will change to "Warning" and an alert will be generated.  There is a recovery named "Logical Disk Defragmentation"  targeted to this monitor, which is disabled by default.  If the recovery is enabled then the state change will automatically kick off a task to defragment the logical drive.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis" SubElementID="UnderThreshold"><Name>Fragmentation Level High</Name><Description>Disk fragmentation level is high</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis" SubElementID="OverThreshold"><Name>Fragmentation Level Low</Name><Description>Disk fragmentation level is low</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Recovery"><Name>Logical Disk Defragmentation</Name><Description>Performs defragmentation of the logical disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Task"><Name>Logical Disk Defragmentation</Name><Description>Performs defragmentation of the logical disk.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.AlertMessage"><Name>Logical Disk Fragmentation Level is high</Name><Description>The disk {0} on computer {1} has high fragmentation level. File Percent Fragmentation value is {2}%. Defragmentation recommended: {3}.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.FreeSpace.Collection"><Name>% Logical Disk Free Space Windows Server 2016 and above</Name><Description>The percentage of total usable space on the logical disk that is unallocated</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.PercentIdle.Collection"><Name>% Logical Disk Idle Time Windows Server 2016 and above</Name><Description>The percentage of time during the sample interval that the disk was idle.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DiskReadBytesPerSec.Collection"><Name>Disk Read Bytes Per Second Windows Server 2016 and above (Logical Disk)</Name><Description>The rate at which bytes are transferred from the disk during read operations.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DiskWriteBytesPerSec.Collection"><Name>Logical Disk Write Bytes Per Second Windows Server
2016 and above</Name><Description>The rate at which bytes are transferred from the disk during write operations.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AverageDiskReadQueueLength.Collection"><Name>Average Logical Disk Read Queue Length Windows Server 2016 and above</Name><Description>The average number of read requests that were queued for the selected disk during the sample interval.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.AverageDiskWriteQueueLength.Collection"><Name>Average Disk Write Queue Length Windows Server 2016 and above (Logical Disk)</Name><Description>The average number of write requests that were queued for the selected disk during the sample interval.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.SplitIOPerSec.Collection"><Name>Logical Disk Split I/O Per Second Windows Server 2016 and
above</Name><Description>The rate at which I/Os to the disk were split into multiple I/Os.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.ModuleType"><Name>Logical Disk Data Source Module</Name><Description>Logical Disk Data Source Module</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.ModuleType" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.ModuleType" SubElementID="TimeoutSeconds"><Name>Timeout Seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype"><Name>Logical Disk Availability Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype" SubElementID="Bad"><Name>Logical Disk Not
Available</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype" SubElementID="Good"><Name>Logical Disk Available</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout Seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype"><Name>Logical Disk Fragmentation Level Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" SubElementID="SchedulerStart"><Name>Start time</Name><Description>The time of the day (HH:MM) that the fragmentation check should be
run</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" SubElementID="SchedulerDaysOfWeekMask"><Name>Days Of Week mask</Name><Description>The day(s) that the fragmentation check should be run. The values for the days are Sunday (1), Monday (2), Tuesday (4), Wednesday (8), Thursday (16), Friday (32) and Saturday (64).  To specify multiple days, add the values for the days together.  For example, for Monday, Wednesday, and Friday, specify 42 (2+8+32).</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" SubElementID="FilePercentFragmentationThreshold"><Name>File Percent Fragmentation Threshold</Name><Description>If the "Use OS Recommendation" is set to "False" then this value will be used as the threshold for fragmentation levels.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" SubElementID="UseOSRecommendation"><Name>Use OS Recommendation</Name><Description>This parameter determines whether the fragmentation level check will use the default threshold determined by the operating system or not.  If this parameter is set to "False" then the value from "File Percent Fragmentation Threshold" will be used.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" SubElementID="Warning"><Name>Warning</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.DefragAnalysis.Monitortype" SubElementID="Success"><Name>Success</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.State.DetailsView"><Name>Windows Server 2016 and above Logical Disk State Detail View</Name></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.LogicalDisk.VolumeInfo.Task"><Name>Volume Information</Name><Description>Run fsutil to obtain information about this volume</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.ModuleType"><Name>Windows Memory Available MBytes Data Source Module</Name><Description>Windows Memory Available MBytes Data Source Module</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.ModuleType" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.ModuleType" SubElementID="NumSamples"><Name>Num Samples</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype"><Name>Windows Memory Available MBytes Utilization Monitor
Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" SubElementID="IntervalSeconds"><Name>Interval seconds</Name><Description>How frequently (in seconds) the value should be sampled.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" SubElementID="MemoryAvailableMBytesLow"><Name>Low Available Memory </Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" SubElementID="MemoryAvailableMBytesNormal"><Name>Normal Available Memory</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" SubElementID="MemoryThreshold"><Name>Available Memory Threshold (MBytes)</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" SubElementID="NumSamples"><Name>Number of
Samples</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype" SubElementID="TimeoutSeconds"><Name>Timeout Seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference3" SubElementID="Microsoft.Windows.Server.10.0.MemoryAvailableMBytes.Monitortype.PageSet.PageReference3.TabName"><Name>Number of Samples</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.2016.Monitoring"><Name>Windows Server 2016 and above Operating Systems (Monitoring)</Name><Description>Microsoft Windows Server 2016 and above Operating System Management Pack: this management pack monitors Windows Server 2016 and above operating systems.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.BytesReceivedPerSec.Collection"><Name>Network Adapter Bytes Received per Second Windows Server 2016 and
above</Name><Description>Collects the performance counter Network Interface\Bytes Received/sec</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.BytesSentPerSec.Collection"><Name>Network Adapter Bytes Sent per Second Windows Server 2016 and above</Name><Description>Collects the performance counter Network Interface\Bytes Sent/sec</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.BytesTotalPerSec.Collection"><Name>Network Adapter Bytes Total per Second Windows Server 2016 and above</Name><Description>Collects the performance counter Network Interface/Bytes Total/sec</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.ComputerManagement.Task"><Name>Start Computer Management Console</Name><Description>This task starts the Computer Management console.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype"><Name>Network Adapter Connection Health Monitor Type</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype" SubElementID="MonitorDisconnection"><Name>Network Adapter Connection Health Monitor Type</Name><Description>This monitor type is used as the basis for the monitor which detects the connection health of network adapters.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype" SubElementID="MonitorHardwareMalfunction"><Name>Monitor Network Adapter Hardware Malfunction</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype" SubElementID="MonitorMediaDisconnection"><Name>Monitor Network Adapter Media Disconnection</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype"
SubElementID="TimeoutSeconds"><Name>Timeout Seconds</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype" SubElementID="Good"><Name>Good</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.Monitortype" SubElementID="Bad"><Name>Bad</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth"><Name>Network Adapter Connection Health</Name><Description>Monitors the network adapter connection's health.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth" SubElementID="Connected"><Name>Network Adapter Connected</Name><Description>Network adapter is connected to the network</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth" SubElementID="Disconnected"><Name>Network Adapter
Disconnected</Name><Description>Network adapter is disconnected from the network</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.NetworkAdapterConnectionHealth.AlertMessage"><Name>Network Adapter Disconnected</Name><Description>The network adapter named {0} is disconnected from the network</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.NetworkAdapter.State.DetailsView"><Name>Windows Server 2016 and above Network Adapter State Detail View</Name></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.CheckingFileSystemOccuredOnStartup.Collection"><Name>Collection Rule for Checking the File System Occurred on Startup</Name><Description>This rule collects the events indicates that the system ran a chkdsk on startup</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.CleanShutdown.Collection"><Name>Collection Rule for
Windows Clean Restart Events</Name><Description>This rule collects the events indicating a clean Windows shutdown.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth"><Name>Computer Browser Service Health</Name><Description>Monitors the health of the Windows service for the Computer Browser. Please note that this monitor is not running on Nano Server (the state of the monitor will be always "Healthy").</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth" SubElementID="NotRunning"><Name>Service Not Running</Name><Description>Computer Browser Service Not Running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth" SubElementID="Running"><Name>Service Running</Name><Description>Computer Browser Service Running</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerbrowserServiceHealth.AlertMessage"><Name>Computer Browser Service Stopped</Name><Description>The Computer Browser service on server {0} has stopped running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.ComputerManagement.Task"><Name>Start Computer Management Console</Name><Description>This task starts the Computer Management console.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.CoreServicesRollup"><Name>Core Windows Services Rollup</Name><Description>The rollup monitor for all health related to critical Windows services.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth"><Name>DHCP Client Service Health</Name><Description>Monitors the health of the Windows service for the DHCP Client</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth" SubElementID="NotRunning"><Name>Service Not Running</Name><Description>DHCP Client Service Not Running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth" SubElementID="Running"><Name>Service Running</Name><Description>DHCP Client Service Running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DHCPClientServiceHealth.AlertMessage"><Name>DHCP Service Stopped</Name><Description>The DHCP service on server {0} has stopped running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DirtyShutdown.Collection"><Name>Collection Rule for Windows Dirty Shutdown Events</Name><Description>This rule collects events indicating a dirty Windows shutdown.</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth"><Name>DNS Client Service Health</Name><Description>Monitors the health of the Windows service for the DNS Client</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth" SubElementID="NotRunning"><Name>Service Not Running</Name><Description>DNS Client Service Not Running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth" SubElementID="Running"><Name>Service Running</Name><Description>DNS Client Service Running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.DNSClientServiceHealth.AlertMessage"><Name>DNS Client Service Stopped</Name><Description>The DNS client service on server {0} has stopped running</Description></DisplayString><DisplayString
ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogFull.Alert"><Name>Event Log File is Full</Name><Description>The event log file is full.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogFull.Alert.AlertMessage"><Name>Event log is full</Name><Description>{0}</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth"><Name>Windows Event Log Service Health</Name><Description>Monitors the health of the Windows service for the Windows Event Log</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth" SubElementID="NotRunning"><Name>Service Not Running</Name><Description>The Event Log service is not running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth" SubElementID="Running"><Name>Service
Running</Name><Description>The Event Log service is running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.EventLogServiceHealth.AlertMessage"><Name>Windows Event Log Service Stopped</Name><Description>The Windows Event Log service on server {0} has stopped running</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.IPAddressConflict.Alert"><Name>Duplicate IP Address has been Detected</Name><Description>A duplicate IP address has been detected on the network</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.IPAddressConflict.Alert.AlertMessage"><Name>IP address conflict</Name><Description>{0}</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.LDMCantReadDisk.Alert"><Name>Disk can not be read</Name><Description>Logical Disk Manager reports that the disk can not be
read</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.LDMCantReadDisk.Alert.AlertMessage"><Name>LDM - Can't Read Disk</Name><Description>{0}</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes"><Name>Available Megabytes of Memory</Name><Description>Monitors the available memory level.</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes" SubElementID="OverThreshold"><Name>Available Memory OK</Name><Description>Available Memory OK</Description></DisplayString><DisplayString ElementID="Microsoft.Windows.Server.10.0.OperatingSystem.MemoryAvailableMBytes" SubElementID="UnderThreshold"><Name>Available Memory Critical</Name><Description>Available Memory Critical</Description></DisplayString><DisplayString
