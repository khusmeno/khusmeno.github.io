<ManagementPack xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="1.0"><Manifest><Identity><ID>Microsoft.SystemCenter.ClientMonitoring.Views.Internal</ID><Version>10.19.10050.0</Version></Identity><Name>Microsoft System Center Client Monitoring Views Internal MP</Name><References><Reference Alias="AEMLib"><ID>Microsoft.SystemCenter.ClientMonitoring.Library</ID><Version>10.19.10050.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="DataWarehouse"><ID>Microsoft.SystemCenter.DataWarehouse.Library</ID><Version>7.0.8443.6</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="Reporting"><ID>Microsoft.SystemCenter.DataWarehouse.Report.Library</ID><Version>10.19.10050.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference
Alias="SC"><ID>Microsoft.SystemCenter.Library</ID><Version>7.0.8443.6</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="Health"><ID>System.Health.Library</ID><Version>7.0.8443.6</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference><Reference Alias="System"><ID>System.Library</ID><Version>7.5.8500.0</Version><PublicKeyToken>31bf3856ad364e35</PublicKeyToken></Reference></References></Manifest><TypeDefinitions><DataTypes><DataType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareValidationResult" Accessibility="Internal" Base="System!System.BaseData"><Implementation><Assembly>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareValidationResult</Assembly><Type>Microsoft.EnterpriseManagement.Mom.Modules.ClientMonitoring.FileShareValidationResult</Type></Implementation></DataType></DataTypes><SchemaTypes><SchemaType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareConfiguration"
Accessibility="Internal"><xsd:complexType xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="FileShareConfigType"><xsd:sequence><xsd:element name="LocalLocation" type="xsd:string" /><xsd:element name="Location" type="xsd:string" /><xsd:element name="Validate" type="xsd:boolean" /><xsd:element name="PolicyTextUrl" type="xsd:string" minOccurs="0" maxOccurs="1" /><xsd:element name="StatusFile" type="xsd:string" minOccurs="0" maxOccurs="1" /><xsd:element name="TrimCabsNotTouchedInDays" type="xsd:unsignedInt" minOccurs="0" maxOccurs="1" /><xsd:element name="TrimStatusFilesNotTouchedInDays" type="xsd:unsignedInt" minOccurs="0" maxOccurs="1" /></xsd:sequence></xsd:complexType></SchemaType></SchemaTypes><ModuleTypes><ProbeActionModuleType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileSharePA" Accessibility="Internal" RunAs="AEMLib!Microsoft.SystemCenter.CM.ActionAccount" Batching="false"
PassThrough="false"><Configuration><IncludeSchemaTypes><SchemaType>Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareConfiguration</SchemaType></IncludeSchemaTypes><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="FileShareConfiguration" type="FileShareConfigType" /></Configuration><ModuleImplementation Isolation="Any"><Managed><Assembly>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.FileSharePA</Assembly><Type>Microsoft.EnterpriseManagement.Mom.Modules.ClientMonitoring.FileSharePA</Type></Managed></ModuleImplementation><OutputType>Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareValidationResult</OutputType><InputType>System!System.BaseData</InputType></ProbeActionModuleType><ProbeActionModuleType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareTriggerPA" Accessibility="Internal" RunAs="AEMLib!Microsoft.SystemCenter.CM.ActionAccount" Batching="false"
PassThrough="false"><Configuration><IncludeSchemaTypes><SchemaType>Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareConfiguration</SchemaType></IncludeSchemaTypes><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="FileShareConfiguration" type="FileShareConfigType" /></Configuration><ModuleImplementation Isolation="Any"><Managed><Assembly>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareTriggerPA</Assembly><Type>Microsoft.EnterpriseManagement.Mom.Modules.ClientMonitoring.FileSharePA</Type></Managed></ModuleImplementation><OutputType>Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareValidationResult</OutputType><TriggerOnly>true</TriggerOnly></ProbeActionModuleType><ProbeActionModuleType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.OleDbProbe" Accessibility="Internal" RunAs="SC!Microsoft.SystemCenter.DatabaseWriteActionAccount" Batching="false" PassThrough="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Query"
type="xsd:string" /></Configuration><ModuleImplementation Isolation="Any"><Composite><MemberModules><ProbeAction ID="OleDbProbe" TypeID="System!System.OleDbProbe"><ConnectionString>Provider=SQLOLEDB;Integrated Security=SSPI</ConnectionString><Query>$Config/Query$</Query><GetValue>true</GetValue><OneRowPerItem>true</OneRowPerItem><DatabaseNameRegLocation>SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Setup\DatabaseName</DatabaseNameRegLocation><DatabaseServerNameRegLocation>SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Setup\DatabaseServerName</DatabaseServerNameRegLocation></ProbeAction></MemberModules><Composition><Node ID="OleDbProbe" /></Composition></Composite></ModuleImplementation><OutputType>System!System.OleDbData</OutputType><InputType>System!System.BaseData</InputType></ProbeActionModuleType><ConditionDetectionModuleType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataGenericMapper" Accessibility="Internal"
RunAs="AEMLib!Microsoft.SystemCenter.CM.ActionAccount" Batching="false" Stateful="false" PassThrough="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ObjectName" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CounterName" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceName" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Value" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ManagedEntityId" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="RuleId" type="xsd:string" /></Configuration><ModuleImplementation
Isolation="Any"><Native><ClassID>72175454-D77A-4548-90A2-7DE023AF6F2C</ClassID></Native></ModuleImplementation><OutputType>SC!Microsoft.SystemCenter.Performance.LinkedData</OutputType><InputTypes><InputType>System!System.BaseData</InputType></InputTypes></ConditionDetectionModuleType><WriteActionModuleType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData" Accessibility="Internal" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Query" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ObjectName" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CounterName" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Value" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ManagedEntityId" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="RuleId" type="xsd:string"
/></Configuration><ModuleImplementation Isolation="Any"><Composite><MemberModules><ProbeAction ID="OleDbProbe" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.OleDbProbe"><Query>$Config/Query$</Query></ProbeAction><ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">$Config/ManagedEntityId$</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="String">{00000000-0000-0000-0000-000000000000}</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection><ConditionDetection ID="PerfMapper" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataGenericMapper"><ObjectName>$Config/ObjectName$</ObjectName><CounterName>$Config/CounterName$</CounterName><InstanceName /><Value>$Data/$Config/Value$$</Value><ManagedEntityId>$Data/$Config/ManagedEntityId$$</ManagedEntityId><RuleId>$Config/RuleId$</RuleId></ConditionDetection><WriteAction ID="PerfWA"
TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.PerformanceDataWriter"><UpdateLastSampledValue>true</UpdateLastSampledValue></WriteAction></MemberModules><Composition><Node ID="PerfWA"><Node ID="PerfMapper"><Node ID="Filter"><Node ID="OleDbProbe" /></Node></Node></Node></Composition></Composite></ModuleImplementation><InputType>System!System.BaseData</InputType></WriteActionModuleType><WriteActionModuleType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.PerformanceDataWriter" Accessibility="Internal" RunAs="AEMLib!Microsoft.SystemCenter.CM.ActionAccount" Batching="false"><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="UpdateLastSampledValue" type="xsd:boolean" minOccurs="0" maxOccurs="1" /></Configuration><ModuleImplementation
Isolation="Any"><Managed><Assembly>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.PerformanceDataWriter</Assembly><Type>Microsoft.EnterpriseManagement.Mom.DatabaseWriteModules.PerformanceWriteModule</Type></Managed></ModuleImplementation><InputType>SC!Microsoft.SystemCenter.Performance.LinkedData</InputType></WriteActionModuleType></ModuleTypes><MonitorTypes><UnitMonitorType ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.TimedFileShareMonitor" Accessibility="Internal" RunAs="AEMLib!Microsoft.SystemCenter.CM.ActionAccount"><MonitorTypeStates><MonitorTypeState ID="Healthy" NoDetection="false" /><MonitorTypeState ID="Unhealthy" NoDetection="false" /></MonitorTypeStates><Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="MinutesFrequency" type="xsd:nonNegativeInteger" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LocalLocation" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Location" type="xsd:string"
/><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="PolicyTextUrl" type="xsd:string" /></Configuration><OverrideableParameters><OverrideableParameter ID="MinutesFrequency" Selector="$Config/MinutesFrequency$" ParameterType="int" /></OverrideableParameters><MonitorImplementation><MemberModules><DataSource ID="Scheduler" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">$Config/MinutesFrequency$</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource><ProbeAction ID="FSPA" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileSharePA"><FileShareConfiguration><LocalLocation>$Config/LocalLocation$</LocalLocation><Location>$Config/Location$</Location><Validate>true</Validate><PolicyTextUrl>$Config/PolicyTextUrl$</PolicyTextUrl></FileShareConfiguration></ProbeAction><ProbeAction ID="FSTriggerPA"
TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareTriggerPA"><FileShareConfiguration><LocalLocation>$Config/LocalLocation$</LocalLocation><Location>$Config/Location$</Location><Validate>true</Validate><PolicyTextUrl>$Config/PolicyTextUrl$</PolicyTextUrl></FileShareConfiguration></ProbeAction><ConditionDetection ID="HealthyFilter" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Boolean">FileShareValidationInfo/Success</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="Boolean">true</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection><ConditionDetection ID="UnhealthyFilter" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Boolean">FileShareValidationInfo/Success</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value
Type="Boolean">false</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection></MemberModules><RegularDetections><RegularDetection MonitorTypeStateID="Healthy"><Node ID="HealthyFilter"><Node ID="FSPA"><Node ID="Scheduler" /></Node></Node></RegularDetection><RegularDetection MonitorTypeStateID="Unhealthy"><Node ID="UnhealthyFilter"><Node ID="FSPA"><Node ID="Scheduler" /></Node></Node></RegularDetection></RegularDetections><OnDemandDetections><OnDemandDetection MonitorTypeStateID="Healthy"><Node ID="HealthyFilter"><Node ID="FSTriggerPA" /></Node></OnDemandDetection><OnDemandDetection MonitorTypeStateID="Unhealthy"><Node ID="UnhealthyFilter"><Node ID="FSTriggerPA" /></Node></OnDemandDetection></OnDemandDetections></MonitorImplementation></UnitMonitorType></MonitorTypes></TypeDefinitions><Monitoring><Rules><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppMachineCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application"
ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppTotalHitCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval
Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppUserCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName
/><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketMachineCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketTotalHitCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket"
ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketUserCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval
Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketMachineCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.SystemBucket" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName
/><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketTotalHitCountPerfCollector" Enabled="false" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.SystemBucket" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule><Rule ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketUserCountPerfCollector" Enabled="false"
Target="AEMLib!Microsoft.SystemCenter.CM.AEM.SystemBucket" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100"><Category>PerformanceCollection</Category><DataSources><DataSource ID="SchedulerDS" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Minutes">60</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource></DataSources><WriteActions><WriteAction ID="PerfDataWriter" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.MapQueriedPerfData"><Query /><ObjectName /><CounterName /><Value /><ManagedEntityId /><RuleId /></WriteAction></WriteActions></Rule></Rules><Monitors><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedAppThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedAppThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[1]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[3]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedWatsonBucketThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedWatsonBucketThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[1]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[3]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountAppThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountAppThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[1]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[3]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountWatsonBucketThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountWatsonBucketThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[1]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[3]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.SystemBucket" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[4]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[1]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedAppThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedAppThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[1]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[3]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><AggregateMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedWatsonBucketThreshold" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedWatsonBucketThreshold.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/Columns/Column[1]$</AlertParameter1><AlertParameter2>$Data/Context/Columns/Column[3]$</AlertParameter2></AlertParameters></AlertSettings><Algorithm>WorstOf</Algorithm></AggregateMonitor><UnitMonitor ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareHealth" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.SystemCenter.CM.AEM.Views.Internal.TimedFileShareMonitor" ConfirmDelivery="false"><Category>Alert</Category><AlertSettings
AlertMessage="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareHealth.AlertMessage"><AlertOnState>Error</AlertOnState><AutoResolve>true</AutoResolve><AlertPriority>High</AlertPriority><AlertSeverity>Error</AlertSeverity><AlertParameters><AlertParameter1>$Data/Context/FileShareValidationInfo/Message$</AlertParameter1></AlertParameters></AlertSettings><OperationalStates><OperationalState ID="Regular" MonitorTypeStateID="Healthy" HealthState="Success" /><OperationalState ID="Iregular" MonitorTypeStateID="Unhealthy" HealthState="Error"
/></OperationalStates><Configuration><MinutesFrequency>60</MinutesFrequency><LocalLocation>$Target/Property[Type="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"]/LocalFileShareAddr$</LocalLocation><Location>$Target/Property[Type="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"]/SharePath$</Location><PolicyTextUrl>$Target/Property[Type="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"]/PolicyResponseUrl$</PolicyTextUrl></Configuration></UnitMonitor><DependencyMonitor ID="Microsoft.SystemCenter.AEM.Group.DependOnCrashListener.AvailabilityRollup" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.AgentlessExceptionMonitoring.Group" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="AEMLib!Microsoft.SystemCenter.AgentlessExceptionMonitoringGroup.ContainsAEMCrashListener"
MemberMonitor="Health!System.Health.AvailabilityState"><Category>AvailabilityHealth</Category><Algorithm>WorstOf</Algorithm><MemberUnAvailable>Error</MemberUnAvailable></DependencyMonitor></Monitors></Monitoring><Presentation><Views><View ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationEvent.View" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" TypeID="SC!Microsoft.SystemCenter.EventViewType" Visible="true"><Category>Operations</Category><Criteria /><Presentation><ColumnInfo Index="0" SortIndex="-1" Width="70" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending"><Name>Level</Name><Id>LevelId</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="0" Width="130" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending"><Name>Date and Time</Name><Id>TimeGenerated</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false"
IsSortable="true" Visible="true" SortOrder="Ascending"><Name>User</Name><Id>User</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Log Name</Name><Id>Channel</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Source</Name><Id>PublisherName</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="80" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Event Number</Name><Id>Number</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Name</Name><Id>MonitoringObjectName</Id></ColumnInfo></Presentation><Target /></View><View ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationState.View" Accessibility="Public"
Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.Application" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true"><Category>Operations</Category><Criteria /><Presentation><ColumnInfo Index="0" SortIndex="-1" Width="20" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>State</Name><Id>Microsoft.SystemCenter.CM.AEM.Application</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Application Name</Name><Id>ApplicationName</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Application Version</Name><Id>ApplicationVersion</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Company
Name</Name><Id>CompanyName</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Friendly Application Name</Name><Id>FriendlyAppName</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Name</Name><Id>Name</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Path</Name><Id>Path</Id></ColumnInfo><ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending"><Name>Error Group</Name><Id>Microsoft.SystemCenter.CM.AEM.WatsonBucket</Id></ColumnInfo></Presentation><Target /></View><View ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.CrashListener.CrashListenerState.View" Accessibility="Public" Enabled="true"
Target="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true"><Category>Operations</Category><Criteria /><Presentation><ColumnInfo Index="0" SortIndex="-1" Width="20" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>State</Name><Id>Microsoft.SystemCenter.CM.AEM.CrashListener</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="130" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Machine Name</Name><Id>Path</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>AEM Enabled</Name><Id>Enabled</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="130" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>FileShare Path</Name><Id>SharePath</Id></ColumnInfo><ColumnInfo Index="4"
SortIndex="-1" Width="60" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Protocol</Name><Id>Protocol</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="80" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Port Number</Name><Id>Port</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Transmission of Errors to Microsoft Enabled</Name><Id>TransmissionEnabled</Id></ColumnInfo><ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Detailed Transmission of Errors to Microsoft Enabled</Name><Id>DetailedTransmission</Id></ColumnInfo><ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Organization
Name</Name><Id>OrganizationName</Id></ColumnInfo><ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Name</Name><Id>Name</Id></ColumnInfo></Presentation><Target /></View><View ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemErrorGroupState.View" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.SystemBucket" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true"><Category>Operations</Category><Criteria /><Presentation><ColumnInfo Index="0" SortIndex="-1" Width="20" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>State</Name><Id>Microsoft.SystemCenter.CM.AEM.SystemBucket</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Machine Name</Name><Id>MachineName</Id></ColumnInfo><ColumnInfo Index="2"
SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>User Name</Name><Id>UserName</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="130" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>HitTime</Name><Id>HitTime</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="200" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Microsoft Response Url</Name><Id>MSResponseUrl</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Name</Name><Id>Name</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Path</Name><Id>Path</Id></ColumnInfo></Presentation><Target /></View><View
ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.WatsonErrorGroupState.View" Accessibility="Public" Enabled="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.WatsonBucket" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true"><Category>Operations</Category><Criteria /><Presentation><ColumnInfo Index="0" SortIndex="-1" Width="20" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>State</Name><Id>Microsoft.SystemCenter.CM.AEM.WatsonBucket</Id></ColumnInfo><ColumnInfo Index="1" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Application Name</Name><Id>AppName</Id></ColumnInfo><ColumnInfo Index="2" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Application Version</Name><Id>AppVer</Id></ColumnInfo><ColumnInfo Index="3" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true"
Visible="true" SortOrder="Ascending"><Name>Bucket Type</Name><Id>BucketType</Id></ColumnInfo><ColumnInfo Index="4" SortIndex="-1" Width="120" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Parameter1</Name><Id>Parameter1</Id></ColumnInfo><ColumnInfo Index="5" SortIndex="-1" Width="200" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending"><Name>Microsoft Response Url</Name><Id>MSResponseUrl</Id></ColumnInfo><ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Name</Name><Id>Name</Id></ColumnInfo><ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending"><Name>Path</Name><Id>Path</Id></ColumnInfo></Presentation><Target /></View></Views><Folders><Folder ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root" Accessibility="Public"
ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" /></Folders><FolderItems><FolderItem ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationEvent.View" ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationEvent.View" Folder="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root" /><FolderItem ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationState.View" ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationState.View" Folder="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root" /><FolderItem ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.CrashListener.CrashListenerState.View" ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.CrashListener.CrashListenerState.View" Folder="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root" /><FolderItem ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemErrorGroupState.View"
ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemErrorGroupState.View" Folder="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root" /><FolderItem ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.WatsonErrorGroupState.View" ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.WatsonErrorGroupState.View" Folder="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root" /></FolderItems><StringResources><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedAppThreshold.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedWatsonBucketThreshold.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet.DefaultConfiguration" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareHealth.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountAppThreshold.AlertMessage" /><StringResource
ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountWatsonBucketThreshold.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketThreshold.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedAppThreshold.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedWatsonBucketThreshold.AlertMessage" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplications.ParameterPrompt.N" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.CurrentIntervalStartDate" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.IntervalDurationInDays" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.N" /><StringResource
ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.PreviousIntervalStartDate" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroups.ParameterPrompt.N" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.CurrentIntervalStartDate" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.IntervalDurationInDays" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.N" /><StringResource ID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.PreviousIntervalStartDate" /></StringResources></Presentation><Reporting><DataWarehouseDataSets><DataWarehouseDataSet ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet"
Accessibility="Public"><Dependencies><DataWarehouseScript>DataWarehouse!Microsoft.SystemCenter.DataWarehouse.Script.DatasetDebuggingSupport</DataWarehouseScript><DataWarehouseScript>DataWarehouse!Microsoft.SystemCenter.DataWarehouse.Script.StandardDatasetSupport</DataWarehouseScript></Dependencies><Configuration><IncludeSchemaTypes><SchemaType>DataWarehouse!Microsoft.SystemCenter.DataWarehouse.StandardDatasetSchema</SchemaType></IncludeSchemaTypes><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Aggregations" type="AggregationsType" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="RawInsertTableCount" type="xsd:positiveInteger" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DefaultAggregationIntervalCount" type="xsd:positiveInteger" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="BlockingMaintenanceDailyStartTime" type="TimeOfDayType" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema"
name="BlockingMaintenanceDurationMinutes" type="xsd:positiveInteger" /></Configuration><Install> 
                    SET NOCOUNT ON
EXEC StandardDatasetDelete @DatasetId = '$Config/DatasetId$'
GO
INSERT StandardDataset (
   DatasetId 
  ,SchemaName
  ,DefaultAggregationIntervalCount
  ,RawInsertTableCount
  ,StagingProcessorStoredProcedureName
  ,BlockingMaintenanceDailyStartTime
  ,BlockingMaintenanceDurationMinutes
)
VALUES
(
   '$Config/DatasetId$'
  ,'CM'
  ,$Config/DefaultAggregationIntervalCount$
  ,$Config/RawInsertTableCount$
  ,'AemProcessStaging'
  ,'$Config/BlockingMaintenanceDailyStartTime$'
  ,$Config/BlockingMaintenanceDurationMinutes$
)
  
                    SET NOCOUNT ON
DECLARE 
   @ErrorInd        bit
  ,@ErrorMessageText nvarchar(4000)
  ,@ErrorNumber     int
  ,@ErrorSeverity   int
  ,@ErrorState      int
  ,@ErrorLine       int
  ,@ErrorProcedure  nvarchar(256)
SET @ErrorInd = 0
DECLARE
   @ExecResult int
  ,@XmlDocHandle int
  ,@XmlDocText varchar(max)
  
BEGIN TRY
  SET @XmlDocText = '&lt;Aggregations&gt;$Config/Aggregations$&lt;/Aggregations&gt;'
  EXEC @ExecResult = sp_xml_preparedocument @XmlDocHandle OUTPUT, @XmlDocText
  IF @ExecResult &lt;&gt; 0 RAISERROR(777971000, 16, 1, 'AemAggregation', @ExecResult)
  INSERT StandardDatasetAggregation
  (                               
     DatasetId
    ,AggregationTypeId
    ,AggregationIntervalDurationMinutes
    ,AggregationStartDelayMinutes
    ,BuildAggregationStoredProcedureName
    ,DeleteAggregationStoredProcedureName
    ,GroomStoredProcedureName
    ,IndexOptimizationIntervalMinutes
    ,MaxDataAgeDays
    ,GroomingIntervalMinutes
    ,MaxRowsToGroom
    ,LastGroomingDateTime
    ,DataFileGroupName
    ,IndexFileGroupName
  )
  SELECT
     '$Config/DatasetId$'
    ,CASE AggregationType
       WHEN 'Raw' THEN 0
       WHEN 'Subhourly' THEN 10
       WHEN 'Hourly' THEN 20
       WHEN 'Daily' THEN 30
     END
    ,CASE AggregationType
       WHEN 'Raw' THEN NULL
       WHEN 'Subhourly' THEN AggregationIntervalDurationMinutes
       WHEN 'Hourly' THEN 60
       WHEN 'Daily' THEN 24*60
     END
    ,AggregationStartDelayMinutes
    ,'AemAggregate'
    ,CASE AggregationType
       WHEN 'Raw' THEN NULL
       ELSE 'AemAggregationDelete'
     END
    ,'AemGroom'
    ,IndexOptimizationIntervalMinutes
    ,MaxDataAgeDays
    ,GroomingIntervalMinutes
    ,MaxRowsToGroom
    ,GETUTCDATE()
    ,DataFileGroupName
    ,IndexFileGroupName
  FROM OPENXML(@XmlDocHandle, 'Aggregations/*', 2) WITH (
       AggregationType                    varchar(50)   '@mp:localname'
      ,MaxTableRowCount                   int
      ,MaxTableSizeKb                     int
      ,AggregationStartDelayMinutes       int
      ,MaxDataAgeDays                     int
      ,GroomingIntervalMinutes            int
      ,MaxRowsToGroom                     int
      ,IndexOptimizationIntervalMinutes   int
      ,DataFileGroupName                  nvarchar(256)
      ,IndexFileGroupName                 nvarchar(256)
      ,AggregationIntervalDurationMinutes int
  )
END TRY
BEGIN CATCH
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
END CATCH
IF (@XmlDocHandle IS NOT NULL)
  EXEC sp_xml_removedocument @XmlDocHandle
IF (@ErrorInd = 1)
BEGIN
  DECLARE @AdjustedErrorSeverity int
  SET @AdjustedErrorSeverity = CASE
                                 WHEN @ErrorSeverity &gt; 18 THEN 18
                                 ELSE @ErrorSeverity
                               END
  
  RAISERROR (777971002, @AdjustedErrorSeverity, 1
    ,@ErrorNumber
    ,@ErrorSeverity
    ,@ErrorState
    ,@ErrorProcedure
    ,@ErrorLine
    ,@ErrorMessageText
  )
END
GO
  
                    SET NOCOUNT ON
DECLARE 
   @ErrorInd            bit
  ,@ErrorMessageText    nvarchar(4000)
  ,@ErrorNumber         int
  ,@ErrorSeverity       int
  ,@ErrorState          int
  ,@ErrorLine           int
  ,@ErrorProcedure      nvarchar(256)
  ,@MaxTableRowCount    int
  ,@MaxTableSizeKb      int
  ,@ExecResult          int
SET @ErrorInd = 0
DECLARE
   @XmlDocHandle int
  ,@XmlDocText nvarchar(max)
BEGIN TRY
    SET @XmlDocText = '&lt;Aggregations&gt;$Config/Aggregations$&lt;/Aggregations&gt;'
    EXEC @ExecResult = sp_xml_preparedocument @XmlDocHandle OUTPUT, @XmlDocText
    IF @ExecResult &lt;&gt; 0 RAISERROR(777971000, 16, 1, 'CMAemAggregation', @ExecResult)
    -- Inserting info about raw and non-dependent daily aggregations
    INSERT StandardDatasetAggregationStorage
    (                               
       DatasetId
      ,AggregationTypeId
      ,BaseTableName
      ,DependentTableInd
      ,TableTemplate
      ,CoverViewSelectClause
      ,MaxTableRowCount
      ,MaxTableSizeKb 
    )
      SELECT
         '$Config/DatasetId$'
        ,CASE AggregationType
           WHEN 'Raw' THEN 0
           WHEN 'Daily' THEN 30
         END
        ,BaseTableName
        ,0
        ,CASE AggregationType
           WHEN 'Raw' THEN '
             CREATE TABLE [CM].[CMAemRaw_$Guid$]
             (
                  AemRawRowId                    int                NOT NULL  IDENTITY(1, 1)
                 ,[DateTime]                     datetime           NOT NULL
                 ,ErrorGroupRowId                int                NOT NULL
                 ,CrashId                        uniqueidentifier   NOT NULL
                 ,CrashTime                      as [DateTime]
                 ,AemUserRowId                   int                NULL
                 ,AemComputerRowId               int                NULL
                 ,CONSTRAINT [PK_CMAemRaw_$Guid$] PRIMARY KEY CLUSTERED ([DateTime], AemRawRowId) ON $DataFileGroupName$
            ) ON $DataFileGroupName$ '
           WHEN 'Daily' THEN '
             CREATE TABLE [CM].[CMAemDaily_$Guid$]
             (
                  AemDailyRowId                  int                NOT NULL  IDENTITY(1, 1)
                 ,[DateTime]                     datetime           NOT NULL
                
                 ,CONSTRAINT [PK_CMAemDaily_$Guid$] PRIMARY KEY CLUSTERED ([DateTime], AemDailyRowId) ON $DataFileGroupName$
            ) ON $DataFileGroupName$ '
         END
        ,CASE AggregationType
           WHEN 'Raw' THEN '
             SELECT
              [DateTime]
             ,ErrorGroupRowId
             ,CrashId
             ,CrashTime
             ,AemUserRowId
             ,AemComputerRowId '
           WHEN 'Daily' THEN ' SELECT [DateTime] '
         END
        ,MaxTableRowCount
        ,MaxTableSizeKb 
      FROM OPENXML(@XmlDocHandle, 'Aggregations/*', 2) WITH (
         AggregationType      varchar(50)   '@mp:localname'
        ,BaseTableName        varchar(256)
        ,MaxTableRowCount     int
        ,MaxTableSizeKb       int
        ,DataFileGroupName    varchar(256)
        ,IndexFileGroupName    varchar(256)
      )  
      CROSS JOIN StandardDataset d
      WHERE (d.DatasetId = '$Config/DatasetId$')
    SELECT
        @MaxTableSizeKb = MaxTableSizeKb
      , @MaxTableRowCount = MaxTableRowCount
    FROM StandardDatasetAggregationStorage
    WHERE DatasetId = '$Config/DatasetId$' AND AggregationTypeId = 30
    -- inserting dependent error group aggregation info
    INSERT StandardDatasetAggregationStorage
    (                               
       DatasetId
      ,AggregationTypeId
      ,BaseTableName
      ,TableTag
      ,DependentTableInd
      ,TableTemplate
      ,CoverViewSelectClause
      ,MaxTableRowCount
      ,MaxTableSizeKb 
    )
    VALUES
    (
       '$Config/DatasetId$'
      ,30 
      ,'CMAemErrorGroupDaily'
      ,'ErrorGroup'
      ,1
      ,'
             CREATE TABLE [CM].[CMAemErrorGroupDaily_$Guid$]
             (
                  AemErrorGroupDailyRowId        int                NOT NULL  IDENTITY(1, 1)
                 ,[DateTime]                     datetime           NOT NULL
                 ,ApplicationRowId               int                NOT NULL
                 ,ErrorGroupRowId                int                NOT NULL
                 ,CrashCount                     int                NOT NULL
                 ,UniqueUsersAffectedCount       int                NOT NULL
                 ,UniqueComputersAffectedCount   int                NOT NULL
                 ,CONSTRAINT [PK_CMAemErrorGroupDaily_$Guid$] PRIMARY KEY CLUSTERED ([DateTime], AemErrorGroupDailyRowId) ON $DataFileGroupName$
            ) ON $DataFileGroupName$
      '
      ,'
            SELECT 
                 [DateTime]
                ,ApplicationRowId
                ,ErrorGroupRowId
                ,CrashCount
                ,UniqueUsersAffectedCount
                ,UniqueComputersAffectedCount
       '
      ,@MaxTableRowCount
      ,@MaxTableSizeKb
    )
    -- inserting dependent Aem application level aggregation info
    INSERT StandardDatasetAggregationStorage
    (                               
       DatasetId
      ,AggregationTypeId
      ,BaseTableName
      ,TableTag
      ,DependentTableInd
      ,TableTemplate
      ,CoverViewSelectClause
      ,MaxTableRowCount
      ,MaxTableSizeKb 
    )
    VALUES
    (
       '$Config/DatasetId$'
      ,30 
      ,'CMAemApplicationDaily'
      ,'Application'
      ,1
      ,'
             CREATE TABLE [CM].[CMAemApplicationDaily_$Guid$]
             (
                  AemApplicationDailyRowId       int                NOT NULL  IDENTITY(1, 1)
                 ,[DateTime]                     datetime           NOT NULL
                 ,ApplicationRowId               int                NOT NULL
                 ,ErrorGroupCount                int                NOT NULL
                 ,CrashCount                     int                NOT NULL
                 ,UniqueUsersAffectedCount       int                NOT NULL
                 ,UniqueComputersAffectedCount   int                NOT NULL
                 ,CONSTRAINT [PK_CMAemApplicationDaily_$Guid$] PRIMARY KEY CLUSTERED ([DateTime], AemApplicationDailyRowId) ON $DataFileGroupName$
            ) ON $DataFileGroupName$
      '
      ,'
            SELECT
               [DateTime]
              ,ApplicationRowId
              ,ErrorGroupCount
              ,CrashCount
              ,UniqueUsersAffectedCount
              ,UniqueComputersAffectedCount
       '
      ,@MaxTableRowCount
      ,@MaxTableSizeKb
    )
END TRY
BEGIN CATCH
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
END CATCH
IF (@ErrorInd = 1)
BEGIN
  DECLARE @AdjustedErrorSeverity int
  SET @AdjustedErrorSeverity = CASE
                                 WHEN @ErrorSeverity &gt; 18 THEN 18
                                 ELSE @ErrorSeverity
                               END
  
  RAISERROR (777971002, @AdjustedErrorSeverity, 1
    ,@ErrorNumber
    ,@ErrorSeverity
    ,@ErrorState
    ,@ErrorProcedure
    ,@ErrorLine
    ,@ErrorMessageText
  )
END
GO
                    IF NOT EXISTS (SELECT * FROM sys.schemas WHERE [name] = 'CM')
BEGIN
  EXECUTE('CREATE SCHEMA CM')
END
GO
-- change schema ownership to allow index rebuild and reorganize
ALTER AUTHORIZATION ON SCHEMA::CM TO OpsMgrWriter
GO
-- change schema alter to allow domain table index rebuild
GRANT ALTER ON SCHEMA::dbo TO OpsMgrWriter
GO
-- grant create table permissions
GRANT CREATE TABLE TO OpsMgrWriter
GO
-- raw
EXEC StandardDatasetAllocateStorage @DatasetId = '$Config/DatasetId$', @AggregationTypeId = 0
-- daily
EXEC StandardDatasetAllocateStorage @DatasetId = '$Config/DatasetId$', @AggregationTypeId = 30
GO
                    
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemApplication' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE [dbo].AemApplication
    (  
        ApplicationRowId                        int                 NOT NULL    IDENTITY(1, 1)
       ,ApplicationManagedEntityId              uniqueidentifier    NOT NULL
       ,ApplicationName                         nvarchar(256)       NOT NULL
       ,ApplicationVersion                      nvarchar(256)       NOT NULL
       ,CompanyName                             nvarchar(256)
       ,FriendlyApplicationName                 nvarchar(256)        
       ,LastReceivedDateTime                    smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemApplication'
        ,@DatasetId = '$Config/DatasetId$'
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemApplication
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemApplication')
BEGIN
    ALTER TABLE [dbo].AemApplication
        ADD CONSTRAINT PK_AemApplication PRIMARY KEY CLUSTERED (ApplicationRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemApplication_ApplicationRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemApplication_ApplicationRowId')
BEGIN
    CREATE INDEX IX_AemApplication_ApplicationRowId ON [dbo].AemApplication(ApplicationRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemApplication_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemApplication_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemApplication_LastReceivedDateTime ON [dbo].AemApplication(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemApplication TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemApplication TO OpsMgrReader
GO
 
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemComputer' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemComputer
    (
        AemComputerRowId                            int                 NOT NULL    IDENTITY(1, 1)
        
       ,AemComputerName                             nvarchar(256)       NOT NULL
       ,LastReceivedDateTime                        smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )   
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemComputer'
        ,@DatasetId = '$Config/DatasetId$'
    
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemComputer
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemComputer')
BEGIN
    ALTER TABLE [dbo].AemComputer
        ADD CONSTRAINT PK_AemComputer PRIMARY KEY CLUSTERED (AemComputerRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemComputer_AemComputerRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemComputer_AemComputerRowId')
BEGIN
    CREATE INDEX IX_AemComputer_AemComputerRowId ON [dbo].AemComputer(AemComputerRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemComputer_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemComputer_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemComputer_LastReceivedDateTime ON [dbo].AemComputer(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON AemComputer TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemComputer TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemErrorGroup
    (   
        ErrorGroupRowId                     int                 NOT NULL    IDENTITY(1, 1)
       ,ApplicationRowId                    int                 NOT NULL
                                
       ,ErrorGroupManagedEntityId           uniqueidentifier    NOT NULL
       ,BucketType                          nvarchar(10)        NOT NULL
       ,Parameter0                          nvarchar(256)       
       ,Parameter1                          nvarchar(256)       
       ,Parameter2                          nvarchar(256)       
       ,Parameter3                          nvarchar(256)       
       ,Parameter4                          nvarchar(256)       
       ,Parameter5                          nvarchar(256)       
       ,Parameter6                          nvarchar(256)       
       ,Parameter7                          nvarchar(256)       
       ,Parameter8                          nvarchar(256)       
       ,Parameter9                          nvarchar(256)       
       ,Parameter10                         nvarchar(256)
       
       ,SelectedSolutionResponseType        nvarchar(16)
       ,SelectedCollectionResponseType      nvarchar(16)
       
       ,MicrosoftResponseUrl                nvarchar(256)
       /*
       ,MicrosoftBucketId                   int
       ,MicrosoftBucketTableId              int
       ,MicrosoftDisplayType                nvarchar(256)
       ,MicrosoftGetCurrentOfficeDocument   nvarchar(3) 
       ,MicrosoftGetFiles                   nvarchar(4096)
       ,MicrosoftGetFileVersions            nvarchar(4096)
       ,MicrosoftWqlQueries                 nvarchar(4096)
       ,MicrosoftGetMemoryDump              nvarchar(3)
       ,MicrosoftGetRegistryKeys            nvarchar(4096)
       ,MicrosoftGetRegistryTrees           nvarchar(4096)
       ,CustomResponseUrl                   nvarchar(256)
       ,CustomGetCurrentOfficeDocument      bit 
       ,CustomGetFiles                      nvarchar(4096)
       ,CustomGetFileVersions               nvarchar(4096)
       ,CustomWqlQueries                    nvarchar(4096)
       ,CustomGetMemoryDump                 bit
       ,CustomGetRegistryKeys               nvarchar(4096)
       ,CustomGetRegistryTrees              nvarchar(4096)
       */
       ,LastReceivedDateTime                smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )       
    
    EXEC DomainTableRegisterIndexOptimization
       @TableName = 'AemErrorGroup'
      ,@DatasetId = '$Config/DatasetId$'
END
GO
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'ErrorGroupId')
BEGIN
  ALTER TABLE dbo.AemErrorGroup
    DROP COLUMN ErrorGroupId   
END
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketId')
BEGIN
  ALTER TABLE dbo.AemErrorGroup
    ADD BucketId bigint  
END
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketTableId')
BEGIN
  ALTER TABLE dbo.AemErrorGroup
    ADD BucketTableId bigint
END
------------------------------------------------------------------------------------------------
-- PK_AemErrorGroup
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemErrorGroup')
BEGIN
    ALTER TABLE [dbo].AemErrorGroup
        ADD CONSTRAINT PK_AemErrorGroup PRIMARY KEY CLUSTERED (ErrorGroupRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_ErrorGroupManagedEntityId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_ErrorGroupManagedEntityId')
BEGIN
    CREATE INDEX IX_AemErrorGroup_ErrorGroupManagedEntityId ON [dbo].AemErrorGroup(ErrorGroupManagedEntityId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_ErrorGroupRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_ErrorGroupRowId')
BEGIN
    CREATE INDEX IX_AemErrorGroup_ErrorGroupRowId ON [dbo].AemErrorGroup(ErrorGroupRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_ApplicationRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_ApplicationRowId')
BEGIN
    CREATE INDEX IX_AemErrorGroup_ApplicationRowId ON [dbo].AemErrorGroup(ApplicationRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_MicrosoftResponseUrl
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_MicrosoftResponseUrl')
BEGIN
    CREATE INDEX IX_AemErrorGroup_MicrosoftResponseUrl ON [dbo].AemErrorGroup(MicrosoftResponseUrl)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemErrorGroup_LastReceivedDateTime ON [dbo].AemErrorGroup(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemErrorGroup TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemErrorGroup TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemEventStage' AND TABLE_SCHEMA = 'dbo')
BEGIN
  EXECUTE('CREATE TABLE dbo.AemEventStage (                               
       DatasetId                      uniqueidentifier  NOT NULL
      ,[DateTime]                     datetime          NOT NULL
      ,CrashId                        uniqueidentifier  NOT NULL
      ,ErrorGroupManagedEntityId      uniqueidentifier  NOT NULL
      ,AemComputerName                nvarchar(256)     
      ,AemUserName                    nvarchar(256)     
      ,CrashTime                      as [DateTime]
      ,DWCreatedDataTime              datetime          NOT NULL DEFAULT (GETUTCDATE())
)')
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemEventStage TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemEventStage TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo')
BEGIN
  CREATE TABLE dbo.AemManagedEntityStage (                               
       DatasetId                            uniqueidentifier  NOT NULL
      
      ,ApplicationManagedEntityId           uniqueidentifier  NOT NULL
      ,ApplicationName                      nvarchar(256)     NOT NULL
      ,ApplicationVersion                   nvarchar(256)
      ,CompanyName                          nvarchar(256)     
      ,FriendlyApplicationName              nvarchar(256)     
      
      ,ErrorGroupManagedEntityId            uniqueidentifier  NOT NULL
      ,BucketType                           nvarchar(10)     
      ,Parameter0                           nvarchar(256)       
      ,Parameter1                           nvarchar(256)       
      ,Parameter2                           nvarchar(256)       
      ,Parameter3                           nvarchar(256)       
      ,Parameter4                           nvarchar(256)       
      ,Parameter5                           nvarchar(256)       
      ,Parameter6                           nvarchar(256)       
      ,Parameter7                           nvarchar(256)       
      ,Parameter8                           nvarchar(256)       
      ,Parameter9                           nvarchar(256)       
      ,Parameter10                          nvarchar(256)
      ,SelectedSolutionResponseType         nvarchar(16)
      ,SelectedCollectionResponseType       nvarchar(16)
      
      ,MicrosoftResponseUrl                 nvarchar(256)
      ,DWCreatedDataTime                    datetime          NOT NULL DEFAULT (GETUTCDATE())
    )
END
GO
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'ErrorGroupId')
BEGIN
  ALTER TABLE dbo.AemManagedEntityStage
    DROP COLUMN ErrorGroupId 
END
GO
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketId')
BEGIN
  ALTER TABLE dbo.AemManagedEntityStage
    ADD BucketId bigint
END
GO
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketTableId')
BEGIN
  ALTER TABLE dbo.AemManagedEntityStage
    ADD BucketTableId bigint
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemManagedEntityStage TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemManagedEntityStage TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemSystemErrorGroup' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemSystemErrorGroup
    (   
        ErrorGroupRowId                     int                 NOT NULL    IDENTITY(1, 1)
       ,ErrorGroupManagedEntityId           uniqueidentifier    NOT NULL
                                
       ,BucketType                          nvarchar(4)         NOT NULL    DEFAULT('Blue')
       ,CrashTime                           datetime            
       ,AemUserRowId                        int                 
       ,AemComputerRowId                    int                 
    --   ,CabFileName                         nvarchar(1024)      
       
       ,MicrosoftResponseUrl                nvarchar(256)
        /*
       ,MicrosoftSolutionId                 int
       ,MicrosoftGenericSolutionId          int
       ,MicrosoftSolution                   nvarchar(256)
       ,MicrosoftGenericSolution            nvarchar(256)
       ,MicrosoftResponseTypeId             int
        */
       ,LastReceivedDateTime                smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemSystemErrorGroup'
        ,@DatasetId = '$Config/DatasetId$'
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemSystemErrorGroup
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemSystemErrorGroup')
BEGIN
    ALTER TABLE [dbo].AemSystemErrorGroup
        ADD CONSTRAINT PK_AemSystemErrorGroup PRIMARY KEY CLUSTERED (ErrorGroupRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemSystemErrorGroup_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemSystemErrorGroup_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemSystemErrorGroup_LastReceivedDateTime ON [dbo].AemSystemErrorGroup(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemSystemErrorGroup TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemSystemErrorGroup TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemUser' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemUser
    (
        AemUserRowId                           int                 NOT NULL    IDENTITY(1, 1)
        
       ,AemUserName                            nvarchar(256)       NOT NULL
       ,LastReceivedDateTime                   smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemUser'
        ,@DatasetId = '$Config/DatasetId$'
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemUser
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemUser')
BEGIN
    ALTER TABLE [dbo].AemUser
        ADD CONSTRAINT PK_AemUser PRIMARY KEY CLUSTERED (AemUserRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemUser_AemUserRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemUser_AemUserRowId')
BEGIN
    CREATE INDEX IX_AemUser_AemUserRowId ON [dbo].AemUser(AemUserRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemUser_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemUser_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemUser_LastReceivedDateTime ON [dbo].AemUser(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemUser TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemUser TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemAggregate')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemAggregate AS RETURN 1')
    END
GO
ALTER PROCEDURE [dbo].[AemAggregate]
   @DatasetId   uniqueidentifier
  ,@AggregationTypeId int
  ,@InsertTableGuid varchar(256)
  ,@IntervalStartDateTime datetime
  ,@IntervalEndDateTime datetime
AS
BEGIN
  SET NOCOUNT ON
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(4000)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(4000)
  SET @ErrorInd = 0
  
  BEGIN TRY
  
    IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
    BEGIN
        RETURN
    END
  
    IF (@AggregationTypeId &lt;&gt; 30) RETURN
    DECLARE
       @Statement nvarchar(max)
      ,@DebugLevel tinyint
      ,@InsertTableName sysname
      ,@DebugMessage nvarchar(max)
      ,@AggregationStartDateTime datetime
      ,@CoverRawViewName sysname
      ,@SchemaName sysname
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    BEGIN TRAN
    
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Starting aggregation at main level of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      SET @AggregationStartDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
    SELECT @InsertTableName = QUOTENAME(@SchemaName) + '.' + BaseTableName + '_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = 30)
      AND (DependentTableInd = 0)
    SET @Statement = 'INSERT INTO ' + @InsertTableName + '([DateTime]) '
		+ 'VALUES('
		+ ' CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120)'
        + ')'
	EXECUTE(@Statement)
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Finished aggregation at main level of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      DECLARE @OperationDurationMs bigint
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @AggregationStartDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    SELECT @CoverRawViewName = QUOTENAME(@SchemaName) + '.v' + BaseTableName
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = 0)
      AND (DependentTableInd = 0)
    
    -- We'll first finish aggregations for error group, and then we'll start aggregations for application
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Starting error group aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      SET @AggregationStartDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
    SELECT @InsertTableName = QUOTENAME(@SchemaName) + '.CMAemErrorGroupDaily_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    
    CREATE TABLE #DailyErrorGroupAggregatedData
    (
         StartDateTime                   datetime
        ,EndDateTime                     datetime
        ,ErrorGroupRowId                 int
        ,CrashCount                      int
        ,UniqueUsersAffectedCount        int
        ,UniqueComputersAffectedCount    int
    )
    SET @Statement = 
      ' INSERT #DailyErrorGroupAggregatedData ('
    + '     StartDateTime'
    + '    ,EndDateTime'
    + '    ,ErrorGroupRowId'
    + '    ,CrashCount'
    + '    ,UniqueUsersAffectedCount'
    + '    ,UniqueComputersAffectedCount'
    + '    )'
    + '        SELECT'
    + '             CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120)'
    + '            ,CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120)'
    + '            ,v.ErrorGroupRowId'
    + '            ,COUNT(v.CrashId)'
    + '            ,COUNT(DISTINCT(v.AemUserRowId))'
    + '            ,COUNT(DISTINCT(v.AemComputerRowId))'
    + '        FROM CM.vCMAemRaw v'
    + '        WHERE (v.[DateTime] &gt;= CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120))'
    + '            AND (v.[DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120))'
    + '        GROUP BY v.ErrorGroupRowId'
    
    EXECUTE (@Statement)
	SET @Statement = 
        ' WITH NewData '
      + ' ( '
      + '    StartDateTime '
      + '   ,EndDateTime '
      + '   ,ErrorGroupRowId '
      + '   ,CrashCount '
      + '   ,UniqueUsersAffectedCount '
      + '   ,UniqueComputersAffectedCount '
      + ' ) '
      + ' AS '
      + ' ( '
      + '     SELECT '
      + '            StartDateTime '
      + '           ,EndDateTime '
      + '           ,ErrorGroupRowId '
      + '           ,CrashCount '
      + '           ,UniqueUsersAffectedCount '
      + '           ,UniqueComputersAffectedCount '
      + '     FROM #DailyErrorGroupAggregatedData '
      + ' ) '
	  + ' UPDATE i '
	  + ' SET i.CrashCount = nd.CrashCount '
      + '    ,i.UniqueUsersAffectedCount = nd.UniqueUsersAffectedCount '
      + '    ,i.UniqueComputersAffectedCount = nd.UniqueComputersAffectedCount '
      + '    ,i.[DateTime] = nd.StartDateTime '
      + ' FROM ' + @InsertTableName + ' i '
      + ' JOIN NewData AS nd ON nd.ErrorGroupRowId = i.ErrorGroupRowId '
      + ' WHERE (i.[DateTime] &gt;= nd.StartDateTime)'
      + '     AND (i.[DateTime] &lt; nd.EndDateTime)'
    EXECUTE (@Statement)
    SET @Statement =
        ' DELETE FROM #DailyErrorGroupAggregatedData '
      + ' WHERE 0 &lt;&gt; ('
      + '     SELECT COUNT(*) '
      + '     FROM ' + @InsertTableName + ' i '
      + '     WHERE i.[DateTime] = #DailyErrorGroupAggregatedData.StartDateTime '
      + '        AND i.ErrorGroupRowId = #DailyErrorGroupAggregatedData.ErrorGroupRowId '
      + ' ) '
    EXECUTE (@Statement)
    SET @Statement =
        'INSERT ' + @InsertTableName + ' ('
      + '    [DateTime]'
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupRowId'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ')'
      + '   SELECT'
      + '        degad.StartDateTime'
      + '       ,aeg.ApplicationRowId'
      + '       ,degad.ErrorGroupRowId'
      + '       ,degad.CrashCount'
      + '       ,degad.UniqueUsersAffectedCount'
      + '       ,degad.UniqueComputersAffectedCount'
      + '   FROM #DailyErrorGroupAggregatedData degad'
      + '   JOIN AemErrorGroup aeg ON (aeg.ErrorGroupRowId = degad.ErrorGroupRowId)'
    EXECUTE (@Statement)
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Finished error group aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @AggregationStartDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    
    -- start aggregation for application type, now that aggregation for error group is over
    SELECT @InsertTableName = QUOTENAME(@SchemaName) + '.CMAemApplicationDaily_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Starting application aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
    
    CREATE TABLE #DailyApplicationAggregatedData
    (
         StartDateTime                   datetime
        ,EndDateTime                     datetime
        ,ApplicationRowId                int
        ,ErrorGroupCount                 int
        ,CrashCount                      int
        ,UniqueUsersAffectedCount        int
        ,UniqueComputersAffectedCount    int
    )
    SET @Statement =
        'INSERT #DailyApplicationAggregatedData ('
      + '    StartDateTime'
      + '   ,EndDateTime'
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupCount'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ')'
      + '   SELECT'
      + '        CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120)'
      + '       ,CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120)'
      + '       ,aeg.ApplicationRowId'
      + '       ,COUNT(DISTINCT(v.ErrorGroupRowId))'
      + '       ,COUNT(DISTINCT(v.CrashId))'
      + '       ,COUNT(DISTINCT(v.AemUserRowId))'
      + '       ,COUNT(DISTINCT(v.AemComputerRowId))'
      + '   FROM AemErrorGroup aeg'
      + '   JOIN ' + @CoverRawViewName + ' v ON '
      + '       (v.ErrorGroupRowId = aeg.ErrorGroupRowId)'
      + '   WHERE (v.[DateTime] &gt;= CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120))'
      + '       AND (v.[DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120))'
      + '   GROUP BY aeg.ApplicationRowId'
    EXECUTE (@Statement)
	SET @Statement = 
        ' WITH NewData '
      + ' ( '
      + '    StartDateTime '
      + '   ,EndDateTime '
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupCount'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ' ) '
      + ' AS '
      + ' ( '
      + '     SELECT '
      + '            StartDateTime '
      + '           ,EndDateTime '
      + '           ,ApplicationRowId'
      + '           ,ErrorGroupCount'
      + '           ,CrashCount'
      + '           ,UniqueUsersAffectedCount'
      + '           ,UniqueComputersAffectedCount'
      + '     FROM #DailyApplicationAggregatedData '
      + ' ) '
	  + ' UPDATE i '
	  + ' SET i.ErrorGroupCount = nd.ErrorGroupCount '
	  + '    ,i.CrashCount = nd.CrashCount '
      + '    ,i.UniqueUsersAffectedCount = nd.UniqueUsersAffectedCount '
      + '    ,i.UniqueComputersAffectedCount = nd.UniqueComputersAffectedCount '
      + '    ,i.[DateTime] = nd.StartDateTime '
      + ' FROM ' + @InsertTableName + ' i '
      + ' JOIN NewData AS nd ON nd.ApplicationRowId = i.ApplicationRowId '
      + ' WHERE (i.[DateTime] &gt;= nd.StartDateTime)'
      + '     AND (i.[DateTime] &lt; nd.EndDateTime)'
    EXECUTE (@Statement)
    SET @Statement =
        ' DELETE FROM #DailyApplicationAggregatedData '
      + ' WHERE 0 &lt;&gt; ('
      + '     SELECT COUNT(*) '
      + '     FROM ' + @InsertTableName + ' i '
      + '     WHERE i.[DateTime] = #DailyApplicationAggregatedData.StartDateTime '
      + '        AND i.ApplicationRowId = #DailyApplicationAggregatedData.ApplicationRowId '
      + ' ) '
    EXECUTE (@Statement)
    SET @Statement =
        'INSERT ' + @InsertTableName + ' ('
      + '    [DateTime]'
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupCount'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ')'
      + '   SELECT'
      + '        daad.StartDateTime'
      + '       ,daad.ApplicationRowId'
      + '       ,daad.ErrorGroupCount'
      + '       ,daad.CrashCount'
      + '       ,daad.UniqueUsersAffectedCount'
      + '       ,daad.UniqueComputersAffectedCount'
      + '   FROM #DailyApplicationAggregatedData daad'
    EXECUTE (@Statement)
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Finished application aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @AggregationStartDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      SET @DebugMessageText = N'Failed to build aggregates for AEM data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemAggregate TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemAggregationDelete')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemAggregationDelete AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemAggregationDelete
   @DatasetId   uniqueidentifier
  ,@AggregationTypeId tinyint
  ,@TableGuid uniqueidentifier
  ,@AggregationDateTime datetime
  ,@RowsDeleted int OUTPUT
AS
BEGIN
  IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
  BEGIN
      RETURN
  END
  SET NOCOUNT ON
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(4000)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(4000)
  SET @ErrorInd = 0
  
  DECLARE
     @TableName sysname
    ,@Statement nvarchar(max)
    ,@DebugMessage nvarchar(max)
    ,@DeleteStartedDateTime datetime
    ,@OperationDurationMs bigint
    ,@DebugLevel tinyint
    ,@SchemaName sysname
  
  BEGIN TRY
    IF (@AggregationTypeId &lt;&gt; 30) RETURN
    
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    BEGIN TRAN
    -- there are dependent tables in aem data set; we'll 1st delete error group aggregation
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 1)
      AND (BaseTableName = 'CMAemErrorGroupDaily')
    
    SET @Statement = 'DELETE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] = CONVERT(datetime, ''' + CONVERT(varchar(50), @AggregationDateTime, 120) + ''', 120))'
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Starting delete of existing AEM error group aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      
      SET @DeleteStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
   
    EXECUTE(@Statement)
    
    SET @RowsDeleted = @@ROWCOUNT
  
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Finished delete of existing AEM error group aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @DeleteStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    -- we'll now delete application aggregation
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 1)
      AND (BaseTableName = 'CMAemApplicationDaily')
    
    SET @Statement = 'DELETE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] = CONVERT(datetime, ''' + CONVERT(varchar(50), @AggregationDateTime, 120) + ''', 120))'
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Starting delete of existing AEM application aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      
      SET @DeleteStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
   
    EXECUTE(@Statement)
    
    SET @RowsDeleted = @RowsDeleted + @@ROWCOUNT
  
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Finished delete of existing AEM application aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @DeleteStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    -- we'll now delete main aggregation table
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 0)
    
    SET @Statement = 'DELETE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] = CONVERT(datetime, ''' + CONVERT(varchar(50), @AggregationDateTime, 120) + ''', 120))'
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Starting delete of main AEM aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      
      SET @DeleteStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
   
    EXECUTE(@Statement)
    
    SET @RowsDeleted = @RowsDeleted + @@ROWCOUNT
  
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Finished delete of main AEM aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @DeleteStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
    
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      SET @DebugMessageText = N'Failed to delete aggregated data for AEM data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @ErrorMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
  
  RETURN @RowsDeleted
END
GO
GRANT EXECUTE ON AemAggregationDelete TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemEventInsert')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemEventInsert AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemEventInsert
   @ManagementGroupId   uniqueidentifier
  ,@DatasetId           uniqueidentifier
  ,@DataXml             ntext
AS
BEGIN
  SET NOCOUNT ON
  
  DECLARE @ManagementGroupRowId int
  
  -- check management group permissions
  SELECT @ManagementGroupRowId = ManagementGroupRowId
  FROM vManagementGroup
  WHERE (ManagementGroupGuid = @ManagementGroupId)
    AND (WriterLoginName = SUSER_NAME())
  IF (@ManagementGroupRowId IS NULL)
  BEGIN
    RAISERROR(777970003, 16, 1)
    RETURN -1
  END
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  DECLARE
     @ExecResult int
    ,@XmlDocHandle int
    ,@ResultingState int
  
  SET @ResultingState = 1
  
  BEGIN TRY
    EXEC @ExecResult = sp_xml_preparedocument @XmlDocHandle OUTPUT, @DataXml
    IF @ExecResult &lt;&gt; 0 RAISERROR(777971000, 16, 1, 'CM', @ExecResult)
    
    INSERT AemEventStage (
         DatasetId
       ,[DateTime]
       ,CrashId
       ,ErrorGroupManagedEntityId
       ,AemComputerName
       ,AemUserName
    )
      SELECT 
         @DatasetId
        ,xml.CrashTime
        ,xml.CrashId
        ,xml.ErrorGroupManagedEntityId
        ,xml.AemComputerName
        ,xml.AemUserName
      FROM OPENXML(@XmlDocHandle, 'Root/Item', 2) WITH (
                   CrashId                        uniqueidentifier
                  ,ErrorGroupManagedEntityId      uniqueidentifier
                  ,CrashTime                      datetime
                  ,AemComputerName                nvarchar(256)
                  ,AemUserName                    nvarchar(256)) xml
    -- indicate data was written to staging - it is Ok to Ack the workflow
    SET @ResultingState = 10
      
    EXEC StandardDatasetMaintenance @DatasetId
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  IF (@XmlDocHandle IS NOT NULL)
    EXEC sp_xml_removedocument @XmlDocHandle
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, @ResultingState
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemEventInsert TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemEventProcessStaging')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemEventProcessStaging AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemEventProcessStaging
   @DatasetId           uniqueidentifier
AS
BEGIN
  SET NOCOUNT ON
 DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  sysname
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  BEGIN TRY
    DECLARE
       @InsertTableName sysname
      ,@InsertTableGuid uniqueidentifier
      ,@InsertStartedDateTime datetime
      ,@Statement nvarchar(max)
      ,@ExecResult int
      ,@TempTableCreated bit
      ,@DebugLevel int
      ,@LockResourceName sysname
      ,@MessageText nvarchar(max)
      ,@OperationDurationMs bigint
      ,@SchemaName sysname
     
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    EXEC dbo.StandardDatasetGetInsertTableGuid @DatasetId, 0, @InsertTableGuid OUTPUT
    SELECT @InsertTableName = BaseTableName + '_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = 0)
      AND (DependentTableInd = 0)
    BEGIN TRAN
    
    -- remove duplicate data
    SELECT @Statement = 'DELETE e'
                        + ' FROM AemEventStage e, ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@InsertTableName) + ' i'
                        + ' WHERE (i.CrashId = e.CrashId)'
    EXECUTE (@Statement)
    -- creating temp table
    CREATE TABLE #Event
    (
        ErrorGroupManagedEntityId   uniqueidentifier    NOT NULL
       ,[DateTime]                  datetime            NOT NULL
       ,ErrorGroupRowId             int
       ,CrashId                     uniqueidentifier    NOT NULL
       ,CrashTime                   as [DateTime]
       ,AemUserName                 nvarchar(256)
       ,AemUserRowId                int
       ,AemComputerName             nvarchar(256)
       ,AemComputerRowId            int
       ,WatsonBucket                bit
    )
    
    -- getting data ready to be moved to CMAemRaw in temp table
    INSERT #Event (
           ErrorGroupManagedEntityId
          ,[DateTime]
          ,ErrorGroupRowId
          ,CrashId
          ,AemUserName
          ,AemUserRowId
          ,AemComputerName
          ,AemComputerRowId
          ,WatsonBucket
    )
      SELECT 
           aes.ErrorGroupManagedEntityId
          ,aes.[DateTime]
          ,aeg.ErrorGroupRowId
          ,aes.CrashId
          ,aes.AemUserName
          ,au.AemUserRowId
          ,aes.AemComputerName
          ,ac.AemComputerRowId
          ,1
      FROM AemEventStage aes
        JOIN AemErrorGroup aeg ON (aeg.ErrorGroupManagedEntityId = aes.ErrorGroupManagedEntityId)
        LEFT JOIN AemUser au ON (au.AemUserName = aes.AemUserName)
        LEFT JOIN AemComputer ac ON (ac.AemComputerName = aes.AemComputerName)
    -- getting data ready to be moved to CMAemRaw in temp table
    INSERT #Event (
           ErrorGroupManagedEntityId
          ,[DateTime]
          ,ErrorGroupRowId
          ,CrashId
          ,AemUserName
          ,AemUserRowId
          ,AemComputerName
          ,AemComputerRowId
          ,WatsonBucket
    )
      SELECT 
           aes.ErrorGroupManagedEntityId
          ,aes.[DateTime]
          ,aseg.ErrorGroupRowId
          ,aes.CrashId
          ,aes.AemUserName
          ,au.AemUserRowId
          ,aes.AemComputerName
          ,ac.AemComputerRowId
          ,0
      FROM AemEventStage aes
        JOIN AemSystemErrorGroup aseg ON (aseg.ErrorGroupManagedEntityId = aes.ErrorGroupManagedEntityId)
        LEFT JOIN AemUser au ON (au.AemUserName = aes.AemUserName)
        LEFT JOIN AemComputer ac ON (ac.AemComputerName = aes.AemComputerName)
    -- we will not insert data whose Error Group's are not known yet    
    DELETE #Event
    WHERE ErrorGroupRowId IS NULL
    -- *****************************************************
    -- update userName dimension
    
    UPDATE au
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemUser au
          JOIN #Event e ON (au.AemUserRowId = e.AemUserRowId)
    WHERE (DATEADD(day, 1, au.LastReceivedDateTime) &lt; GETUTCDATE())
    
    INSERT AemUser (AemUserName)
    SELECT DISTINCT e.AemUserName COLLATE database_default
    FROM #Event e
    WHERE 0 = (SELECT COUNT(*) FROM AemUser au WHERE (au.AemUserName = e.AemUserName COLLATE database_default))
        AND e.AemUserName IS NOT NULL
    
    UPDATE e
    SET e.AemUserRowId = au.AemUserRowId
    FROM #Event e JOIN AemUser au ON (e.AemUserName = au.AemUserName COLLATE database_default)
    WHERE (e.AemUserRowId IS NULL)
  
    -- *****************************************************
    -- update computerName dimension
    
    UPDATE ac
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemComputer ac
          JOIN #Event e ON (ac.AemComputerRowId = e.AemComputerRowId)
    WHERE (DATEADD(day, 1, ac.LastReceivedDateTime) &lt; GETUTCDATE())
    
    INSERT AemComputer (AemComputerName)
    SELECT DISTINCT e.AemComputerName COLLATE database_default
    FROM #Event e
    WHERE 0 = (SELECT COUNT(*) FROM AemComputer ac WHERE (ac.AemComputerName = e.AemComputerName COLLATE database_default))
        AND e.AemComputerName IS NOT NULL
    
    UPDATE e
    SET e.AemComputerRowId = ac.AemComputerRowId
    FROM #Event e JOIN AemComputer ac ON (e.AemComputerName = ac.AemComputerName COLLATE database_default)
    WHERE (e.AemComputerRowId IS NULL)
    -- remove duplicate data that we recevied via Check-For-Solution feature
    -- that has CrashId probably different
    -- we start with watson bucket 1st
    SELECT @Statement = 'DELETE aes'
                        + ' FROM AemEventStage aes, ' 
                        +     QUOTENAME(@SchemaName) + '.' + QUOTENAME(@InsertTableName) + ' i, '
                        + '   #Event e '
                        + ' WHERE (aes.CrashId = e.CrashId) '
                        + '   AND (e.WatsonBucket = 1) '
                        + '   AND (e.AemComputerRowId = i.AemComputerRowId ' 
                        + '        AND e.AemUserRowId = i.AemUserRowId '
                        + '        AND e.ErrorGroupRowId = i.ErrorGroupRowId '
                        + '        AND e.CrashTime = i.CrashTime)'
    EXECUTE (@Statement)
    
    -- now, system bucket
    SELECT @Statement = 'DELETE aes'
                        + ' FROM AemEventStage aes, ' 
                        + '   AemSystemErrorGroup aseg, '
                        + '   #Event e '
                        + ' WHERE (aes.CrashId = e.CrashId) '
                        + '   AND (e.WatsonBucket = 0) '
                        + '   AND (e.AemComputerRowId = aseg.AemComputerRowId ' 
                        + '        AND e.AemUserRowId = aseg.AemUserRowId '
                        + '        AND e.ErrorGroupRowId = aseg.ErrorGroupRowId '
                        + '        AND e.CrashTime = aseg.CrashTime)'
    EXECUTE (@Statement)
    -- we deleted above data from AemEventStage, we need to delete data from #Event too
    SELECT @Statement = 'DELETE e'
                        + ' FROM #Event e '
                        + ' WHERE e.CrashId NOT IN (SELECT CrashId FROM AemEventStage) '
    EXECUTE (@Statement)
    -- ***************************************************************    
    -- lock table map to ensure we insert into table opened for insertion
    
    SET @LockResourceName = CAST(@DatasetId AS varchar(50)) + '_TableMap'
  
    EXEC @ExecResult = sp_getapplock
           @Resource = @LockResourceName
          ,@LockMode = 'Shared'
          ,@LockOwner = 'Transaction'
    IF (@ExecResult &lt; 0)
    BEGIN
      RAISERROR(777971001, 16, 1, 'Shared:StandardDatasetTableMap', @ExecResult)
    END
  
    EXEC dbo.StandardDatasetGetInsertTableGuid @DatasetId, 0, @InsertTableGuid OUTPUT
    
    IF (@DebugLevel &gt; 3)
    BEGIN
      SELECT @MessageText = 'Starting to insert ' + CAST(COUNT(*) AS varchar(30)) + ' AEM event data into table set with GUID ' + CAST(@InsertTableGuid AS varchar(100))
      FROM #Event
      
      SET @InsertStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
    END
  
    -- insert new data
    SELECT @Statement =
        ' INSERT ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@InsertTableName) + ' ('
      + '   [DateTime]'
      + '  ,ErrorGroupRowId'
      + '  ,CrashId'
      + '  ,AemUserRowId'
      + '  ,AemComputerRowId'
      + ' )'
      + ' SELECT '
      + '   [DateTime]'
      + '  ,ErrorGroupRowId'
      + '  ,CrashId'
      + '  ,AemUserRowId'
      + '  ,AemComputerRowId'
      + ' FROM #Event'
      + ' WHERE WatsonBucket = 1'
    EXECUTE(@Statement)
    -- mark existing affected aggregations as dirty
    UPDATE sdah
    SET DirtyInd = 1
      ,DataLastReceivedDateTime = GETUTCDATE()
    FROM StandardDatasetAggregationHistory sdah
      JOIN StandardDatasetAggregation sda ON (sdah.DatasetId = sda.DatasetId AND sdah.AggregationTypeId = sda.AggregationTypeId)
      CROSS JOIN #Event e
    WHERE (sdah.DatasetId = @DatasetId)
      AND (sdah.DirtyInd = 0)
      AND (e.[DateTime] &gt;= sdah.AggregationDateTime)
      AND (e.[DateTime] &lt; DATEADD(minute, sda.AggregationIntervalDurationMinutes, sdah.AggregationDateTime))
      AND (e.WatsonBucket = 1)
    -- let's deal with system bucket data now
    -- for system bucket: the event details map to system error group 
    -- the event data did not make into AemRaw table
    UPDATE aseg
    SET aseg.CrashTime = e.[DateTime]
       ,aseg.AemUserRowId = e.AemUserRowId
       ,aseg.AemComputerRowId = e.AemComputerRowId
       --,aseg.CabFileName = 
    FROM AemSystemErrorGroup aseg 
        JOIN #Event e ON (aseg.ErrorGroupManagedEntityId = e.ErrorGroupManagedEntityId)
    -- remove inserted systemBucket related data
    SELECT @Statement = 'DELETE aes'
                        + ' FROM AemEventStage aes'
                        + '   JOIN #Event e ON (e.ErrorGroupManagedEntityId = aes.ErrorGroupManagedEntityId)'
    EXECUTE (@Statement)
    -- remove inserted data
    SELECT @Statement = 
          'DELETE aes '
        + 'FROM AemEventStage aes '
        + '    JOIN #Event e ON (aes.CrashId = e.CrashId)'
    EXECUTE (@Statement)
       
    IF (@DebugLevel &gt; 3)
    BEGIN
      SET @MessageText = 'Finished inserting AEM event data into table set with GUID ' + CAST(@InsertTableGuid AS varchar(100))
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @InsertStartedDateTime))
      SET @InsertStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
        ,@OperationDurationMs = @OperationDurationMs
    END
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      
      SET @DebugMessageText = N'Failed to insert AEM event data into AEM data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemEventProcessStaging TO OpsMgrWriter
GO
 
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemGetDailyAggregationDate')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemGetDailyAggregationDate AS RETURN 1')
    END
GO
ALTER PROCEDURE [dbo].[AemGetDailyAggregationDate]
   @InDate datetime
  ,@OutDate datetime out
AS
BEGIN
    
    SET NOCOUNT ON
  
    SET @OutDate = CAST(CONVERT(char(8), @InDate, 112) AS DateTime)
    RETURN 1
END
GO
GRANT EXECUTE ON AemGetDailyAggregationDate TO OpsMgrWriter
GO
GRANT EXECUTE ON AemGetDailyAggregationDate TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemGroom')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemGroom AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemGroom
   @DatasetId   uniqueidentifier
  ,@AggregationTypeId tinyint
  ,@TableGuid uniqueidentifier
  ,@CutoffDateTime datetime
  ,@MaxRowsToGroom int
  ,@RowsDeleted int OUTPUT
AS
BEGIN
  SET NOCOUNT ON
  IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
  BEGIN
      RETURN
  END
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(4000)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(4000)
  SET @ErrorInd = 0
  
  DECLARE
     @TableName sysname
    ,@Statement nvarchar(max)
    ,@DebugLevel tinyint
    ,@SchemaName sysname
  
  BEGIN TRY
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    -- there are no dependent tables in Aem data set
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 0)
    
    SET @Statement = 'DELETE TOP (' + CAST(@MaxRowsToGroom AS varchar(15)) + ')'
                   + ' FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @CutoffDateTime, 120) + ''', 120))'
    EXECUTE (@Statement)
    SET @RowsDeleted = @@ROWCOUNT
    IF (@AggregationTypeId = 30)
    BEGIN
        SET @Statement = 'DELETE TOP (' + CAST(@MaxRowsToGroom AS varchar(15)) + ')'
                   + ' FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME('CMAemApplicationDaily' + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', ''))
                   + ' WHERE ([DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @CutoffDateTime, 120) + ''', 120))'
        EXECUTE (@Statement)
        SET @RowsDeleted = @@ROWCOUNT + @RowsDeleted
        SET @Statement = 'DELETE TOP (' + CAST(@MaxRowsToGroom AS varchar(15)) + ')'
                   + ' FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME('CMAemErrorGroupDaily' + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', ''))
                   + ' WHERE ([DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @CutoffDateTime, 120) + ''', 120))'
        EXECUTE (@Statement)
        SET @RowsDeleted = @@ROWCOUNT + @RowsDeleted
    END
    -- groom dynamic dimensions
    DECLARE @MaxDataAgeDays int
    
    SELECT @MaxDataAgeDays = MAX(MaxDataAgeDays)
    FROM StandardDatasetAggregation
    WHERE (DatasetId = @DatasetId)
    DELETE aseg
    FROM AemSystemErrorGroup aseg
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    DELETE au
    FROM AemUser au
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    DELETE ac
    FROM AemComputer ac
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    
    DELETE aeg
    FROM AemErrorGroup aeg
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    
    DELETE aa
    FROM AemApplication aa
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
    
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      SET @DebugMessageText = N'Failed to groom data for Aem data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
  
  RETURN @RowsDeleted
END
GO
GRANT EXECUTE ON AemGroom TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemManagedEntityInsert')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemManagedEntityInsert AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemManagedEntityInsert
   @ManagementGroupId   uniqueidentifier
  ,@DatasetId           uniqueidentifier
  ,@DataXml             ntext
AS
BEGIN
  SET NOCOUNT ON
  
  DECLARE @ManagementGroupRowId int
  
  -- check management group permissions
  SELECT @ManagementGroupRowId = ManagementGroupRowId
  FROM vManagementGroup
  WHERE (ManagementGroupGuid = @ManagementGroupId)
    AND (WriterLoginName = SUSER_NAME())
  IF (@ManagementGroupRowId IS NULL)
  BEGIN
    RAISERROR(777970003, 16, 1)
    RETURN -1
  END
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  DECLARE
     @ExecResult int
    ,@XmlDocHandle int
    ,@ResultingState int
  
  SET @ResultingState = 1
  
  BEGIN TRY
    EXEC @ExecResult = sp_xml_preparedocument @XmlDocHandle OUTPUT, @DataXml
    IF @ExecResult &lt;&gt; 0 RAISERROR(777971000, 16, 1, 'CM', @ExecResult)
    
    CREATE TABLE #Temp(
        ErrorGroupManagedEntityId   uniqueidentifier
      , BucketId                    bigint
      , BucketTableId               bigint
    )
    
    INSERT AemManagedEntityStage (
           DatasetId
          ,ApplicationManagedEntityId    
          ,ApplicationName               
          ,ApplicationVersion            
          ,CompanyName                   
          ,FriendlyApplicationName       
          ,ErrorGroupManagedEntityId     
          ,BucketType                    
          ,Parameter0                    
          ,Parameter1                    
          ,Parameter2                    
          ,Parameter3                    
          ,Parameter4                    
          ,Parameter5                    
          ,Parameter6                    
          ,Parameter7                    
          ,Parameter8                    
          ,Parameter9                    
          ,Parameter10                   
          ,SelectedSolutionResponseType  
          ,SelectedCollectionResponseType
          ,MicrosoftResponseUrl 
          ,BucketId
          ,BucketTableId
    )
      SELECT 
           @DatasetId
          ,xml.ApplicationManagedEntityId    
          ,xml.ApplicationName               
          ,xml.ApplicationVersion            
          ,xml.CompanyName                   
          ,xml.FriendlyApplicationName       
          ,xml.ErrorGroupManagedEntityId     
          ,xml.BucketType                    
          ,xml.Parameter0           
          ,xml.Parameter1                    
          ,xml.Parameter2                    
          ,xml.Parameter3                    
          ,xml.Parameter4                    
          ,xml.Parameter5                    
          ,xml.Parameter6                    
          ,xml.Parameter7                    
          ,xml.Parameter8                    
          ,xml.Parameter9                    
          ,xml.Parameter10                   
          ,xml.SelectedSolutionResponseType  
          ,xml.SelectedCollectionResponseType
          ,xml.MicrosoftResponseUrl          
          ,NULL
          ,NULL
    FROM OPENXML(@XmlDocHandle, 'Root/Item', 2) WITH (
       ApplicationManagedEntityId           uniqueidentifier  
      ,ApplicationName                      nvarchar(256)     
      ,ApplicationVersion                   nvarchar(256)
      ,CompanyName                          nvarchar(256)     
      ,FriendlyApplicationName              nvarchar(256)
      ,ErrorGroupManagedEntityId            uniqueidentifier  
      ,BucketType                           nvarchar(10)     
      ,Parameter0                           nvarchar(256)       
      ,Parameter1                           nvarchar(256)       
      ,Parameter2                           nvarchar(256)       
      ,Parameter3                           nvarchar(256)       
      ,Parameter4                           nvarchar(256)       
      ,Parameter5                           nvarchar(256)       
      ,Parameter6                           nvarchar(256)       
      ,Parameter7                           nvarchar(256)       
      ,Parameter8                           nvarchar(256)       
      ,Parameter9                           nvarchar(256)       
      ,Parameter10                          nvarchar(256)
      ,SelectedSolutionResponseType         nvarchar(16)
      ,SelectedCollectionResponseType       nvarchar(16)
      ,MicrosoftResponseUrl                 nvarchar(256)) xml
    INSERT INTO #Temp(ErrorGroupManagedEntityId, BucketId, BucketTableId)
      SELECT 
          xml.ErrorGroupManagedEntityId 
        , xml.BucketId
        , xml.BucketTableId
      FROM OPENXML(@XmlDocHandle, 'Root/Item', 2) WITH (
          ErrorGroupManagedEntityId            uniqueidentifier  
        , BucketId	                           nvarchar(16)
        , BucketTableId                        nvarchar(16)) xml
    UPDATE ames
    SET ames.BucketId = CONVERT(BIGINT, temp.BucketId)
    FROM AemManagedEntityStage ames
      JOIN #Temp temp ON temp.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId
    WHERE ISNUMERIC(temp.BucketId) = 1
    UPDATE ames
    SET ames.BucketTableId = CONVERT(BIGINT, temp.BucketTableId)
    FROM AemManagedEntityStage ames
      JOIN #Temp temp ON temp.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId
    WHERE ISNUMERIC(temp.BucketTableId) = 1
      
    -- indicate data was written to staging - it is Ok to Ack the workflow
    SET @ResultingState = 10
      
    EXEC StandardDatasetMaintenance @DatasetId
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  IF (@XmlDocHandle IS NOT NULL)
    EXEC sp_xml_removedocument @XmlDocHandle
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, @ResultingState
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemManagedEntityInsert TO OpsMgrWriter
GO
 
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemManagedEntityProcessStaging')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemManagedEntityProcessStaging AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemManagedEntityProcessStaging
   @DatasetId           uniqueidentifier
AS
BEGIN
  SET NOCOUNT ON
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  sysname
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  BEGIN TRY
    DECLARE
       @InsertStartedDateTime datetime
      ,@Statement nvarchar(max)
      ,@ExecResult int
      ,@DebugLevel int
      ,@LockResourceName sysname
      ,@MessageText nvarchar(max)
      ,@OperationDurationMs bigint
      ,@SchemaName sysname
     
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    BEGIN TRAN
    
    IF (@DebugLevel &gt; 3)
    BEGIN
      SELECT @MessageText = 'Starting to insert ' + CAST(COUNT(*) AS varchar(30)) + ' managed entity data'
      FROM AemManagedEntityStage
      
      SET @InsertStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
    END
    -- *****************************************************
    -- update non-key properties of ME(s) we already know
    -- start with AemApplication 
    UPDATE AemApplication 
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemApplication aa, AemManagedEntityStage ames
    WHERE aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId
    UPDATE AemApplication 
    SET CompanyName = ames.CompanyName
    FROM AemApplication aa, AemManagedEntityStage ames
    WHERE aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId AND
        ames.CompanyName IS NOT NULL AND
        len(ames.CompanyName) &gt; 0
    UPDATE AemApplication 
    SET FriendlyApplicationName = ames.FriendlyApplicationName
    FROM AemApplication aa, AemManagedEntityStage ames
    WHERE aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId AND
        ames.FriendlyApplicationName IS NOT NULL AND
        len(ames.FriendlyApplicationName) &gt; 0
    -- update AemErrorGroup table with entries that already exist
    UPDATE AemErrorGroup 
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId
    UPDATE AemErrorGroup 
    SET SelectedSolutionResponseType = ames.SelectedSolutionResponseType
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.SelectedSolutionResponseType IS NOT NULL AND
        len(ames.SelectedSolutionResponseType) &gt; 0
    UPDATE AemErrorGroup 
    SET SelectedCollectionResponseType = ames.SelectedCollectionResponseType
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.SelectedCollectionResponseType IS NOT NULL AND
        len(ames.SelectedCollectionResponseType) &gt; 0
    UPDATE AemErrorGroup
    SET BucketId = ames.BucketId
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.BucketId IS NOT NULL AND
        ames.BucketId &gt; 0
    UPDATE AemErrorGroup
    SET BucketTableId = ames.BucketTableId
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.BucketTableId IS NOT NULL AND
        ames.BucketTableId &gt; 0
    UPDATE AemErrorGroup 
    SET MicrosoftResponseUrl = ames.MicrosoftResponseUrl
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.MicrosoftResponseUrl IS NOT NULL AND
        len(ames.MicrosoftResponseUrl) &gt; 0
    
    -- *****************************************************
    -- now, we remove duplicate entries of Application from staging table and insert into AemApplication
    -- then, we remove duplicate entries of Error Groups from staging table and insert into AemErrorGroup
    -- finally, we insert blue/system error groups
    -- *****************************************************
    -- let's remove duplicate entries for AemApplication
    CREATE TABLE #AemTempApplication (
       RowId                                int               NOT NULL IDENTITY(1, 1)                             
      ,DatasetId                            uniqueidentifier  NOT NULL
      
      ,ApplicationManagedEntityId           uniqueidentifier  NOT NULL
      ,ApplicationName                      nvarchar(256)     NOT NULL
      ,ApplicationVersion                   nvarchar(256)
      ,CompanyName                          nvarchar(256)     
      ,FriendlyApplicationName              nvarchar(256)     
    )
    INSERT #AemTempApplication (
        DatasetId
       ,ApplicationManagedEntityId
       ,ApplicationName
       ,ApplicationVersion
       ,CompanyName
       ,FriendlyApplicationName
    )
        SELECT 
            DatasetId
           ,ApplicationManagedEntityId
           ,ApplicationName
           ,ApplicationVersion
           ,CompanyName
           ,FriendlyApplicationName
        FROM AemManagedEntityStage 
        WHERE BucketType &lt;&gt; 'Blue'
    -- remove application entries we already know about
    DELETE #AemTempApplication
    WHERE ApplicationManagedEntityId IN (SELECT ApplicationManagedEntityId FROM AemApplication)
    
    CREATE TABLE #TempAppRowIds(RowId1 int, RowId2 int)
    INSERT #TempAppRowIds(RowId1, RowId2)
        SELECT t1.RowId, t2.RowId FROM #AemTempApplication t1, #AemTempApplication t2
        WHERE t1.RowId &lt; t2.RowId 
            AND t1.ApplicationManagedEntityId = t2.ApplicationManagedEntityId
    DELETE #TempAppRowIds
    WHERE RowId1 IN (SELECT RowId2 FROM #TempAppRowIds);
    WITH NewData(RowId, CompanyName)
    AS (
	    SELECT atmes1.RowId, atmes2.CompanyName
        FROM #AemTempApplication atmes1, #AemTempApplication atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempAppRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempAppRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.CompanyName IS NOT NULL
            AND len(atmes2.CompanyName) &gt; 0
        )
    UPDATE #AemTempApplication
    SET CompanyName = nd.CompanyName
    FROM #AemTempApplication AS ata
    JOIN NewData AS nd ON ata.RowId = nd.RowId;
    WITH NewData(RowId, FriendlyApplicationName)
    AS (
	    SELECT atmes1.RowId, atmes2.FriendlyApplicationName
        FROM #AemTempApplication atmes1, #AemTempApplication atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempAppRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempAppRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.FriendlyApplicationName IS NOT NULL
            AND len(atmes2.FriendlyApplicationName) &gt; 0
        )
    UPDATE #AemTempApplication
    SET FriendlyApplicationName = nd.FriendlyApplicationName
    FROM #AemTempApplication AS ata
    JOIN NewData AS nd ON ata.RowId = nd.RowId;
    DELETE #AemTempApplication
    WHERE RowId in (SELECT RowId2 from #TempAppRowIds);
    -- #AemTempApplication contains non-duplicated entries
    -- now, we do the insertion into AemApplication
    INSERT AemApplication (
       ApplicationManagedEntityId
      ,ApplicationName
      ,ApplicationVersion
      ,CompanyName
      ,FriendlyApplicationName
    )
      SELECT 
           ata.ApplicationManagedEntityId
          ,ata.ApplicationName
          ,ata.ApplicationVersion
          ,ata.CompanyName
          ,ata.FriendlyApplicationName
      FROM #AemTempApplication ata
    -- *****************************************************
    -- Now, we insert values into AemError Group, starting removal of duplicate entries from staging table 1st
    -- remove duplicate error group entries: 
    CREATE TABLE #AemTempErrorGroup (
       RowId                                int               NOT NULL IDENTITY(1, 1)                             
      ,DatasetId                            uniqueidentifier  NOT NULL
      
      ,ApplicationManagedEntityId           uniqueidentifier  NOT NULL
      ,ErrorGroupManagedEntityId            uniqueidentifier  NOT NULL
      ,BucketType                           nvarchar(10)     
      ,Parameter0                           nvarchar(256)       
      ,Parameter1                           nvarchar(256)       
      ,Parameter2                           nvarchar(256)       
      ,Parameter3                           nvarchar(256)       
      ,Parameter4                           nvarchar(256)       
      ,Parameter5                           nvarchar(256)       
      ,Parameter6                           nvarchar(256)       
      ,Parameter7                           nvarchar(256)       
      ,Parameter8                           nvarchar(256)       
      ,Parameter9                           nvarchar(256)       
      ,Parameter10                          nvarchar(256)
      ,SelectedSolutionResponseType         nvarchar(16)
      ,SelectedCollectionResponseType       nvarchar(16)
      ,BucketId                             bigint
      ,BucketTableId						bigint
      ,MicrosoftResponseUrl                 nvarchar(256)
    )
    INSERT #AemTempErrorGroup (
           DatasetId
          ,ApplicationManagedEntityId
          ,ErrorGroupManagedEntityId     
          ,BucketType                    
          ,Parameter0                    
          ,Parameter1                    
          ,Parameter2                    
          ,Parameter3                    
          ,Parameter4                    
          ,Parameter5                    
          ,Parameter6                    
          ,Parameter7                    
          ,Parameter8                    
          ,Parameter9                    
          ,Parameter10                   
          ,SelectedSolutionResponseType  
          ,SelectedCollectionResponseType
          ,BucketId
          ,BucketTableId
          ,MicrosoftResponseUrl          
    )
        SELECT 
           DatasetId
          ,ApplicationManagedEntityId
          ,ErrorGroupManagedEntityId     
          ,BucketType                    
          ,Parameter0                    
          ,Parameter1                    
          ,Parameter2                    
          ,Parameter3                    
          ,Parameter4                    
          ,Parameter5                    
          ,Parameter6                    
          ,Parameter7                    
          ,Parameter8                    
          ,Parameter9                    
          ,Parameter10                   
          ,SelectedSolutionResponseType  
          ,SelectedCollectionResponseType
          ,BucketId
          ,BucketTableId
          ,MicrosoftResponseUrl          
        FROM AemManagedEntityStage
        WHERE BucketType &lt;&gt; 'Blue'
    -- delete error groups we already know about
    DELETE #AemTempErrorGroup
    WHERE ErrorGroupManagedEntityId IN (SELECT ErrorGroupManagedEntityId FROM AemErrorGroup)
    CREATE TABLE #TempErrorGroupRowIds(RowId1 int, RowId2 int)
    
    INSERT #TempErrorGroupRowIds(RowId1, RowId2)
        SELECT t1.RowId, t2.RowId FROM #AemTempErrorGroup t1, #AemTempErrorGroup t2
        WHERE t1.RowId &lt; t2.RowId 
            AND t1.ErrorGroupManagedEntityId = t2.ErrorGroupManagedEntityId
            
    DELETE #TempErrorGroupRowIds
    WHERE RowId1 IN (SELECT RowId2 FROM #TempErrorGroupRowIds);
    WITH NewData(RowId, SelectedSolutionResponseType)
    AS (
	    SELECT atmes1.RowId, atmes2.SelectedSolutionResponseType
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.SelectedSolutionResponseType IS NOT NULL
            AND len(atmes2.SelectedSolutionResponseType) &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET SelectedSolutionResponseType = nd.SelectedSolutionResponseType
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    WITH NewData(RowId, SelectedCollectionResponseType)
    AS (
	    SELECT atmes1.RowId, atmes2.SelectedCollectionResponseType
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.SelectedCollectionResponseType IS NOT NULL
            AND len(atmes2.SelectedCollectionResponseType) &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET SelectedCollectionResponseType = nd.SelectedCollectionResponseType
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    WITH NewData(RowId, BucketId)
    AS (
	    SELECT atmes1.RowId, atmes2.BucketId
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.BucketId IS NOT NULL
            AND atmes2.BucketId &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET BucketId = nd.BucketId
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    WITH NewData(RowId, BucketTableId)
    AS (
	    SELECT atmes1.RowId, atmes2.BucketTableId
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.BucketTableId IS NOT NULL
            AND atmes2.BucketTableId &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET BucketTableId = nd.BucketTableId
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    
    WITH NewData(RowId, MicrosoftResponseUrl)
    AS (
	    SELECT atmes1.RowId, atmes2.MicrosoftResponseUrl
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.MicrosoftResponseUrl IS NOT NULL
            AND len(atmes2.MicrosoftResponseUrl) &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET MicrosoftResponseUrl = nd.MicrosoftResponseUrl
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    
    DELETE #AemTempErrorGroup
    WHERE RowId in (SELECT RowId2 from #TempErrorGroupRowIds)
    -- #AemTempErrorGroup contains non-duplicated entries
    -- now, we do the insertion into AemErrorGroup
    INSERT AemErrorGroup (
        ApplicationRowId
       ,ErrorGroupManagedEntityId        
       ,BucketType                       
       ,Parameter0                       
       ,Parameter1                       
       ,Parameter2                       
       ,Parameter3                       
       ,Parameter4                       
       ,Parameter5                       
       ,Parameter6                       
       ,Parameter7                       
       ,Parameter8                       
       ,Parameter9                       
       ,Parameter10                      
       ,SelectedSolutionResponseType     
       ,SelectedCollectionResponseType   
       ,BucketId
       ,BucketTableId
       ,MicrosoftResponseUrl             
    )
      SELECT 
        aa.ApplicationRowId
       ,ames.ErrorGroupManagedEntityId        
       ,ames.BucketType                       
       ,ames.Parameter0                       
       ,ames.Parameter1                       
       ,ames.Parameter2                       
       ,ames.Parameter3                       
       ,ames.Parameter4                       
       ,ames.Parameter5                       
       ,ames.Parameter6                       
       ,ames.Parameter7                       
       ,ames.Parameter8                       
       ,ames.Parameter9                       
       ,ames.Parameter10                      
       ,ames.SelectedSolutionResponseType     
       ,ames.SelectedCollectionResponseType   
       ,ames.BucketId
       ,ames.BucketTableId
       ,ames.MicrosoftResponseUrl    
      FROM #AemTempErrorGroup ames
      JOIN AemApplication aa ON (aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId)
      WHERE ames.BucketType &lt;&gt; 'Blue'
    -- *****************************************************
    -- inserting blue error groups
    INSERT AemSystemErrorGroup (
        ErrorGroupManagedEntityId                           
       ,MicrosoftResponseUrl                
    )
      SELECT 
         ErrorGroupManagedEntityId        
        ,MicrosoftResponseUrl
      FROM AemManagedEntityStage ames
      WHERE ames.BucketType = 'Blue'
       
    -- *****************************************************
    -- delete from staging table managed entities we inserted
    DELETE AemManagedEntityStage 
    WHERE 
        BucketType &lt;&gt; 'Blue'
        AND ErrorGroupManagedEntityId IN (SELECT ErrorGroupManagedEntityId 
                        FROM AemErrorGroup)
        AND ApplicationManagedEntityId IN (SELECT ApplicationManagedEntityId
                        FROM AemApplication)
    DELETE AemManagedEntityStage
    WHERE 
        BucketType = 'Blue'
        AND ErrorGroupManagedEntityId IN (SELECT ErrorGroupManagedEntityId
                        FROM AemSystemErrorGroup)
    IF (@DebugLevel &gt; 3)
    BEGIN
      SET @MessageText = 'Finished inserting AEM managed entity data'
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @InsertStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
        ,@OperationDurationMs = @OperationDurationMs
    END
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      
      SET @DebugMessageText = N'Failed to insert data into AEM managed entity data. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemManagedEntityProcessStaging TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemProcessStaging')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemProcessStaging AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemProcessStaging
   @DatasetId           uniqueidentifier
AS
BEGIN
  IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
  BEGIN
      RETURN
  END
  SET NOCOUNT ON
  -- move MEs (error groups and applications from staging table(s)) to domain tables
  EXEC dbo.AemManagedEntityProcessStaging @DatasetId
  -- move event data from staging to datawarehouse tables
  EXEC dbo.AemEventProcessStaging @DatasetId 
  
END
GO
GRANT EXECUTE ON AemProcessStaging TO OpsMgrWriter
GO
  
                    SET NOCOUNT ON 
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA ='Aem')
BEGIN
    BEGIN TRAN
        DECLARE @SourceTableName sysname
        DECLARE @DestinationTableName sysname
        -- transfering raw data
        SELECT @SourceTableName = '[AEM].AemRaw_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 0
            AND sd.SchemaName = 'AEM'
        SELECT @DestinationTableName = '[CM].CMAemRaw_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 0
            AND sd.SchemaName = 'CM'
        EXECUTE ('INSERT INTO ' + @SourceTableName + ' ([DateTime], ErrorGroupRowId, CrashId, AemUserRowId, AemComputerRowId) ' + 
            ' SELECT [DateTime], ErrorGroupRowId, CrashId, AemUserRowId, AemComputerRowId FROM ' + @DestinationTableName +
                ' WHERE CrashId NOT IN (SELECT CrashId FROM ' + @SourceTableName + ')')
        -- setting dirty bit to get aggregations redone as raw data has been transferred
        DECLARE @DatasetId uniqueidentifier
        
        SELECT @DatasetId = sd.DatasetId FROM StandardDataset sd WHERE sd.SchemaName = 'CM'
        DECLARE @Statement nvarchar(4000)
        
        UPDATE sdah
        SET DirtyInd = 1
          ,DataLastReceivedDateTime = GETUTCDATE()
        FROM StandardDatasetAggregationHistory sdah
          JOIN StandardDatasetAggregation sda ON (sdah.DatasetId = sda.DatasetId AND sdah.AggregationTypeId = sda.AggregationTypeId)
          CROSS JOIN [Aem].vAemRaw e
        WHERE (sdah.DatasetId = @DatasetId)
          AND (sdah.DirtyInd = 0)
          AND (e.[DateTime] &gt;= sdah.AggregationDateTime)
          AND (e.[DateTime] &lt; DATEADD(minute, sda.AggregationIntervalDurationMinutes, sdah.AggregationDateTime))
        -- deleting old data set aggregations
        SELECT @SourceTableName = '[AEM].AemErrorGroupDaily_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 30
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        SELECT @SourceTableName = '[AEM].AemApplicationDaily_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 30
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        SELECT @SourceTableName = '[AEM].AemDaily_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 30
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        SELECT @SourceTableName = '[AEM].AemRaw_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 0
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        
        UPDATE sdas
        SET MaxTableRowCount = 10000000
        FROM StandardDatasetAggregationStorage sdas
        WHERE DatasetId = @DatasetId
    COMMIT
END
GO
                    </Install><Uninstall /><Upgrade>
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemApplication' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE [dbo].AemApplication
    (  
        ApplicationRowId                        int                 NOT NULL    IDENTITY(1, 1)
       ,ApplicationManagedEntityId              uniqueidentifier    NOT NULL
       ,ApplicationName                         nvarchar(256)       NOT NULL
       ,ApplicationVersion                      nvarchar(256)       NOT NULL
       ,CompanyName                             nvarchar(256)
       ,FriendlyApplicationName                 nvarchar(256)        
       ,LastReceivedDateTime                    smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemApplication'
        ,@DatasetId = '$Config/DatasetId$'
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemApplication
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemApplication')
BEGIN
    ALTER TABLE [dbo].AemApplication
        ADD CONSTRAINT PK_AemApplication PRIMARY KEY CLUSTERED (ApplicationRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemApplication_ApplicationRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemApplication_ApplicationRowId')
BEGIN
    CREATE INDEX IX_AemApplication_ApplicationRowId ON [dbo].AemApplication(ApplicationRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemApplication_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemApplication_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemApplication_LastReceivedDateTime ON [dbo].AemApplication(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemApplication TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemApplication TO OpsMgrReader
GO
 
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemComputer' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemComputer
    (
        AemComputerRowId                            int                 NOT NULL    IDENTITY(1, 1)
        
       ,AemComputerName                             nvarchar(256)       NOT NULL
       ,LastReceivedDateTime                        smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )   
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemComputer'
        ,@DatasetId = '$Config/DatasetId$'
    
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemComputer
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemComputer')
BEGIN
    ALTER TABLE [dbo].AemComputer
        ADD CONSTRAINT PK_AemComputer PRIMARY KEY CLUSTERED (AemComputerRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemComputer_AemComputerRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemComputer_AemComputerRowId')
BEGIN
    CREATE INDEX IX_AemComputer_AemComputerRowId ON [dbo].AemComputer(AemComputerRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemComputer_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemComputer_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemComputer_LastReceivedDateTime ON [dbo].AemComputer(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON AemComputer TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemComputer TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemErrorGroup
    (   
        ErrorGroupRowId                     int                 NOT NULL    IDENTITY(1, 1)
       ,ApplicationRowId                    int                 NOT NULL
                                
       ,ErrorGroupManagedEntityId           uniqueidentifier    NOT NULL
       ,BucketType                          nvarchar(10)        NOT NULL
       ,Parameter0                          nvarchar(256)       
       ,Parameter1                          nvarchar(256)       
       ,Parameter2                          nvarchar(256)       
       ,Parameter3                          nvarchar(256)       
       ,Parameter4                          nvarchar(256)       
       ,Parameter5                          nvarchar(256)       
       ,Parameter6                          nvarchar(256)       
       ,Parameter7                          nvarchar(256)       
       ,Parameter8                          nvarchar(256)       
       ,Parameter9                          nvarchar(256)       
       ,Parameter10                         nvarchar(256)
       
       ,SelectedSolutionResponseType        nvarchar(16)
       ,SelectedCollectionResponseType      nvarchar(16)
       
       ,MicrosoftResponseUrl                nvarchar(256)
       /*
       ,MicrosoftBucketId                   int
       ,MicrosoftBucketTableId              int
       ,MicrosoftDisplayType                nvarchar(256)
       ,MicrosoftGetCurrentOfficeDocument   nvarchar(3) 
       ,MicrosoftGetFiles                   nvarchar(4096)
       ,MicrosoftGetFileVersions            nvarchar(4096)
       ,MicrosoftWqlQueries                 nvarchar(4096)
       ,MicrosoftGetMemoryDump              nvarchar(3)
       ,MicrosoftGetRegistryKeys            nvarchar(4096)
       ,MicrosoftGetRegistryTrees           nvarchar(4096)
       ,CustomResponseUrl                   nvarchar(256)
       ,CustomGetCurrentOfficeDocument      bit 
       ,CustomGetFiles                      nvarchar(4096)
       ,CustomGetFileVersions               nvarchar(4096)
       ,CustomWqlQueries                    nvarchar(4096)
       ,CustomGetMemoryDump                 bit
       ,CustomGetRegistryKeys               nvarchar(4096)
       ,CustomGetRegistryTrees              nvarchar(4096)
       */
       ,LastReceivedDateTime                smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )       
    
    EXEC DomainTableRegisterIndexOptimization
       @TableName = 'AemErrorGroup'
      ,@DatasetId = '$Config/DatasetId$'
END
GO
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'ErrorGroupId')
BEGIN
  ALTER TABLE dbo.AemErrorGroup
    DROP COLUMN ErrorGroupId   
END
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketId')
BEGIN
  ALTER TABLE dbo.AemErrorGroup
    ADD BucketId bigint  
END
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemErrorGroup' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketTableId')
BEGIN
  ALTER TABLE dbo.AemErrorGroup
    ADD BucketTableId bigint
END
------------------------------------------------------------------------------------------------
-- PK_AemErrorGroup
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemErrorGroup')
BEGIN
    ALTER TABLE [dbo].AemErrorGroup
        ADD CONSTRAINT PK_AemErrorGroup PRIMARY KEY CLUSTERED (ErrorGroupRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_ErrorGroupManagedEntityId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_ErrorGroupManagedEntityId')
BEGIN
    CREATE INDEX IX_AemErrorGroup_ErrorGroupManagedEntityId ON [dbo].AemErrorGroup(ErrorGroupManagedEntityId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_ErrorGroupRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_ErrorGroupRowId')
BEGIN
    CREATE INDEX IX_AemErrorGroup_ErrorGroupRowId ON [dbo].AemErrorGroup(ErrorGroupRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_ApplicationRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_ApplicationRowId')
BEGIN
    CREATE INDEX IX_AemErrorGroup_ApplicationRowId ON [dbo].AemErrorGroup(ApplicationRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_MicrosoftResponseUrl
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_MicrosoftResponseUrl')
BEGIN
    CREATE INDEX IX_AemErrorGroup_MicrosoftResponseUrl ON [dbo].AemErrorGroup(MicrosoftResponseUrl)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemErrorGroup_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemErrorGroup_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemErrorGroup_LastReceivedDateTime ON [dbo].AemErrorGroup(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemErrorGroup TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemErrorGroup TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemEventStage' AND TABLE_SCHEMA = 'dbo')
BEGIN
  EXECUTE('CREATE TABLE dbo.AemEventStage (                               
       DatasetId                      uniqueidentifier  NOT NULL
      ,[DateTime]                     datetime          NOT NULL
      ,CrashId                        uniqueidentifier  NOT NULL
      ,ErrorGroupManagedEntityId      uniqueidentifier  NOT NULL
      ,AemComputerName                nvarchar(256)     
      ,AemUserName                    nvarchar(256)     
      ,CrashTime                      as [DateTime]
      ,DWCreatedDataTime              datetime          NOT NULL DEFAULT (GETUTCDATE())
)')
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemEventStage TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemEventStage TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo')
BEGIN
  CREATE TABLE dbo.AemManagedEntityStage (                               
       DatasetId                            uniqueidentifier  NOT NULL
      
      ,ApplicationManagedEntityId           uniqueidentifier  NOT NULL
      ,ApplicationName                      nvarchar(256)     NOT NULL
      ,ApplicationVersion                   nvarchar(256)
      ,CompanyName                          nvarchar(256)     
      ,FriendlyApplicationName              nvarchar(256)     
      
      ,ErrorGroupManagedEntityId            uniqueidentifier  NOT NULL
      ,BucketType                           nvarchar(10)     
      ,Parameter0                           nvarchar(256)       
      ,Parameter1                           nvarchar(256)       
      ,Parameter2                           nvarchar(256)       
      ,Parameter3                           nvarchar(256)       
      ,Parameter4                           nvarchar(256)       
      ,Parameter5                           nvarchar(256)       
      ,Parameter6                           nvarchar(256)       
      ,Parameter7                           nvarchar(256)       
      ,Parameter8                           nvarchar(256)       
      ,Parameter9                           nvarchar(256)       
      ,Parameter10                          nvarchar(256)
      ,SelectedSolutionResponseType         nvarchar(16)
      ,SelectedCollectionResponseType       nvarchar(16)
      
      ,MicrosoftResponseUrl                 nvarchar(256)
      ,DWCreatedDataTime                    datetime          NOT NULL DEFAULT (GETUTCDATE())
    )
END
GO
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'ErrorGroupId')
BEGIN
  ALTER TABLE dbo.AemManagedEntityStage
    DROP COLUMN ErrorGroupId 
END
GO
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketId')
BEGIN
  ALTER TABLE dbo.AemManagedEntityStage
    ADD BucketId bigint
END
GO
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AemManagedEntityStage' AND TABLE_SCHEMA = 'dbo' AND COLUMN_NAME = 'BucketTableId')
BEGIN
  ALTER TABLE dbo.AemManagedEntityStage
    ADD BucketTableId bigint
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemManagedEntityStage TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemManagedEntityStage TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemSystemErrorGroup' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemSystemErrorGroup
    (   
        ErrorGroupRowId                     int                 NOT NULL    IDENTITY(1, 1)
       ,ErrorGroupManagedEntityId           uniqueidentifier    NOT NULL
                                
       ,BucketType                          nvarchar(4)         NOT NULL    DEFAULT('Blue')
       ,CrashTime                           datetime            
       ,AemUserRowId                        int                 
       ,AemComputerRowId                    int                 
    --   ,CabFileName                         nvarchar(1024)      
       
       ,MicrosoftResponseUrl                nvarchar(256)
        /*
       ,MicrosoftSolutionId                 int
       ,MicrosoftGenericSolutionId          int
       ,MicrosoftSolution                   nvarchar(256)
       ,MicrosoftGenericSolution            nvarchar(256)
       ,MicrosoftResponseTypeId             int
        */
       ,LastReceivedDateTime                smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemSystemErrorGroup'
        ,@DatasetId = '$Config/DatasetId$'
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemSystemErrorGroup
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemSystemErrorGroup')
BEGIN
    ALTER TABLE [dbo].AemSystemErrorGroup
        ADD CONSTRAINT PK_AemSystemErrorGroup PRIMARY KEY CLUSTERED (ErrorGroupRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemSystemErrorGroup_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemSystemErrorGroup_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemSystemErrorGroup_LastReceivedDateTime ON [dbo].AemSystemErrorGroup(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemSystemErrorGroup TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemSystemErrorGroup TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AemUser' AND TABLE_SCHEMA = 'dbo')
BEGIN
    CREATE TABLE dbo.AemUser
    (
        AemUserRowId                           int                 NOT NULL    IDENTITY(1, 1)
        
       ,AemUserName                            nvarchar(256)       NOT NULL
       ,LastReceivedDateTime                   smalldatetime       NOT NULL    DEFAULT (GETUTCDATE())
    )
    EXEC DomainTableRegisterIndexOptimization
         @TableName = 'AemUser'
        ,@DatasetId = '$Config/DatasetId$'
END
GO
------------------------------------------------------------------------------------------------
-- PK_AemUser
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'PK_AemUser')
BEGIN
    ALTER TABLE [dbo].AemUser
        ADD CONSTRAINT PK_AemUser PRIMARY KEY CLUSTERED (AemUserRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemUser_AemUserRowId
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemUser_AemUserRowId')
BEGIN
    CREATE INDEX IX_AemUser_AemUserRowId ON [dbo].AemUser(AemUserRowId)
END
GO
------------------------------------------------------------------------------------------------
-- IX_AemUser_LastReceivedDateTime
------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM SYSINDEXES WHERE [name] = 'IX_AemUser_LastReceivedDateTime')
BEGIN
    CREATE INDEX IX_AemUser_LastReceivedDateTime ON [dbo].AemUser(LastReceivedDateTime)
END
GO
------------------------------------------------------------------------------------------------
-- PERMISSIONS
------------------------------------------------------------------------------------------------
GRANT SELECT, INSERT, UPDATE, DELETE ON [dbo].AemUser TO OpsMgrWriter
GO
GRANT SELECT ON [dbo].AemUser TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemAggregate')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemAggregate AS RETURN 1')
    END
GO
ALTER PROCEDURE [dbo].[AemAggregate]
   @DatasetId   uniqueidentifier
  ,@AggregationTypeId int
  ,@InsertTableGuid varchar(256)
  ,@IntervalStartDateTime datetime
  ,@IntervalEndDateTime datetime
AS
BEGIN
  SET NOCOUNT ON
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(4000)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(4000)
  SET @ErrorInd = 0
  
  BEGIN TRY
  
    IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
    BEGIN
        RETURN
    END
  
    IF (@AggregationTypeId &lt;&gt; 30) RETURN
    DECLARE
       @Statement nvarchar(max)
      ,@DebugLevel tinyint
      ,@InsertTableName sysname
      ,@DebugMessage nvarchar(max)
      ,@AggregationStartDateTime datetime
      ,@CoverRawViewName sysname
      ,@SchemaName sysname
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    BEGIN TRAN
    
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Starting aggregation at main level of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      SET @AggregationStartDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
    SELECT @InsertTableName = QUOTENAME(@SchemaName) + '.' + BaseTableName + '_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = 30)
      AND (DependentTableInd = 0)
    SET @Statement = 'INSERT INTO ' + @InsertTableName + '([DateTime]) '
		+ 'VALUES('
		+ ' CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120)'
        + ')'
	EXECUTE(@Statement)
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Finished aggregation at main level of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      DECLARE @OperationDurationMs bigint
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @AggregationStartDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    SELECT @CoverRawViewName = QUOTENAME(@SchemaName) + '.v' + BaseTableName
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = 0)
      AND (DependentTableInd = 0)
    
    -- We'll first finish aggregations for error group, and then we'll start aggregations for application
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Starting error group aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      SET @AggregationStartDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
    SELECT @InsertTableName = QUOTENAME(@SchemaName) + '.CMAemErrorGroupDaily_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    
    CREATE TABLE #DailyErrorGroupAggregatedData
    (
         StartDateTime                   datetime
        ,EndDateTime                     datetime
        ,ErrorGroupRowId                 int
        ,CrashCount                      int
        ,UniqueUsersAffectedCount        int
        ,UniqueComputersAffectedCount    int
    )
    SET @Statement = 
      ' INSERT #DailyErrorGroupAggregatedData ('
    + '     StartDateTime'
    + '    ,EndDateTime'
    + '    ,ErrorGroupRowId'
    + '    ,CrashCount'
    + '    ,UniqueUsersAffectedCount'
    + '    ,UniqueComputersAffectedCount'
    + '    )'
    + '        SELECT'
    + '             CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120)'
    + '            ,CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120)'
    + '            ,v.ErrorGroupRowId'
    + '            ,COUNT(v.CrashId)'
    + '            ,COUNT(DISTINCT(v.AemUserRowId))'
    + '            ,COUNT(DISTINCT(v.AemComputerRowId))'
    + '        FROM CM.vCMAemRaw v'
    + '        WHERE (v.[DateTime] &gt;= CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120))'
    + '            AND (v.[DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120))'
    + '        GROUP BY v.ErrorGroupRowId'
    
    EXECUTE (@Statement)
	SET @Statement = 
        ' WITH NewData '
      + ' ( '
      + '    StartDateTime '
      + '   ,EndDateTime '
      + '   ,ErrorGroupRowId '
      + '   ,CrashCount '
      + '   ,UniqueUsersAffectedCount '
      + '   ,UniqueComputersAffectedCount '
      + ' ) '
      + ' AS '
      + ' ( '
      + '     SELECT '
      + '            StartDateTime '
      + '           ,EndDateTime '
      + '           ,ErrorGroupRowId '
      + '           ,CrashCount '
      + '           ,UniqueUsersAffectedCount '
      + '           ,UniqueComputersAffectedCount '
      + '     FROM #DailyErrorGroupAggregatedData '
      + ' ) '
	  + ' UPDATE i '
	  + ' SET i.CrashCount = nd.CrashCount '
      + '    ,i.UniqueUsersAffectedCount = nd.UniqueUsersAffectedCount '
      + '    ,i.UniqueComputersAffectedCount = nd.UniqueComputersAffectedCount '
      + '    ,i.[DateTime] = nd.StartDateTime '
      + ' FROM ' + @InsertTableName + ' i '
      + ' JOIN NewData AS nd ON nd.ErrorGroupRowId = i.ErrorGroupRowId '
      + ' WHERE (i.[DateTime] &gt;= nd.StartDateTime)'
      + '     AND (i.[DateTime] &lt; nd.EndDateTime)'
    EXECUTE (@Statement)
    SET @Statement =
        ' DELETE FROM #DailyErrorGroupAggregatedData '
      + ' WHERE 0 &lt;&gt; ('
      + '     SELECT COUNT(*) '
      + '     FROM ' + @InsertTableName + ' i '
      + '     WHERE i.[DateTime] = #DailyErrorGroupAggregatedData.StartDateTime '
      + '        AND i.ErrorGroupRowId = #DailyErrorGroupAggregatedData.ErrorGroupRowId '
      + ' ) '
    EXECUTE (@Statement)
    SET @Statement =
        'INSERT ' + @InsertTableName + ' ('
      + '    [DateTime]'
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupRowId'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ')'
      + '   SELECT'
      + '        degad.StartDateTime'
      + '       ,aeg.ApplicationRowId'
      + '       ,degad.ErrorGroupRowId'
      + '       ,degad.CrashCount'
      + '       ,degad.UniqueUsersAffectedCount'
      + '       ,degad.UniqueComputersAffectedCount'
      + '   FROM #DailyErrorGroupAggregatedData degad'
      + '   JOIN AemErrorGroup aeg ON (aeg.ErrorGroupRowId = degad.ErrorGroupRowId)'
    EXECUTE (@Statement)
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Finished error group aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @AggregationStartDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    
    -- start aggregation for application type, now that aggregation for error group is over
    SELECT @InsertTableName = QUOTENAME(@SchemaName) + '.CMAemApplicationDaily_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Starting application aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
    
    CREATE TABLE #DailyApplicationAggregatedData
    (
         StartDateTime                   datetime
        ,EndDateTime                     datetime
        ,ApplicationRowId                int
        ,ErrorGroupCount                 int
        ,CrashCount                      int
        ,UniqueUsersAffectedCount        int
        ,UniqueComputersAffectedCount    int
    )
    SET @Statement =
        'INSERT #DailyApplicationAggregatedData ('
      + '    StartDateTime'
      + '   ,EndDateTime'
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupCount'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ')'
      + '   SELECT'
      + '        CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120)'
      + '       ,CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120)'
      + '       ,aeg.ApplicationRowId'
      + '       ,COUNT(DISTINCT(v.ErrorGroupRowId))'
      + '       ,COUNT(DISTINCT(v.CrashId))'
      + '       ,COUNT(DISTINCT(v.AemUserRowId))'
      + '       ,COUNT(DISTINCT(v.AemComputerRowId))'
      + '   FROM AemErrorGroup aeg'
      + '   JOIN ' + @CoverRawViewName + ' v ON '
      + '       (v.ErrorGroupRowId = aeg.ErrorGroupRowId)'
      + '   WHERE (v.[DateTime] &gt;= CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''', 120))'
      + '       AND (v.[DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''', 120))'
      + '   GROUP BY aeg.ApplicationRowId'
    EXECUTE (@Statement)
	SET @Statement = 
        ' WITH NewData '
      + ' ( '
      + '    StartDateTime '
      + '   ,EndDateTime '
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupCount'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ' ) '
      + ' AS '
      + ' ( '
      + '     SELECT '
      + '            StartDateTime '
      + '           ,EndDateTime '
      + '           ,ApplicationRowId'
      + '           ,ErrorGroupCount'
      + '           ,CrashCount'
      + '           ,UniqueUsersAffectedCount'
      + '           ,UniqueComputersAffectedCount'
      + '     FROM #DailyApplicationAggregatedData '
      + ' ) '
	  + ' UPDATE i '
	  + ' SET i.ErrorGroupCount = nd.ErrorGroupCount '
	  + '    ,i.CrashCount = nd.CrashCount '
      + '    ,i.UniqueUsersAffectedCount = nd.UniqueUsersAffectedCount '
      + '    ,i.UniqueComputersAffectedCount = nd.UniqueComputersAffectedCount '
      + '    ,i.[DateTime] = nd.StartDateTime '
      + ' FROM ' + @InsertTableName + ' i '
      + ' JOIN NewData AS nd ON nd.ApplicationRowId = i.ApplicationRowId '
      + ' WHERE (i.[DateTime] &gt;= nd.StartDateTime)'
      + '     AND (i.[DateTime] &lt; nd.EndDateTime)'
    EXECUTE (@Statement)
    SET @Statement =
        ' DELETE FROM #DailyApplicationAggregatedData '
      + ' WHERE 0 &lt;&gt; ('
      + '     SELECT COUNT(*) '
      + '     FROM ' + @InsertTableName + ' i '
      + '     WHERE i.[DateTime] = #DailyApplicationAggregatedData.StartDateTime '
      + '        AND i.ApplicationRowId = #DailyApplicationAggregatedData.ApplicationRowId '
      + ' ) '
    EXECUTE (@Statement)
    SET @Statement =
        'INSERT ' + @InsertTableName + ' ('
      + '    [DateTime]'
      + '   ,ApplicationRowId'
      + '   ,ErrorGroupCount'
      + '   ,CrashCount'
      + '   ,UniqueUsersAffectedCount'
      + '   ,UniqueComputersAffectedCount'
      + ')'
      + '   SELECT'
      + '        daad.StartDateTime'
      + '       ,daad.ApplicationRowId'
      + '       ,daad.ErrorGroupCount'
      + '       ,daad.CrashCount'
      + '       ,daad.UniqueUsersAffectedCount'
      + '       ,daad.UniqueComputersAffectedCount'
      + '   FROM #DailyApplicationAggregatedData daad'
    EXECUTE (@Statement)
    IF (@DebugLevel &gt; 2)
    BEGIN
      SET @DebugMessage = 'Finished application aggregation of type ' + CAST(@AggregationTypeId AS varchar(10)) + ' for interval from '
                         + '''' + CONVERT(varchar(50), @IntervalStartDateTime, 120) + ''' UTC to '
                         + '''' + CONVERT(varchar(50), @IntervalEndDateTime, 120) + ''' UTC'
      
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @AggregationStartDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      SET @DebugMessageText = N'Failed to build aggregates for AEM data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemAggregate TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemAggregationDelete')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemAggregationDelete AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemAggregationDelete
   @DatasetId   uniqueidentifier
  ,@AggregationTypeId tinyint
  ,@TableGuid uniqueidentifier
  ,@AggregationDateTime datetime
  ,@RowsDeleted int OUTPUT
AS
BEGIN
  IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
  BEGIN
      RETURN
  END
  SET NOCOUNT ON
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(4000)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(4000)
  SET @ErrorInd = 0
  
  DECLARE
     @TableName sysname
    ,@Statement nvarchar(max)
    ,@DebugMessage nvarchar(max)
    ,@DeleteStartedDateTime datetime
    ,@OperationDurationMs bigint
    ,@DebugLevel tinyint
    ,@SchemaName sysname
  
  BEGIN TRY
    IF (@AggregationTypeId &lt;&gt; 30) RETURN
    
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    BEGIN TRAN
    -- there are dependent tables in aem data set; we'll 1st delete error group aggregation
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 1)
      AND (BaseTableName = 'CMAemErrorGroupDaily')
    
    SET @Statement = 'DELETE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] = CONVERT(datetime, ''' + CONVERT(varchar(50), @AggregationDateTime, 120) + ''', 120))'
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Starting delete of existing AEM error group aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      
      SET @DeleteStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
   
    EXECUTE(@Statement)
    
    SET @RowsDeleted = @@ROWCOUNT
  
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Finished delete of existing AEM error group aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @DeleteStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    -- we'll now delete application aggregation
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 1)
      AND (BaseTableName = 'CMAemApplicationDaily')
    
    SET @Statement = 'DELETE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] = CONVERT(datetime, ''' + CONVERT(varchar(50), @AggregationDateTime, 120) + ''', 120))'
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Starting delete of existing AEM application aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      
      SET @DeleteStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
   
    EXECUTE(@Statement)
    
    SET @RowsDeleted = @RowsDeleted + @@ROWCOUNT
  
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Finished delete of existing AEM application aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @DeleteStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    -- we'll now delete main aggregation table
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 0)
    
    SET @Statement = 'DELETE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] = CONVERT(datetime, ''' + CONVERT(varchar(50), @AggregationDateTime, 120) + ''', 120))'
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Starting delete of main AEM aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      
      SET @DeleteStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
    END
   
    EXECUTE(@Statement)
    
    SET @RowsDeleted = @RowsDeleted + @@ROWCOUNT
  
    IF (@DebugLevel &gt; 2)
    BEGIN
      SELECT @DebugMessage = 'Finished delete of main AEM aggregated data. Table: ' + @TableName + ', aggregation date: ' + CONVERT(varchar(50), @AggregationDateTime, 120)
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @DeleteStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 3
        ,@MessageText = @DebugMessage
        ,@OperationDurationMs = @OperationDurationMs
    END
    
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
    
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      SET @DebugMessageText = N'Failed to delete aggregated data for AEM data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @ErrorMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
  
  RETURN @RowsDeleted
END
GO
GRANT EXECUTE ON AemAggregationDelete TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemEventInsert')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemEventInsert AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemEventInsert
   @ManagementGroupId   uniqueidentifier
  ,@DatasetId           uniqueidentifier
  ,@DataXml             ntext
AS
BEGIN
  SET NOCOUNT ON
  
  DECLARE @ManagementGroupRowId int
  
  -- check management group permissions
  SELECT @ManagementGroupRowId = ManagementGroupRowId
  FROM vManagementGroup
  WHERE (ManagementGroupGuid = @ManagementGroupId)
    AND (WriterLoginName = SUSER_NAME())
  IF (@ManagementGroupRowId IS NULL)
  BEGIN
    RAISERROR(777970003, 16, 1)
    RETURN -1
  END
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  DECLARE
     @ExecResult int
    ,@XmlDocHandle int
    ,@ResultingState int
  
  SET @ResultingState = 1
  
  BEGIN TRY
    EXEC @ExecResult = sp_xml_preparedocument @XmlDocHandle OUTPUT, @DataXml
    IF @ExecResult &lt;&gt; 0 RAISERROR(777971000, 16, 1, 'CM', @ExecResult)
    
    INSERT AemEventStage (
         DatasetId
       ,[DateTime]
       ,CrashId
       ,ErrorGroupManagedEntityId
       ,AemComputerName
       ,AemUserName
    )
      SELECT 
         @DatasetId
        ,xml.CrashTime
        ,xml.CrashId
        ,xml.ErrorGroupManagedEntityId
        ,xml.AemComputerName
        ,xml.AemUserName
      FROM OPENXML(@XmlDocHandle, 'Root/Item', 2) WITH (
                   CrashId                        uniqueidentifier
                  ,ErrorGroupManagedEntityId      uniqueidentifier
                  ,CrashTime                      datetime
                  ,AemComputerName                nvarchar(256)
                  ,AemUserName                    nvarchar(256)) xml
    -- indicate data was written to staging - it is Ok to Ack the workflow
    SET @ResultingState = 10
      
    EXEC StandardDatasetMaintenance @DatasetId
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  IF (@XmlDocHandle IS NOT NULL)
    EXEC sp_xml_removedocument @XmlDocHandle
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, @ResultingState
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemEventInsert TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemEventProcessStaging')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemEventProcessStaging AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemEventProcessStaging
   @DatasetId           uniqueidentifier
AS
BEGIN
  SET NOCOUNT ON
 DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  sysname
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  BEGIN TRY
    DECLARE
       @InsertTableName sysname
      ,@InsertTableGuid uniqueidentifier
      ,@InsertStartedDateTime datetime
      ,@Statement nvarchar(max)
      ,@ExecResult int
      ,@TempTableCreated bit
      ,@DebugLevel int
      ,@LockResourceName sysname
      ,@MessageText nvarchar(max)
      ,@OperationDurationMs bigint
      ,@SchemaName sysname
     
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    EXEC dbo.StandardDatasetGetInsertTableGuid @DatasetId, 0, @InsertTableGuid OUTPUT
    SELECT @InsertTableName = BaseTableName + '_' + REPLACE(CAST(@InsertTableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = 0)
      AND (DependentTableInd = 0)
    BEGIN TRAN
    
    -- remove duplicate data
    SELECT @Statement = 'DELETE e'
                        + ' FROM AemEventStage e, ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@InsertTableName) + ' i'
                        + ' WHERE (i.CrashId = e.CrashId)'
    EXECUTE (@Statement)
    -- creating temp table
    CREATE TABLE #Event
    (
        ErrorGroupManagedEntityId   uniqueidentifier    NOT NULL
       ,[DateTime]                  datetime            NOT NULL
       ,ErrorGroupRowId             int
       ,CrashId                     uniqueidentifier    NOT NULL
       ,CrashTime                   as [DateTime]
       ,AemUserName                 nvarchar(256)
       ,AemUserRowId                int
       ,AemComputerName             nvarchar(256)
       ,AemComputerRowId            int
       ,WatsonBucket                bit
    )
    
    -- getting data ready to be moved to CMAemRaw in temp table
    INSERT #Event (
           ErrorGroupManagedEntityId
          ,[DateTime]
          ,ErrorGroupRowId
          ,CrashId
          ,AemUserName
          ,AemUserRowId
          ,AemComputerName
          ,AemComputerRowId
          ,WatsonBucket
    )
      SELECT 
           aes.ErrorGroupManagedEntityId
          ,aes.[DateTime]
          ,aeg.ErrorGroupRowId
          ,aes.CrashId
          ,aes.AemUserName
          ,au.AemUserRowId
          ,aes.AemComputerName
          ,ac.AemComputerRowId
          ,1
      FROM AemEventStage aes
        JOIN AemErrorGroup aeg ON (aeg.ErrorGroupManagedEntityId = aes.ErrorGroupManagedEntityId)
        LEFT JOIN AemUser au ON (au.AemUserName = aes.AemUserName)
        LEFT JOIN AemComputer ac ON (ac.AemComputerName = aes.AemComputerName)
    -- getting data ready to be moved to CMAemRaw in temp table
    INSERT #Event (
           ErrorGroupManagedEntityId
          ,[DateTime]
          ,ErrorGroupRowId
          ,CrashId
          ,AemUserName
          ,AemUserRowId
          ,AemComputerName
          ,AemComputerRowId
          ,WatsonBucket
    )
      SELECT 
           aes.ErrorGroupManagedEntityId
          ,aes.[DateTime]
          ,aseg.ErrorGroupRowId
          ,aes.CrashId
          ,aes.AemUserName
          ,au.AemUserRowId
          ,aes.AemComputerName
          ,ac.AemComputerRowId
          ,0
      FROM AemEventStage aes
        JOIN AemSystemErrorGroup aseg ON (aseg.ErrorGroupManagedEntityId = aes.ErrorGroupManagedEntityId)
        LEFT JOIN AemUser au ON (au.AemUserName = aes.AemUserName)
        LEFT JOIN AemComputer ac ON (ac.AemComputerName = aes.AemComputerName)
    -- we will not insert data whose Error Group's are not known yet    
    DELETE #Event
    WHERE ErrorGroupRowId IS NULL
    -- *****************************************************
    -- update userName dimension
    
    UPDATE au
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemUser au
          JOIN #Event e ON (au.AemUserRowId = e.AemUserRowId)
    WHERE (DATEADD(day, 1, au.LastReceivedDateTime) &lt; GETUTCDATE())
    
    INSERT AemUser (AemUserName)
    SELECT DISTINCT e.AemUserName COLLATE database_default
    FROM #Event e
    WHERE 0 = (SELECT COUNT(*) FROM AemUser au WHERE (au.AemUserName = e.AemUserName COLLATE database_default))
        AND e.AemUserName IS NOT NULL
    
    UPDATE e
    SET e.AemUserRowId = au.AemUserRowId
    FROM #Event e JOIN AemUser au ON (e.AemUserName = au.AemUserName COLLATE database_default)
    WHERE (e.AemUserRowId IS NULL)
  
    -- *****************************************************
    -- update computerName dimension
    
    UPDATE ac
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemComputer ac
          JOIN #Event e ON (ac.AemComputerRowId = e.AemComputerRowId)
    WHERE (DATEADD(day, 1, ac.LastReceivedDateTime) &lt; GETUTCDATE())
    
    INSERT AemComputer (AemComputerName)
    SELECT DISTINCT e.AemComputerName COLLATE database_default
    FROM #Event e
    WHERE 0 = (SELECT COUNT(*) FROM AemComputer ac WHERE (ac.AemComputerName = e.AemComputerName COLLATE database_default))
        AND e.AemComputerName IS NOT NULL
    
    UPDATE e
    SET e.AemComputerRowId = ac.AemComputerRowId
    FROM #Event e JOIN AemComputer ac ON (e.AemComputerName = ac.AemComputerName COLLATE database_default)
    WHERE (e.AemComputerRowId IS NULL)
    -- remove duplicate data that we recevied via Check-For-Solution feature
    -- that has CrashId probably different
    -- we start with watson bucket 1st
    SELECT @Statement = 'DELETE aes'
                        + ' FROM AemEventStage aes, ' 
                        +     QUOTENAME(@SchemaName) + '.' + QUOTENAME(@InsertTableName) + ' i, '
                        + '   #Event e '
                        + ' WHERE (aes.CrashId = e.CrashId) '
                        + '   AND (e.WatsonBucket = 1) '
                        + '   AND (e.AemComputerRowId = i.AemComputerRowId ' 
                        + '        AND e.AemUserRowId = i.AemUserRowId '
                        + '        AND e.ErrorGroupRowId = i.ErrorGroupRowId '
                        + '        AND e.CrashTime = i.CrashTime)'
    EXECUTE (@Statement)
    
    -- now, system bucket
    SELECT @Statement = 'DELETE aes'
                        + ' FROM AemEventStage aes, ' 
                        + '   AemSystemErrorGroup aseg, '
                        + '   #Event e '
                        + ' WHERE (aes.CrashId = e.CrashId) '
                        + '   AND (e.WatsonBucket = 0) '
                        + '   AND (e.AemComputerRowId = aseg.AemComputerRowId ' 
                        + '        AND e.AemUserRowId = aseg.AemUserRowId '
                        + '        AND e.ErrorGroupRowId = aseg.ErrorGroupRowId '
                        + '        AND e.CrashTime = aseg.CrashTime)'
    EXECUTE (@Statement)
    -- we deleted above data from AemEventStage, we need to delete data from #Event too
    SELECT @Statement = 'DELETE e'
                        + ' FROM #Event e '
                        + ' WHERE e.CrashId NOT IN (SELECT CrashId FROM AemEventStage) '
    EXECUTE (@Statement)
    -- ***************************************************************    
    -- lock table map to ensure we insert into table opened for insertion
    
    SET @LockResourceName = CAST(@DatasetId AS varchar(50)) + '_TableMap'
  
    EXEC @ExecResult = sp_getapplock
           @Resource = @LockResourceName
          ,@LockMode = 'Shared'
          ,@LockOwner = 'Transaction'
    IF (@ExecResult &lt; 0)
    BEGIN
      RAISERROR(777971001, 16, 1, 'Shared:StandardDatasetTableMap', @ExecResult)
    END
  
    EXEC dbo.StandardDatasetGetInsertTableGuid @DatasetId, 0, @InsertTableGuid OUTPUT
    
    IF (@DebugLevel &gt; 3)
    BEGIN
      SELECT @MessageText = 'Starting to insert ' + CAST(COUNT(*) AS varchar(30)) + ' AEM event data into table set with GUID ' + CAST(@InsertTableGuid AS varchar(100))
      FROM #Event
      
      SET @InsertStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
    END
  
    -- insert new data
    SELECT @Statement =
        ' INSERT ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@InsertTableName) + ' ('
      + '   [DateTime]'
      + '  ,ErrorGroupRowId'
      + '  ,CrashId'
      + '  ,AemUserRowId'
      + '  ,AemComputerRowId'
      + ' )'
      + ' SELECT '
      + '   [DateTime]'
      + '  ,ErrorGroupRowId'
      + '  ,CrashId'
      + '  ,AemUserRowId'
      + '  ,AemComputerRowId'
      + ' FROM #Event'
      + ' WHERE WatsonBucket = 1'
    EXECUTE(@Statement)
    -- mark existing affected aggregations as dirty
    UPDATE sdah
    SET DirtyInd = 1
      ,DataLastReceivedDateTime = GETUTCDATE()
    FROM StandardDatasetAggregationHistory sdah
      JOIN StandardDatasetAggregation sda ON (sdah.DatasetId = sda.DatasetId AND sdah.AggregationTypeId = sda.AggregationTypeId)
      CROSS JOIN #Event e
    WHERE (sdah.DatasetId = @DatasetId)
      AND (sdah.DirtyInd = 0)
      AND (e.[DateTime] &gt;= sdah.AggregationDateTime)
      AND (e.[DateTime] &lt; DATEADD(minute, sda.AggregationIntervalDurationMinutes, sdah.AggregationDateTime))
      AND (e.WatsonBucket = 1)
    -- let's deal with system bucket data now
    -- for system bucket: the event details map to system error group 
    -- the event data did not make into AemRaw table
    UPDATE aseg
    SET aseg.CrashTime = e.[DateTime]
       ,aseg.AemUserRowId = e.AemUserRowId
       ,aseg.AemComputerRowId = e.AemComputerRowId
       --,aseg.CabFileName = 
    FROM AemSystemErrorGroup aseg 
        JOIN #Event e ON (aseg.ErrorGroupManagedEntityId = e.ErrorGroupManagedEntityId)
    -- remove inserted systemBucket related data
    SELECT @Statement = 'DELETE aes'
                        + ' FROM AemEventStage aes'
                        + '   JOIN #Event e ON (e.ErrorGroupManagedEntityId = aes.ErrorGroupManagedEntityId)'
    EXECUTE (@Statement)
    -- remove inserted data
    SELECT @Statement = 
          'DELETE aes '
        + 'FROM AemEventStage aes '
        + '    JOIN #Event e ON (aes.CrashId = e.CrashId)'
    EXECUTE (@Statement)
       
    IF (@DebugLevel &gt; 3)
    BEGIN
      SET @MessageText = 'Finished inserting AEM event data into table set with GUID ' + CAST(@InsertTableGuid AS varchar(100))
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @InsertStartedDateTime))
      SET @InsertStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
        ,@OperationDurationMs = @OperationDurationMs
    END
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      
      SET @DebugMessageText = N'Failed to insert AEM event data into AEM data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemEventProcessStaging TO OpsMgrWriter
GO
 
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemGetDailyAggregationDate')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemGetDailyAggregationDate AS RETURN 1')
    END
GO
ALTER PROCEDURE [dbo].[AemGetDailyAggregationDate]
   @InDate datetime
  ,@OutDate datetime out
AS
BEGIN
    
    SET NOCOUNT ON
  
    SET @OutDate = CAST(CONVERT(char(8), @InDate, 112) AS DateTime)
    RETURN 1
END
GO
GRANT EXECUTE ON AemGetDailyAggregationDate TO OpsMgrWriter
GO
GRANT EXECUTE ON AemGetDailyAggregationDate TO OpsMgrReader
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemGroom')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemGroom AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemGroom
   @DatasetId   uniqueidentifier
  ,@AggregationTypeId tinyint
  ,@TableGuid uniqueidentifier
  ,@CutoffDateTime datetime
  ,@MaxRowsToGroom int
  ,@RowsDeleted int OUTPUT
AS
BEGIN
  SET NOCOUNT ON
  IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
  BEGIN
      RETURN
  END
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(4000)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(4000)
  SET @ErrorInd = 0
  
  DECLARE
     @TableName sysname
    ,@Statement nvarchar(max)
    ,@DebugLevel tinyint
    ,@SchemaName sysname
  
  BEGIN TRY
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    -- there are no dependent tables in Aem data set
    SELECT @TableName = BaseTableName + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', '')
    FROM StandardDatasetAggregationStorage
    WHERE (DatasetId = @DatasetId)
      AND (AggregationTypeId = @AggregationTypeId)
      AND (DependentTableInd = 0)
    
    SET @Statement = 'DELETE TOP (' + CAST(@MaxRowsToGroom AS varchar(15)) + ')'
                   + ' FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
                   + ' WHERE ([DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @CutoffDateTime, 120) + ''', 120))'
    EXECUTE (@Statement)
    SET @RowsDeleted = @@ROWCOUNT
    IF (@AggregationTypeId = 30)
    BEGIN
        SET @Statement = 'DELETE TOP (' + CAST(@MaxRowsToGroom AS varchar(15)) + ')'
                   + ' FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME('CMAemApplicationDaily' + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', ''))
                   + ' WHERE ([DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @CutoffDateTime, 120) + ''', 120))'
        EXECUTE (@Statement)
        SET @RowsDeleted = @@ROWCOUNT + @RowsDeleted
        SET @Statement = 'DELETE TOP (' + CAST(@MaxRowsToGroom AS varchar(15)) + ')'
                   + ' FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME('CMAemErrorGroupDaily' + '_' + REPLACE(CAST(@TableGuid AS varchar(50)), '-', ''))
                   + ' WHERE ([DateTime] &lt; CONVERT(datetime, ''' + CONVERT(varchar(50), @CutoffDateTime, 120) + ''', 120))'
        EXECUTE (@Statement)
        SET @RowsDeleted = @@ROWCOUNT + @RowsDeleted
    END
    -- groom dynamic dimensions
    DECLARE @MaxDataAgeDays int
    
    SELECT @MaxDataAgeDays = MAX(MaxDataAgeDays)
    FROM StandardDatasetAggregation
    WHERE (DatasetId = @DatasetId)
    DELETE aseg
    FROM AemSystemErrorGroup aseg
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    DELETE au
    FROM AemUser au
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    DELETE ac
    FROM AemComputer ac
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    
    DELETE aeg
    FROM AemErrorGroup aeg
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    
    DELETE aa
    FROM AemApplication aa
    WHERE LastReceivedDateTime &lt; DATEADD(day, -@MaxDataAgeDays, GETUTCDATE()) 
    OPTION (RECOMPILE)
    
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
    
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      SET @DebugMessageText = N'Failed to groom data for Aem data set. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
  
  RETURN @RowsDeleted
END
GO
GRANT EXECUTE ON AemGroom TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemManagedEntityInsert')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemManagedEntityInsert AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemManagedEntityInsert
   @ManagementGroupId   uniqueidentifier
  ,@DatasetId           uniqueidentifier
  ,@DataXml             ntext
AS
BEGIN
  SET NOCOUNT ON
  
  DECLARE @ManagementGroupRowId int
  
  -- check management group permissions
  SELECT @ManagementGroupRowId = ManagementGroupRowId
  FROM vManagementGroup
  WHERE (ManagementGroupGuid = @ManagementGroupId)
    AND (WriterLoginName = SUSER_NAME())
  IF (@ManagementGroupRowId IS NULL)
  BEGIN
    RAISERROR(777970003, 16, 1)
    RETURN -1
  END
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  nvarchar(256)
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  DECLARE
     @ExecResult int
    ,@XmlDocHandle int
    ,@ResultingState int
  
  SET @ResultingState = 1
  
  BEGIN TRY
    EXEC @ExecResult = sp_xml_preparedocument @XmlDocHandle OUTPUT, @DataXml
    IF @ExecResult &lt;&gt; 0 RAISERROR(777971000, 16, 1, 'CM', @ExecResult)
    
    CREATE TABLE #Temp(
        ErrorGroupManagedEntityId   uniqueidentifier
      , BucketId                    bigint
      , BucketTableId               bigint
    )
    
    INSERT AemManagedEntityStage (
           DatasetId
          ,ApplicationManagedEntityId    
          ,ApplicationName               
          ,ApplicationVersion            
          ,CompanyName                   
          ,FriendlyApplicationName       
          ,ErrorGroupManagedEntityId     
          ,BucketType                    
          ,Parameter0                    
          ,Parameter1                    
          ,Parameter2                    
          ,Parameter3                    
          ,Parameter4                    
          ,Parameter5                    
          ,Parameter6                    
          ,Parameter7                    
          ,Parameter8                    
          ,Parameter9                    
          ,Parameter10                   
          ,SelectedSolutionResponseType  
          ,SelectedCollectionResponseType
          ,MicrosoftResponseUrl 
          ,BucketId
          ,BucketTableId
    )
      SELECT 
           @DatasetId
          ,xml.ApplicationManagedEntityId    
          ,xml.ApplicationName               
          ,xml.ApplicationVersion            
          ,xml.CompanyName                   
          ,xml.FriendlyApplicationName       
          ,xml.ErrorGroupManagedEntityId     
          ,xml.BucketType                    
          ,xml.Parameter0           
          ,xml.Parameter1                    
          ,xml.Parameter2                    
          ,xml.Parameter3                    
          ,xml.Parameter4                    
          ,xml.Parameter5                    
          ,xml.Parameter6                    
          ,xml.Parameter7                    
          ,xml.Parameter8                    
          ,xml.Parameter9                    
          ,xml.Parameter10                   
          ,xml.SelectedSolutionResponseType  
          ,xml.SelectedCollectionResponseType
          ,xml.MicrosoftResponseUrl          
          ,NULL
          ,NULL
    FROM OPENXML(@XmlDocHandle, 'Root/Item', 2) WITH (
       ApplicationManagedEntityId           uniqueidentifier  
      ,ApplicationName                      nvarchar(256)     
      ,ApplicationVersion                   nvarchar(256)
      ,CompanyName                          nvarchar(256)     
      ,FriendlyApplicationName              nvarchar(256)
      ,ErrorGroupManagedEntityId            uniqueidentifier  
      ,BucketType                           nvarchar(10)     
      ,Parameter0                           nvarchar(256)       
      ,Parameter1                           nvarchar(256)       
      ,Parameter2                           nvarchar(256)       
      ,Parameter3                           nvarchar(256)       
      ,Parameter4                           nvarchar(256)       
      ,Parameter5                           nvarchar(256)       
      ,Parameter6                           nvarchar(256)       
      ,Parameter7                           nvarchar(256)       
      ,Parameter8                           nvarchar(256)       
      ,Parameter9                           nvarchar(256)       
      ,Parameter10                          nvarchar(256)
      ,SelectedSolutionResponseType         nvarchar(16)
      ,SelectedCollectionResponseType       nvarchar(16)
      ,MicrosoftResponseUrl                 nvarchar(256)) xml
    INSERT INTO #Temp(ErrorGroupManagedEntityId, BucketId, BucketTableId)
      SELECT 
          xml.ErrorGroupManagedEntityId 
        , xml.BucketId
        , xml.BucketTableId
      FROM OPENXML(@XmlDocHandle, 'Root/Item', 2) WITH (
          ErrorGroupManagedEntityId            uniqueidentifier  
        , BucketId	                           nvarchar(16)
        , BucketTableId                        nvarchar(16)) xml
    UPDATE ames
    SET ames.BucketId = CONVERT(BIGINT, temp.BucketId)
    FROM AemManagedEntityStage ames
      JOIN #Temp temp ON temp.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId
    WHERE ISNUMERIC(temp.BucketId) = 1
    UPDATE ames
    SET ames.BucketTableId = CONVERT(BIGINT, temp.BucketTableId)
    FROM AemManagedEntityStage ames
      JOIN #Temp temp ON temp.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId
    WHERE ISNUMERIC(temp.BucketTableId) = 1
      
    -- indicate data was written to staging - it is Ok to Ack the workflow
    SET @ResultingState = 10
      
    EXEC StandardDatasetMaintenance @DatasetId
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  IF (@XmlDocHandle IS NOT NULL)
    EXEC sp_xml_removedocument @XmlDocHandle
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, @ResultingState
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemManagedEntityInsert TO OpsMgrWriter
GO
 
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemManagedEntityProcessStaging')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemManagedEntityProcessStaging AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemManagedEntityProcessStaging
   @DatasetId           uniqueidentifier
AS
BEGIN
  SET NOCOUNT ON
  DECLARE 
     @ErrorInd        bit
    ,@ErrorMessage    nvarchar(max)
    ,@ErrorNumber     int
    ,@ErrorSeverity   int
    ,@ErrorState      int
    ,@ErrorLine       int
    ,@ErrorProcedure  sysname
    ,@ErrorMessageText nvarchar(max)
  SET @ErrorInd = 0
  BEGIN TRY
    DECLARE
       @InsertStartedDateTime datetime
      ,@Statement nvarchar(max)
      ,@ExecResult int
      ,@DebugLevel int
      ,@LockResourceName sysname
      ,@MessageText nvarchar(max)
      ,@OperationDurationMs bigint
      ,@SchemaName sysname
     
    SELECT
       @DebugLevel = DebugLevel
      ,@SchemaName = SchemaName
    FROM StandardDataset
    WHERE DatasetId = @DatasetId
    BEGIN TRAN
    
    IF (@DebugLevel &gt; 3)
    BEGIN
      SELECT @MessageText = 'Starting to insert ' + CAST(COUNT(*) AS varchar(30)) + ' managed entity data'
      FROM AemManagedEntityStage
      
      SET @InsertStartedDateTime = GETUTCDATE()
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
    END
    -- *****************************************************
    -- update non-key properties of ME(s) we already know
    -- start with AemApplication 
    UPDATE AemApplication 
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemApplication aa, AemManagedEntityStage ames
    WHERE aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId
    UPDATE AemApplication 
    SET CompanyName = ames.CompanyName
    FROM AemApplication aa, AemManagedEntityStage ames
    WHERE aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId AND
        ames.CompanyName IS NOT NULL AND
        len(ames.CompanyName) &gt; 0
    UPDATE AemApplication 
    SET FriendlyApplicationName = ames.FriendlyApplicationName
    FROM AemApplication aa, AemManagedEntityStage ames
    WHERE aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId AND
        ames.FriendlyApplicationName IS NOT NULL AND
        len(ames.FriendlyApplicationName) &gt; 0
    -- update AemErrorGroup table with entries that already exist
    UPDATE AemErrorGroup 
    SET LastReceivedDateTime = GETUTCDATE()
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId
    UPDATE AemErrorGroup 
    SET SelectedSolutionResponseType = ames.SelectedSolutionResponseType
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.SelectedSolutionResponseType IS NOT NULL AND
        len(ames.SelectedSolutionResponseType) &gt; 0
    UPDATE AemErrorGroup 
    SET SelectedCollectionResponseType = ames.SelectedCollectionResponseType
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.SelectedCollectionResponseType IS NOT NULL AND
        len(ames.SelectedCollectionResponseType) &gt; 0
    UPDATE AemErrorGroup
    SET BucketId = ames.BucketId
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.BucketId IS NOT NULL AND
        ames.BucketId &gt; 0
    UPDATE AemErrorGroup
    SET BucketTableId = ames.BucketTableId
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.BucketTableId IS NOT NULL AND
        ames.BucketTableId &gt; 0
    UPDATE AemErrorGroup 
    SET MicrosoftResponseUrl = ames.MicrosoftResponseUrl
    FROM AemErrorGroup aeg, AemManagedEntityStage ames
    WHERE aeg.ErrorGroupManagedEntityId = ames.ErrorGroupManagedEntityId AND
        ames.MicrosoftResponseUrl IS NOT NULL AND
        len(ames.MicrosoftResponseUrl) &gt; 0
    
    -- *****************************************************
    -- now, we remove duplicate entries of Application from staging table and insert into AemApplication
    -- then, we remove duplicate entries of Error Groups from staging table and insert into AemErrorGroup
    -- finally, we insert blue/system error groups
    -- *****************************************************
    -- let's remove duplicate entries for AemApplication
    CREATE TABLE #AemTempApplication (
       RowId                                int               NOT NULL IDENTITY(1, 1)                             
      ,DatasetId                            uniqueidentifier  NOT NULL
      
      ,ApplicationManagedEntityId           uniqueidentifier  NOT NULL
      ,ApplicationName                      nvarchar(256)     NOT NULL
      ,ApplicationVersion                   nvarchar(256)
      ,CompanyName                          nvarchar(256)     
      ,FriendlyApplicationName              nvarchar(256)     
    )
    INSERT #AemTempApplication (
        DatasetId
       ,ApplicationManagedEntityId
       ,ApplicationName
       ,ApplicationVersion
       ,CompanyName
       ,FriendlyApplicationName
    )
        SELECT 
            DatasetId
           ,ApplicationManagedEntityId
           ,ApplicationName
           ,ApplicationVersion
           ,CompanyName
           ,FriendlyApplicationName
        FROM AemManagedEntityStage 
        WHERE BucketType &lt;&gt; 'Blue'
    -- remove application entries we already know about
    DELETE #AemTempApplication
    WHERE ApplicationManagedEntityId IN (SELECT ApplicationManagedEntityId FROM AemApplication)
    
    CREATE TABLE #TempAppRowIds(RowId1 int, RowId2 int)
    INSERT #TempAppRowIds(RowId1, RowId2)
        SELECT t1.RowId, t2.RowId FROM #AemTempApplication t1, #AemTempApplication t2
        WHERE t1.RowId &lt; t2.RowId 
            AND t1.ApplicationManagedEntityId = t2.ApplicationManagedEntityId
    DELETE #TempAppRowIds
    WHERE RowId1 IN (SELECT RowId2 FROM #TempAppRowIds);
    WITH NewData(RowId, CompanyName)
    AS (
	    SELECT atmes1.RowId, atmes2.CompanyName
        FROM #AemTempApplication atmes1, #AemTempApplication atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempAppRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempAppRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.CompanyName IS NOT NULL
            AND len(atmes2.CompanyName) &gt; 0
        )
    UPDATE #AemTempApplication
    SET CompanyName = nd.CompanyName
    FROM #AemTempApplication AS ata
    JOIN NewData AS nd ON ata.RowId = nd.RowId;
    WITH NewData(RowId, FriendlyApplicationName)
    AS (
	    SELECT atmes1.RowId, atmes2.FriendlyApplicationName
        FROM #AemTempApplication atmes1, #AemTempApplication atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempAppRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempAppRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.FriendlyApplicationName IS NOT NULL
            AND len(atmes2.FriendlyApplicationName) &gt; 0
        )
    UPDATE #AemTempApplication
    SET FriendlyApplicationName = nd.FriendlyApplicationName
    FROM #AemTempApplication AS ata
    JOIN NewData AS nd ON ata.RowId = nd.RowId;
    DELETE #AemTempApplication
    WHERE RowId in (SELECT RowId2 from #TempAppRowIds);
    -- #AemTempApplication contains non-duplicated entries
    -- now, we do the insertion into AemApplication
    INSERT AemApplication (
       ApplicationManagedEntityId
      ,ApplicationName
      ,ApplicationVersion
      ,CompanyName
      ,FriendlyApplicationName
    )
      SELECT 
           ata.ApplicationManagedEntityId
          ,ata.ApplicationName
          ,ata.ApplicationVersion
          ,ata.CompanyName
          ,ata.FriendlyApplicationName
      FROM #AemTempApplication ata
    -- *****************************************************
    -- Now, we insert values into AemError Group, starting removal of duplicate entries from staging table 1st
    -- remove duplicate error group entries: 
    CREATE TABLE #AemTempErrorGroup (
       RowId                                int               NOT NULL IDENTITY(1, 1)                             
      ,DatasetId                            uniqueidentifier  NOT NULL
      
      ,ApplicationManagedEntityId           uniqueidentifier  NOT NULL
      ,ErrorGroupManagedEntityId            uniqueidentifier  NOT NULL
      ,BucketType                           nvarchar(10)     
      ,Parameter0                           nvarchar(256)       
      ,Parameter1                           nvarchar(256)       
      ,Parameter2                           nvarchar(256)       
      ,Parameter3                           nvarchar(256)       
      ,Parameter4                           nvarchar(256)       
      ,Parameter5                           nvarchar(256)       
      ,Parameter6                           nvarchar(256)       
      ,Parameter7                           nvarchar(256)       
      ,Parameter8                           nvarchar(256)       
      ,Parameter9                           nvarchar(256)       
      ,Parameter10                          nvarchar(256)
      ,SelectedSolutionResponseType         nvarchar(16)
      ,SelectedCollectionResponseType       nvarchar(16)
      ,BucketId                             bigint
      ,BucketTableId						bigint
      ,MicrosoftResponseUrl                 nvarchar(256)
    )
    INSERT #AemTempErrorGroup (
           DatasetId
          ,ApplicationManagedEntityId
          ,ErrorGroupManagedEntityId     
          ,BucketType                    
          ,Parameter0                    
          ,Parameter1                    
          ,Parameter2                    
          ,Parameter3                    
          ,Parameter4                    
          ,Parameter5                    
          ,Parameter6                    
          ,Parameter7                    
          ,Parameter8                    
          ,Parameter9                    
          ,Parameter10                   
          ,SelectedSolutionResponseType  
          ,SelectedCollectionResponseType
          ,BucketId
          ,BucketTableId
          ,MicrosoftResponseUrl          
    )
        SELECT 
           DatasetId
          ,ApplicationManagedEntityId
          ,ErrorGroupManagedEntityId     
          ,BucketType                    
          ,Parameter0                    
          ,Parameter1                    
          ,Parameter2                    
          ,Parameter3                    
          ,Parameter4                    
          ,Parameter5                    
          ,Parameter6                    
          ,Parameter7                    
          ,Parameter8                    
          ,Parameter9                    
          ,Parameter10                   
          ,SelectedSolutionResponseType  
          ,SelectedCollectionResponseType
          ,BucketId
          ,BucketTableId
          ,MicrosoftResponseUrl          
        FROM AemManagedEntityStage
        WHERE BucketType &lt;&gt; 'Blue'
    -- delete error groups we already know about
    DELETE #AemTempErrorGroup
    WHERE ErrorGroupManagedEntityId IN (SELECT ErrorGroupManagedEntityId FROM AemErrorGroup)
    CREATE TABLE #TempErrorGroupRowIds(RowId1 int, RowId2 int)
    
    INSERT #TempErrorGroupRowIds(RowId1, RowId2)
        SELECT t1.RowId, t2.RowId FROM #AemTempErrorGroup t1, #AemTempErrorGroup t2
        WHERE t1.RowId &lt; t2.RowId 
            AND t1.ErrorGroupManagedEntityId = t2.ErrorGroupManagedEntityId
            
    DELETE #TempErrorGroupRowIds
    WHERE RowId1 IN (SELECT RowId2 FROM #TempErrorGroupRowIds);
    WITH NewData(RowId, SelectedSolutionResponseType)
    AS (
	    SELECT atmes1.RowId, atmes2.SelectedSolutionResponseType
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.SelectedSolutionResponseType IS NOT NULL
            AND len(atmes2.SelectedSolutionResponseType) &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET SelectedSolutionResponseType = nd.SelectedSolutionResponseType
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    WITH NewData(RowId, SelectedCollectionResponseType)
    AS (
	    SELECT atmes1.RowId, atmes2.SelectedCollectionResponseType
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.SelectedCollectionResponseType IS NOT NULL
            AND len(atmes2.SelectedCollectionResponseType) &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET SelectedCollectionResponseType = nd.SelectedCollectionResponseType
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    WITH NewData(RowId, BucketId)
    AS (
	    SELECT atmes1.RowId, atmes2.BucketId
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.BucketId IS NOT NULL
            AND atmes2.BucketId &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET BucketId = nd.BucketId
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    WITH NewData(RowId, BucketTableId)
    AS (
	    SELECT atmes1.RowId, atmes2.BucketTableId
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.BucketTableId IS NOT NULL
            AND atmes2.BucketTableId &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET BucketTableId = nd.BucketTableId
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    
    WITH NewData(RowId, MicrosoftResponseUrl)
    AS (
	    SELECT atmes1.RowId, atmes2.MicrosoftResponseUrl
        FROM #AemTempErrorGroup atmes1, #AemTempErrorGroup atmes2
        WHERE atmes1.RowId in (SELECT RowId1 from #TempErrorGroupRowIds)
            AND atmes2.RowId in (SELECT RowId2 from #TempErrorGroupRowIds WHERE RowId1 = atmes1.RowId)
            AND atmes2.MicrosoftResponseUrl IS NOT NULL
            AND len(atmes2.MicrosoftResponseUrl) &gt; 0
        )
    UPDATE #AemTempErrorGroup
    SET MicrosoftResponseUrl = nd.MicrosoftResponseUrl
    FROM #AemTempErrorGroup AS ateg
    JOIN NewData AS nd ON ateg.RowId = nd.RowId;
    
    DELETE #AemTempErrorGroup
    WHERE RowId in (SELECT RowId2 from #TempErrorGroupRowIds)
    -- #AemTempErrorGroup contains non-duplicated entries
    -- now, we do the insertion into AemErrorGroup
    INSERT AemErrorGroup (
        ApplicationRowId
       ,ErrorGroupManagedEntityId        
       ,BucketType                       
       ,Parameter0                       
       ,Parameter1                       
       ,Parameter2                       
       ,Parameter3                       
       ,Parameter4                       
       ,Parameter5                       
       ,Parameter6                       
       ,Parameter7                       
       ,Parameter8                       
       ,Parameter9                       
       ,Parameter10                      
       ,SelectedSolutionResponseType     
       ,SelectedCollectionResponseType   
       ,BucketId
       ,BucketTableId
       ,MicrosoftResponseUrl             
    )
      SELECT 
        aa.ApplicationRowId
       ,ames.ErrorGroupManagedEntityId        
       ,ames.BucketType                       
       ,ames.Parameter0                       
       ,ames.Parameter1                       
       ,ames.Parameter2                       
       ,ames.Parameter3                       
       ,ames.Parameter4                       
       ,ames.Parameter5                       
       ,ames.Parameter6                       
       ,ames.Parameter7                       
       ,ames.Parameter8                       
       ,ames.Parameter9                       
       ,ames.Parameter10                      
       ,ames.SelectedSolutionResponseType     
       ,ames.SelectedCollectionResponseType   
       ,ames.BucketId
       ,ames.BucketTableId
       ,ames.MicrosoftResponseUrl    
      FROM #AemTempErrorGroup ames
      JOIN AemApplication aa ON (aa.ApplicationManagedEntityId = ames.ApplicationManagedEntityId)
      WHERE ames.BucketType &lt;&gt; 'Blue'
    -- *****************************************************
    -- inserting blue error groups
    INSERT AemSystemErrorGroup (
        ErrorGroupManagedEntityId                           
       ,MicrosoftResponseUrl                
    )
      SELECT 
         ErrorGroupManagedEntityId        
        ,MicrosoftResponseUrl
      FROM AemManagedEntityStage ames
      WHERE ames.BucketType = 'Blue'
       
    -- *****************************************************
    -- delete from staging table managed entities we inserted
    DELETE AemManagedEntityStage 
    WHERE 
        BucketType &lt;&gt; 'Blue'
        AND ErrorGroupManagedEntityId IN (SELECT ErrorGroupManagedEntityId 
                        FROM AemErrorGroup)
        AND ApplicationManagedEntityId IN (SELECT ApplicationManagedEntityId
                        FROM AemApplication)
    DELETE AemManagedEntityStage
    WHERE 
        BucketType = 'Blue'
        AND ErrorGroupManagedEntityId IN (SELECT ErrorGroupManagedEntityId
                        FROM AemSystemErrorGroup)
    IF (@DebugLevel &gt; 3)
    BEGIN
      SET @MessageText = 'Finished inserting AEM managed entity data'
      SET @OperationDurationMs = ABS(DATEDIFF(ms, GETUTCDATE(), @InsertStartedDateTime))
      
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 4
        ,@MessageText = @MessageText
        ,@OperationDurationMs = @OperationDurationMs
    END
    COMMIT
  END TRY
  BEGIN CATCH
    IF (@@TRANCOUNT &gt; 0)
      ROLLBACK TRAN
  
    SELECT 
       @ErrorNumber = ERROR_NUMBER()
      ,@ErrorSeverity = ERROR_SEVERITY()
      ,@ErrorState = ERROR_STATE()
      ,@ErrorLine = ERROR_LINE()
      ,@ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-')
      ,@ErrorMessageText = ERROR_MESSAGE()
    SET @ErrorInd = 1
  END CATCH
  -- report error if any
  IF (@ErrorInd = 1)
  BEGIN
    IF (@DebugLevel &gt; 0)
    BEGIN
      DECLARE @DebugMessageText nvarchar(max)
      
      SET @DebugMessageText = N'Failed to insert data into AEM managed entity data. Error ' + CAST(@ErrorNumber AS varchar(15))
                      + ', Procedure ' + @ErrorProcedure
                      + ', Line ' + CAST(@ErrorLine AS varchar(15))
                      + ', Message: '+ @ErrorMessageText
      EXEC DebugMessageInsert
         @DatasetId = @DatasetId
        ,@MessageLevel = 1
        ,@MessageText = @DebugMessageText
    END
      
    DECLARE @AdjustedErrorSeverity int
    SET @AdjustedErrorSeverity = CASE
                                   WHEN @ErrorSeverity &gt; 18 THEN 18
                                   ELSE @ErrorSeverity
                                 END
    
    RAISERROR (777971002, @AdjustedErrorSeverity, 1
      ,@ErrorNumber
      ,@ErrorSeverity
      ,@ErrorState
      ,@ErrorProcedure
      ,@ErrorLine
      ,@ErrorMessageText
    )
  END
END
GO
GRANT EXECUTE ON AemManagedEntityProcessStaging TO OpsMgrWriter
GO
                    IF NOT EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND [name] = 'AemProcessStaging')
    BEGIN
        EXECUTE ('CREATE PROCEDURE dbo.AemProcessStaging AS RETURN 1')
    END
GO
ALTER PROCEDURE dbo.AemProcessStaging
   @DatasetId           uniqueidentifier
AS
BEGIN
  IF EXISTS (SELECT * FROM StandardDataset WHERE SchemaName = 'Aem' AND DatasetId = @DatasetId)
  BEGIN
      RETURN
  END
  SET NOCOUNT ON
  -- move MEs (error groups and applications from staging table(s)) to domain tables
  EXEC dbo.AemManagedEntityProcessStaging @DatasetId
  -- move event data from staging to datawarehouse tables
  EXEC dbo.AemEventProcessStaging @DatasetId 
  
END
GO
GRANT EXECUTE ON AemProcessStaging TO OpsMgrWriter
GO
  
                    SET NOCOUNT ON 
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA ='Aem')
BEGIN
    BEGIN TRAN
        DECLARE @SourceTableName sysname
        DECLARE @DestinationTableName sysname
        -- transfering raw data
        SELECT @SourceTableName = '[AEM].AemRaw_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 0
            AND sd.SchemaName = 'AEM'
        SELECT @DestinationTableName = '[CM].CMAemRaw_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 0
            AND sd.SchemaName = 'CM'
        EXECUTE ('INSERT INTO ' + @SourceTableName + ' ([DateTime], ErrorGroupRowId, CrashId, AemUserRowId, AemComputerRowId) ' + 
            ' SELECT [DateTime], ErrorGroupRowId, CrashId, AemUserRowId, AemComputerRowId FROM ' + @DestinationTableName +
                ' WHERE CrashId NOT IN (SELECT CrashId FROM ' + @SourceTableName + ')')
        -- setting dirty bit to get aggregations redone as raw data has been transferred
        DECLARE @DatasetId uniqueidentifier
        
        SELECT @DatasetId = sd.DatasetId FROM StandardDataset sd WHERE sd.SchemaName = 'CM'
        DECLARE @Statement nvarchar(4000)
        
        UPDATE sdah
        SET DirtyInd = 1
          ,DataLastReceivedDateTime = GETUTCDATE()
        FROM StandardDatasetAggregationHistory sdah
          JOIN StandardDatasetAggregation sda ON (sdah.DatasetId = sda.DatasetId AND sdah.AggregationTypeId = sda.AggregationTypeId)
          CROSS JOIN [Aem].vAemRaw e
        WHERE (sdah.DatasetId = @DatasetId)
          AND (sdah.DirtyInd = 0)
          AND (e.[DateTime] &gt;= sdah.AggregationDateTime)
          AND (e.[DateTime] &lt; DATEADD(minute, sda.AggregationIntervalDurationMinutes, sdah.AggregationDateTime))
        -- deleting old data set aggregations
        SELECT @SourceTableName = '[AEM].AemErrorGroupDaily_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 30
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        SELECT @SourceTableName = '[AEM].AemApplicationDaily_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 30
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        SELECT @SourceTableName = '[AEM].AemDaily_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 30
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        SELECT @SourceTableName = '[AEM].AemRaw_' + sdtm.TableNameSuffix
        FROM StandardDataset sd JOIN StandardDatasetTableMap sdtm ON sd.DatasetId = sdtm.DatasetId
        WHERE sdtm.AggregationTypeId = 0
            AND sd.SchemaName = 'AEM'
            
        EXECUTE ('DELETE FROM ' + @SourceTableName)
        
        UPDATE sdas
        SET MaxTableRowCount = 10000000
        FROM StandardDatasetAggregationStorage sdas
        WHERE DatasetId = @DatasetId
    COMMIT
END
GO
                    </Upgrade></DataWarehouseDataSet></DataWarehouseDataSets><Reports><Report ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" Accessibility="Public" Visible="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"><Dependencies><DataWarehouseDataSet>Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet</DataWarehouseDataSet><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker</ReportParameterControl><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown</ReportParameterControl></Dependencies><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="6"><Controls><Control rowSpan="4" columnSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker"><ReportParameters><ReportParameter name="TimeZone"
binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue"
binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /></ReportParameters></Control><Control rowSpan="1" columnSpan="1" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown"><ReportParameters><ReportParameter name="N"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplications.ParameterPrompt.N</Prompt></ReportParameter></ReportParameters></Control></Controls></ParameterBlock><ReportDefinition>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications</ReportDefinition><ReportStrings><ReportString ID="R.Title" /><ReportString ID="R.DescriptionTitle" /><ReportString
ID="R.Description" /><ReportString ID="R.GeneratedTimeLabel" /><ReportString ID="R.StartEndTimeLabel" /><ReportString ID="R.StartEndTimeFormat" /><ReportString ID="R.NLabel" /><ReportString ID="R.GraphTitleLabel" /><ReportString ID="R.Graph.XAxisLabel" /><ReportString ID="R.Graph.YAxisLabel" /><ReportString ID="R.GraphTableLabel" /><ReportString ID="RT.Column.TotalCrashCountLabel" /><ReportString ID="RT.Column.AverageCrashCountPerApplicationLabel" /><ReportString ID="RT.Column.AverageDailyCrashCountPerApplicationLabel" /><ReportString ID="R.TableHeaderLine1" /><ReportString ID="R.TableSubHeaderLine1" /><ReportString ID="RT.Column.SerialNumberLabel" /><ReportString ID="RT.Column.ApplicationNameLabel" /><ReportString ID="RT.Column.ApplicationVersionLabel" /><ReportString ID="RT.Column.CrashCountLabel" /><ReportString ID="RT.Column.AverageDailyCrashCountLabel" /><ReportString ID="R.PageFormat" /><ReportString ID="R.TimeZoneFormat" /></ReportStrings></Report><Report
ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" Accessibility="Public" Visible="true" Target="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"><Dependencies><DataWarehouseDataSet>Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet</DataWarehouseDataSet><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker</ReportParameterControl><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown</ReportParameterControl></Dependencies><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="6"><Controls><Control rowSpan="4" columnSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker"><ReportParameters><ReportParameter name="TimeZone"
binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName" binding="TimeZoneName" /><ReportParameter name="CurrentIntervalStartDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="CurrentIntervalStartDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.CurrentIntervalStartDate</Prompt></ReportParameter><ReportParameter name="CurrentIntervalStartDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="CurrentIntervalStartDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="PreviousIntervalStartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="PreviousIntervalStartDate_BaseValue"
binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.PreviousIntervalStartDate</Prompt></ReportParameter><ReportParameter name="PreviousIntervalStartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter name="PreviousIntervalStartDate_OffsetValue" binding="StartDate_OffsetValue" /></ReportParameters></Control><Control rowSpan="1" columnSpan="1" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown"><ReportParameters><ReportParameter name="IntervalDurationInDays"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.IntervalDurationInDays</Prompt></ReportParameter></ReportParameters></Control><Control rowSpan="1" columnSpan="1"
type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown"><ReportParameters><ReportParameter name="N"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.N</Prompt></ReportParameter></ReportParameters></Control></Controls></ParameterBlock><ReportDefinition>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth</ReportDefinition><ReportStrings><ReportString ID="R.Title" /><ReportString ID="R.DescriptionTitle" /><ReportString ID="R.Description" /><ReportString ID="R.GeneratedTimeLabel" /><ReportString ID="R.CurrentStartEndTimeLabel" /><ReportString ID="R.CurrentStartEndTimeFormat" /><ReportString ID="R.PreviousStartEndTimeLabel" /><ReportString ID="R.PreviousStartEndTimeFormat" /><ReportString ID="R.NLabel" /><ReportString ID="R.GraphTitleLabel" /><ReportString ID="R.Graph.XAxisLabel" /><ReportString
ID="R.Graph.YAxisLabel" /><ReportString ID="R.TableHeaderLine1" /><ReportString ID="R.TableSubHeaderLine1" /><ReportString ID="RT.Column.SerialNumberLabel" /><ReportString ID="RT.Column.ApplicationNameLabel" /><ReportString ID="RT.Column.ApplicationVersionLabel" /><ReportString ID="RT.Column.CurrentCrashCountLabel" /><ReportString ID="RT.Column.CurrentAverageDailyCrashCountLabel" /><ReportString ID="RT.Column.PreviousCrashCountLabel" /><ReportString ID="RT.Column.PreviousAverageDailyCrashCountLabel" /><ReportString ID="RT.Column.CrashCountPercentileIncreaseLabel" /><ReportString ID="R.PageFormat" /><ReportString ID="R.TimeZoneFormat" /></ReportStrings></Report><Report ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" Accessibility="Public" Visible="true"
Target="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"><Dependencies><DataWarehouseDataSet>Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet</DataWarehouseDataSet><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker</ReportParameterControl><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown</ReportParameterControl></Dependencies><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="6"><Controls><Control rowSpan="4" columnSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName"
binding="TimeZoneName" /><ReportParameter name="StartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="StartDate_BaseValue" binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.StartDateTime</Prompt></ReportParameter><ReportParameter name="StartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter name="StartDate_OffsetValue" binding="StartDate_OffsetValue" /><ReportParameter name="EndDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="EndDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.EndDateTime</Prompt></ReportParameter><ReportParameter name="EndDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="EndDate_OffsetValue" binding="EndDate_OffsetValue" /></ReportParameters></Control><Control rowSpan="1"
columnSpan="1" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown"><ReportParameters><ReportParameter name="N"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroups.ParameterPrompt.N</Prompt></ReportParameter></ReportParameters></Control></Controls></ParameterBlock><ReportDefinition>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups</ReportDefinition><ReportStrings><ReportString ID="R.Title" /><ReportString ID="R.DescriptionTitle" /><ReportString ID="R.Description" /><ReportString ID="R.GeneratedTimeLabel" /><ReportString ID="R.StartEndTimeLabel" /><ReportString ID="R.StartEndTimeFormat" /><ReportString ID="R.NLabel" /><ReportString ID="R.GraphTitleLabel" /><ReportString ID="R.Graph.XAxisLabel" /><ReportString ID="R.Graph.YAxisLabel" /><ReportString ID="R.GraphTableLabel" /><ReportString ID="RT.Column.TotalCrashCountLabel"
/><ReportString ID="RT.Column.AverageCrashCountPerErrorGroupLabel" /><ReportString ID="RT.Column.AverageDailyCrashCountPerErrorGroupLabel" /><ReportString ID="R.TableHeaderLine1" /><ReportString ID="R.TableSubHeaderLine1" /><ReportString ID="RT.Column.SerialNumberLabel" /><ReportString ID="RT.Column.ApplicationNameLabel" /><ReportString ID="RT.Column.ApplicationVersionLabel" /><ReportString ID="RT.Column.BucketTypeLabel" /><ReportString ID="RT.Column.EventTypeLabel" /><ReportString ID="RT.Column.CrashCountLabel" /><ReportString ID="RT.Column.AverageDailyCrashCountLabel" /><ReportString ID="RT.Column.ErrorGroupIdLabel" /><ReportString ID="RT.Column.MicrosoftResponseLabel" /><ReportString ID="R.PageFormat" /><ReportString ID="R.TimeZoneFormat" /></ReportStrings></Report><Report ID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" Accessibility="Public" Visible="true"
Target="AEMLib!Microsoft.SystemCenter.CM.AEM.CrashListener"><Dependencies><DataWarehouseDataSet>Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet</DataWarehouseDataSet><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker</ReportParameterControl><ReportParameterControl>Reporting!Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown</ReportParameterControl></Dependencies><ParameterBlock xmlns="http://schemas.microsoft.com/mom/reporting/2007/ReportParameterSettings" columns="6"><Controls><Control rowSpan="4" columnSpan="2" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.RelativeDateTimePicker"><ReportParameters><ReportParameter name="TimeZone" binding="TimeZone"><Prompt>Microsoft.SystemCenter.DataWarehouse.Report.Library!Microsoft.SystemCenter.DataWarehouse.Report.ParameterPrompt.TimeZone</Prompt></ReportParameter><ReportParameter name="TimeZoneName"
binding="TimeZoneName" /><ReportParameter name="CurrentIntervalStartDate_BaseType" binding="EndDate_BaseType" /><ReportParameter name="CurrentIntervalStartDate_BaseValue" binding="EndDate_BaseValue"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.CurrentIntervalStartDate</Prompt></ReportParameter><ReportParameter name="CurrentIntervalStartDate_OffsetType" binding="EndDate_OffsetType" /><ReportParameter name="CurrentIntervalStartDate_OffsetValue" binding="EndDate_OffsetValue" /><ReportParameter name="PreviousIntervalStartDate_BaseType" binding="StartDate_BaseType" /><ReportParameter name="PreviousIntervalStartDate_BaseValue"
binding="StartDate_BaseValue"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.PreviousIntervalStartDate</Prompt></ReportParameter><ReportParameter name="PreviousIntervalStartDate_OffsetType" binding="StartDate_OffsetType" /><ReportParameter name="PreviousIntervalStartDate_OffsetValue" binding="StartDate_OffsetValue" /></ReportParameters></Control><Control rowSpan="1" columnSpan="1" type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown"><ReportParameters><ReportParameter name="IntervalDurationInDays"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.IntervalDurationInDays</Prompt></ReportParameter></ReportParameters></Control><Control rowSpan="1" columnSpan="1"
type="Microsoft.SystemCenter.DataWarehouse.Report.ParameterControl.NumericUpDown"><ReportParameters><ReportParameter name="N"><Prompt>Microsoft.SystemCenter.ClientMonitoring.Views.Internal!Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.N</Prompt></ReportParameter></ReportParameters></Control></Controls></ParameterBlock><ReportDefinition>Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth</ReportDefinition><ReportStrings><ReportString ID="R.Title" /><ReportString ID="R.DescriptionTitle" /><ReportString ID="R.Description" /><ReportString ID="R.GeneratedTimeLabel" /><ReportString ID="R.CurrentStartEndTimeLabel" /><ReportString ID="R.CurrentStartEndTimeFormat" /><ReportString ID="R.PreviousStartEndTimeLabel" /><ReportString ID="R.PreviousStartEndTimeFormat" /><ReportString ID="R.NLabel" /><ReportString ID="R.GraphTitleLabel" /><ReportString ID="R.Graph.XAxisLabel" /><ReportString
ID="R.Graph.YAxisLabel" /><ReportString ID="R.TableHeaderLine1" /><ReportString ID="R.TableSubHeaderLine1" /><ReportString ID="RT.Column.SerialNumberLabel" /><ReportString ID="RT.Column.ApplicationNameLabel" /><ReportString ID="RT.Column.ApplicationVersionLabel" /><ReportString ID="RT.Column.ErrorGroupIdLabel" /><ReportString ID="RT.Column.CurrentCrashCountLabel" /><ReportString ID="RT.Column.CurrentAverageDailyCrashCountLabel" /><ReportString ID="RT.Column.PreviousCrashCountLabel" /><ReportString ID="RT.Column.PreviousAverageDailyCrashCountLabel" /><ReportString ID="RT.Column.CrashCountPercentileIncreaseLabel" /><ReportString ID="R.PageFormat" /><ReportString ID="R.TimeZoneFormat" /></ReportStrings></Report></Reports></Reporting><LanguagePacks><LanguagePack ID="ENU" IsDefault="true"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppMachineCountPerfCollector"><Name>Machines Affected</Name><Description>Total unique machines affected per
application</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppTotalHitCountPerfCollector"><Name>Total Errors</Name><Description>Total Errors per application</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppUserCountPerfCollector"><Name>Users Affected</Name><Description>Total unique users affected per application</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationEvent.View"><Name>Error Events</Name><Description>This view shows all the Error Reports</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ApplicationState.View"><Name>Application View</Name><Description>Application State View</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketMachineCountPerfCollector"><Name>Machines Affected</Name><Description>Total Unique
Machines affected per Error Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketTotalHitCountPerfCollector"><Name>Total Errors</Name><Description>Total Errors per Error Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketUserCountPerfCollector"><Name>Users Affected</Name><Description>Total Unique Users affected per Error Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedAppThreshold"><Name>Application Computers Monitor</Name><Description>This monitor checks for all number of computers' monitors associated with this application.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedAppThreshold.AlertMessage"><Name>Application Computers Monitor</Name><Description>The total number of unique computers experiencing crashes for this
application have exceeded the threshold. The total number of unique computers are {0}. The threshold value of the monitor is {1}.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedWatsonBucketThreshold"><Name>Error Group Computers Monitor</Name><Description>This monitor checks for number of computers affected by this error group.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedWatsonBucketThreshold.AlertMessage"><Name>Error Group Computers Monitor</Name><Description>The number of unique computers experiencing crashes for the error group have exceeded the threshold. The total number of unique computers impacted are {0}. The threshold value for the monitor is {1}.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.CrashListener.CrashListenerState.View"><Name>Crash Listener View</Name><Description>File
Share State View</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet"><Name>Client Monitoring data set</Name><Description>Defines storage and aggregation for Client Monitoring information</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.AemDataSet.DefaultConfiguration"><Name>Client Monitoring data set default configuration</Name><Description>&lt;Configuration&gt;
  &lt;Aggregations&gt;
    &lt;Raw&gt;
      &lt;BaseTableName&gt;CMAemRaw&lt;/BaseTableName&gt;
      &lt;MaxTableRowCount&gt;10000000&lt;/MaxTableRowCount&gt;
      &lt;MaxDataAgeDays&gt;30&lt;/MaxDataAgeDays&gt;
      &lt;GroomingIntervalMinutes&gt;240&lt;/GroomingIntervalMinutes&gt;
      &lt;MaxRowsToGroom&gt;100000&lt;/MaxRowsToGroom&gt;
      &lt;IndexOptimizationIntervalMinutes&gt;240&lt;/IndexOptimizationIntervalMinutes&gt;
    &lt;/Raw&gt;
    &lt;Daily&gt;
      &lt;BaseTableName&gt;CMAemDaily&lt;/BaseTableName&gt;
      &lt;MaxTableRowCount&gt;10000000&lt;/MaxTableRowCount&gt;
      &lt;MaxDataAgeDays&gt;400&lt;/MaxDataAgeDays&gt;
      &lt;GroomingIntervalMinutes&gt;240&lt;/GroomingIntervalMinutes&gt;
      &lt;MaxRowsToGroom&gt;100000&lt;/MaxRowsToGroom&gt;
      &lt;IndexOptimizationIntervalMinutes&gt;240&lt;/IndexOptimizationIntervalMinutes&gt;
      &lt;AggregationStartDelayMinutes&gt;20&lt;/AggregationStartDelayMinutes&gt;
    &lt;/Daily&gt;
  &lt;/Aggregations&gt;
  &lt;RawInsertTableCount&gt;1&lt;/RawInsertTableCount&gt;
  &lt;DefaultAggregationIntervalCount&gt;28&lt;/DefaultAggregationIntervalCount&gt;
  &lt;BlockingMaintenanceDailyStartTime&gt;00:00&lt;/BlockingMaintenanceDailyStartTime&gt;
  &lt;BlockingMaintenanceDurationMinutes&gt;240&lt;/BlockingMaintenanceDurationMinutes&gt;
&lt;/Configuration&gt;
</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications"><Name>Top N Applications</Name><Description>This report shows the top N applications based on their crash count during specified time interval.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.Description"><Name>This report shows top N applications based on their crash count during the specified interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.DescriptionTitle"><Name>Click on plus sign to see a full description for this report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.GeneratedTimeLabel"><Name>Report
Time</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.Graph.XAxisLabel"><Name>Serial Number</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.Graph.YAxisLabel"><Name>Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.GraphTableLabel"><Name>Top N Applications Report Summary Table</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.GraphTitleLabel"><Name>Top N Applications Graph</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.NLabel"><Name>N</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.PageFormat"><Name>Page {0} of {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.StartEndTimeFormat"><Name>From {0} to {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.StartEndTimeLabel"><Name>Report Duration</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.TableHeaderLine1"><Name>Top N Applications</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.TableSubHeaderLine1"><Name>Top N Applications based on Crash Count during the specified Interval.</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.TimeZoneFormat"><Name>All dates and times are shown in {0}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="R.Title"><Name>Client Monitoring Top N Applications Report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.ApplicationNameLabel"><Name>Application Name</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.ApplicationVersionLabel"><Name>Application Version</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.AverageCrashCountPerApplicationLabel"><Name>Average Crash
Count Per Application</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.AverageDailyCrashCountLabel"><Name>Average Daily Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.AverageDailyCrashCountPerApplicationLabel"><Name>Average Daily Crash Count Per Application</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.CrashCountLabel"><Name>Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" SubElementID="RT.Column.SerialNumberLabel"><Name>S. No.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications"
SubElementID="RT.Column.TotalCrashCountLabel"><Name>Total Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth"><Name>Top N Applications Growth And Resolution</Name><Description>This report shows the top N applications based on their growth and resolution rate during specified time interval.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.CurrentStartEndTimeFormat"><Name>From {0} to {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.CurrentStartEndTimeLabel"><Name>Report Current Interval</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.Description"><Name>This report shows
top N applications based on their growth and resolution rate during the specified interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.DescriptionTitle"><Name>Click on plus sign to see a full description for this report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.GeneratedTimeLabel"><Name>Report Time</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.Graph.XAxisLabel"><Name>Serial Number</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.Graph.YAxisLabel"><Name>Crash Count Percentile Increase</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.GraphTitleLabel"><Name>Top N Applications Growth And Resolution Graph</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.NLabel"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.PageFormat"><Name>Page {0} of {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.PreviousStartEndTimeFormat"><Name>From {0} to {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.PreviousStartEndTimeLabel"><Name>Report Previous Interval</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.TableHeaderLine1"><Name>Top N Applications Growth And Resolution</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.TableSubHeaderLine1"><Name>Top N Applications based on Growth and Resolution rate during the specified Interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.TimeZoneFormat"><Name>All dates and times are shown in {0}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="R.Title"><Name>Client Monitoring Top N Applications Growth And Resolution Report</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.ApplicationNameLabel"><Name>Application Name</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.ApplicationVersionLabel"><Name>Application Version</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.CrashCountPercentileIncreaseLabel"><Name>Crash Count Percentile Increase</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.CurrentAverageDailyCrashCountLabel"><Name>Current Interval Average Daily Crash Count</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.CurrentCrashCountLabel"><Name>Current Interval Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.PreviousAverageDailyCrashCountLabel"><Name>Previous Interval Average Daily Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.PreviousCrashCountLabel"><Name>Previous Interval Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" SubElementID="RT.Column.SerialNumberLabel"><Name>S. No.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups"><Name>Top N Error
Groups</Name><Description>This report shows the top N error groups based on their crash count during specified time interval.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.Description"><Name>This report shows top N error groups based on their crash count during the specified interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.DescriptionTitle"><Name>Click on plus sign to see a full description for this report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.GeneratedTimeLabel"><Name>Report Time</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.Graph.XAxisLabel"><Name>Serial
Number</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.Graph.YAxisLabel"><Name>Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.GraphTableLabel"><Name>Top N Error Groups Report Summary Table</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.GraphTitleLabel"><Name>Top N Error Groups Graph</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.NLabel"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.PageFormat"><Name>Page {0} of {1}</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.StartEndTimeFormat"><Name>From {0} to {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.StartEndTimeLabel"><Name>Report Duration</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.TableHeaderLine1"><Name>Top N Error Groups</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.TableSubHeaderLine1"><Name>Top N Error Groups based on Crash Count during the specified Interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.TimeZoneFormat"><Name>All dates and times are shown in
{0}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="R.Title"><Name>Client Monitoring Top N Error Groups Report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.ApplicationNameLabel"><Name>Application Name</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.ApplicationVersionLabel"><Name>Application Version</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.AverageCrashCountPerErrorGroupLabel"><Name>Average Crash Count Per Error Group</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups"
SubElementID="RT.Column.AverageDailyCrashCountLabel"><Name>Average Daily Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.AverageDailyCrashCountPerErrorGroupLabel"><Name>Average Daily Crash Count Per Error Group</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.BucketTypeLabel"><Name>Bucket Type</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.CrashCountLabel"><Name>Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.ErrorGroupIdLabel"><Name>Error Group Id</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.EventTypeLabel"><Name>Event Type</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.MicrosoftResponseLabel"><Name>Microsoft Response</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.SerialNumberLabel"><Name>S. No.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" SubElementID="RT.Column.TotalCrashCountLabel"><Name>Total Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth"><Name>Top N Error Groups Growth And Resolution</Name><Description>This report shows the top N error groups based on
their growth and resolution rate during specified time interval.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.CurrentStartEndTimeFormat"><Name>From {0} to {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.CurrentStartEndTimeLabel"><Name>Report Current Interval</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.Description"><Name>This report shows top N error groups based on their growth and resolution rate during the specified interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.DescriptionTitle"><Name>Click on plus sign to see a full description for this
report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.GeneratedTimeLabel"><Name>Report Time</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.Graph.XAxisLabel"><Name>Serial Number</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.Graph.YAxisLabel"><Name>Crash Count Percentile Increase</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.GraphTitleLabel"><Name>Top N Error Groups Growth And Resolution Graph</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth"
SubElementID="R.NLabel"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.PageFormat"><Name>Page {0} of {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.PreviousStartEndTimeFormat"><Name>From {0} to {1}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.PreviousStartEndTimeLabel"><Name>Report Previous Interval</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.TableHeaderLine1"><Name>Top N Error Groups Growth And Resolution</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth"
SubElementID="R.TableSubHeaderLine1"><Name>Top N Error Groups based on Growth and Resolution rate during the specified Interval.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.TimeZoneFormat"><Name>All dates and times are shown in {0}</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="R.Title"><Name>Client Monitoring Top N Error Groups Growth And Resolution Report</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.ApplicationNameLabel"><Name>Application Name</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.ApplicationVersionLabel"><Name>Application
Version</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.CrashCountPercentileIncreaseLabel"><Name>Crash Count Percentile Increase</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.CurrentAverageDailyCrashCountLabel"><Name>Current Interval Average Daily Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.CurrentCrashCountLabel"><Name>Current Interval Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.ErrorGroupIdLabel"><Name>Error Group Id</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.PreviousAverageDailyCrashCountLabel"><Name>Previous Interval Average Daily Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.PreviousCrashCountLabel"><Name>Previous Interval Crash Count</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" SubElementID="RT.Column.SerialNumberLabel"><Name>S. No.</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareHealth"><Name>File Share Health Monitor</Name><Description>File Share Health Monitor checks for ACLs and available free space</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareHealth.AlertMessage"><Name>File
Share Health Monitor</Name><Description>{0}</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountAppThreshold"><Name>Error Count Monitor</Name><Description>This monitor checks for number of errors caused by this application.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountAppThreshold.AlertMessage"><Name>Error Count Monitor</Name><Description>The total number of crashes for the application have exceeded. The total number of crashes recorded was {0}. The threshold value for the monitor is {1}. </Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountWatsonBucketThreshold"><Name>Error Group Error Count Monitor</Name><Description>This monitor checks for number of errors caused by this error group.</Description></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountWatsonBucketThreshold.AlertMessage"><Name>Error Group Error Count Monitor</Name><Description>The number of crashes for the error group has exceeded the threshold. The total number of crashes recorded are {0}. The threshold value for the monitor is {1}.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketMachineCountPerfCollector"><Name>Machines Affected</Name><Description>Total Unique Machines affected per System Error Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketThreshold"><Name>System Error Group Monitor</Name><Description>This monitor indicates detection of a system error via this system error group.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketThreshold.AlertMessage"><Name>System Error Group Monitor</Name><Description>The
number of crashes for Machine {0} have exceeded the threshold. The total number of crashes recorded are {1}.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketTotalHitCountPerfCollector"><Name>Total Errors</Name><Description>Total Errors per System Error Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketUserCountPerfCollector"><Name>Users Affected</Name><Description>Total Unique Users affected per System Error Group</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemErrorGroupState.View"><Name>System Error Group View</Name><Description>System Error Group State View</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.TimedFileShareMonitor"><Name>File Share Monitor</Name><Description>Checks for ACLs on file share and available free
space</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.TimedFileShareMonitor" SubElementID="MinutesFrequency"><Name>Minutes Frequency</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedAppThreshold"><Name>Application Users Monitor</Name><Description>This monitor checks for all number of users' monitors associated with this application.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedAppThreshold.AlertMessage"><Name>Application Users Monitor</Name><Description>The total number of unique users experiencing crashes for this application have exceeded the threshold. The total number of unique users are {0}. The threshold value for the monitor is {1}.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedWatsonBucketThreshold"><Name>Error Group Users
Monitor</Name><Description>This monitor checks for number of users affected by this error group.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedWatsonBucketThreshold.AlertMessage"><Name>Error Group Users Monitor</Name><Description>The number of unique users experiencing crashes for the error group have exceeded the threshold. The total number of unique users impacted are {0}. The threshold value for the monitor is {1}.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ViewFolder.Root"><Name>Agentless Exception Monitoring</Name><Description>Folder containing all AEM related views.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.WatsonErrorGroupState.View"><Name>Error Group View</Name><Description>Error Group State View</Description></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Client Monitoring Views Library</Name><Description>Microsoft System Center Client Monitoring Views MP: This Management Pack contains primarily views for System Center AEM (Agentless Error Monitoring), CEIP features.</Description></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplications.ParameterPrompt.N"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.CurrentIntervalStartDate"><Name>Current Interval From</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.IntervalDurationInDays"><Name>Interval Duration In Days</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.N"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNApplicationsGrowth.ParameterPrompt.PreviousIntervalStartDate"><Name>Previous Interval From</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroups.ParameterPrompt.N"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.CurrentIntervalStartDate"><Name>Current Interval From</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.IntervalDurationInDays"><Name>Interval Duration In Days</Name></DisplayString><DisplayString
ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.N"><Name>N</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal.Report.TopNErrorGroupsGrowth.ParameterPrompt.PreviousIntervalStartDate"><Name>Previous Interval From</Name></DisplayString><DisplayString ElementID="Microsoft.SystemCenter.AEM.Group.DependOnCrashListener.AvailabilityRollup"><Name>AEM Group Depends on Crash Listener</Name><Description>This monitor rolls up healths from crash listener contained in the Group.</Description></DisplayString></DisplayStrings><KnowledgeArticles><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppMachineCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total machine counts per application.
This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppTotalHitCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total hit counts per application. This rule should not be overridden as it will have an adverse negative impact on
monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.AppUserCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total user counts per application. This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section
xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketMachineCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total machine counts per error group. This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not
applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketTotalHitCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total hit counts per error group. This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section
xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.BucketUserCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total user counts per error group. This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user
action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedAppThreshold" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor checks for total unique computers experiencing Application Errors for an Application across all Error groups belonging to that application. The number of unique computers experiencing Application Errors reported to AEM has exceeded threshold.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The number of errors reported to AEM within the sampling period has exceeded the threshold value for unique computers. This may be caused due to several factors depending on the Application that is crashing.</maml:para></maml:section><maml:section
xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available. The solution, if available, can provide additional information to resolve the problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by Application support or Application development team</maml:para><maml:para>A recent Service Pack or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such
software update</maml:para><maml:para>Further diagnosis of this problem requires review of the related Top N Applications and Top N Error Groups report to identify the top N Error groups to understand if this is the most critical Error group based on aggregated count.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.ComputersAffectedWatsonBucketThreshold" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor checks for total number of unique computers experiencing crashes for a error group. The number of unique computers experiencing Application Errors for an Error group as reported to AEM has exceeded threshold.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The number of errors reported to AEM within the sampling
period has exceeded the threshold value for unique computers. This may be caused due to several factors depending on the Application that is crashing. It could also be due to hardware problems on the computers reporting to AEM..</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available. The solution, if available, can provide additional information to resolve the problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by
Application support or Application development team</maml:para><maml:para>A recent Service Pack or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such software update</maml:para><maml:para>Further diagnosis of this problem requires review of the related Top N Error group report to identify the top N Error groups to understand if this is the most critical Error group based on aggregated count.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para><maml:ui>How does this report work?</maml:ui></maml:para><maml:para>The 'Top N Applications' report displays:</maml:para><maml:list><maml:listItem><maml:para>A chart showing the
Top N Applications based on their crash count.</maml:para></maml:listItem></maml:list><maml:para /><maml:list><maml:listItem><maml:para>Lastly, there is a table detailing the Top N Applications based on Crash count during the specified time interval:</maml:para></maml:listItem><maml:listItem><maml:para>Serial Number</maml:para></maml:listItem><maml:listItem><maml:para>Application Name</maml:para></maml:listItem><maml:listItem><maml:para>Application Version</maml:para></maml:listItem><maml:listItem><maml:para>Crash Count</maml:para></maml:listItem><maml:listItem><maml:para>Average daily crash count</maml:para></maml:listItem></maml:list></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para><maml:ui>How does this report
work?</maml:ui></maml:para><maml:para>The 'Top N Applications Growth And Resolution' report displays:</maml:para><maml:list><maml:listItem><maml:para>A chart showing the Top N Applications based on their growth percentile computed against the two specified time intervals.</maml:para></maml:listItem></maml:list><maml:para /><maml:list><maml:listItem><maml:para>Lastly, there is a table detailing the Top N Applications based on the crash count growth percentile from one specified time interval to another specified time interval:</maml:para></maml:listItem><maml:listItem><maml:para>Serial Number</maml:para></maml:listItem><maml:listItem><maml:para>Application Name</maml:para></maml:listItem><maml:listItem><maml:para>Application Version</maml:para></maml:listItem><maml:listItem><maml:para>Crash Count in latest time interval</maml:para></maml:listItem><maml:listItem><maml:para>Average daily crash count in latest time interval</maml:para></maml:listItem><maml:listItem><maml:para>Crash Count
in the first time interval</maml:para></maml:listItem><maml:listItem><maml:para>Average daily crash count in the first time interval</maml:para></maml:listItem><maml:listItem><maml:para>Crash count growth percentile from the first time interval to the latest time interval</maml:para></maml:listItem></maml:list></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroups" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para><maml:ui>How does this report work?</maml:ui></maml:para><maml:para>The 'Top N Error Groups' report displays:</maml:para><maml:list><maml:listItem><maml:para>A chart showing the Top N Error Groups based on their crash count.</maml:para></maml:listItem></maml:list><maml:para /><maml:list><maml:listItem><maml:para>Followed by a table that
shows</maml:para></maml:listItem><maml:listItem><maml:para>the total crash count,</maml:para></maml:listItem><maml:listItem><maml:para>the average crash count per errorgroup, and the</maml:para></maml:listItem><maml:listItem><maml:para>the average daily crash count per errorgroup.</maml:para></maml:listItem></maml:list><maml:para /><maml:list><maml:listItem><maml:para>Lastly, there is a table detailing the Top N Error Groups based on Crash count during the specified time interval:</maml:para></maml:listItem><maml:listItem><maml:para>Serial Number</maml:para></maml:listItem><maml:listItem><maml:para>Application Name</maml:para></maml:listItem><maml:listItem><maml:para>Application Version</maml:para></maml:listItem><maml:listItem><maml:para>Error Group Id</maml:para></maml:listItem><maml:listItem><maml:para>Bucket Type</maml:para></maml:listItem><maml:listItem><maml:para>Event Type</maml:para></maml:listItem><maml:listItem><maml:para>Crash
Count</maml:para></maml:listItem><maml:listItem><maml:para>Average daily crash count</maml:para></maml:listItem><maml:listItem><maml:para>Microsoft Response</maml:para></maml:listItem></maml:list></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNErrorGroupsGrowth" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para><maml:ui>How does this report work?</maml:ui></maml:para><maml:para>The 'Top N Error Groups Growth And Resolution' report displays:</maml:para><maml:list><maml:listItem><maml:para>A chart showing the Top N Error Groups based on their growth percentile computed against the two specified time intervals.</maml:para></maml:listItem></maml:list><maml:para /><maml:list><maml:listItem><maml:para>Lastly, there is a table detailing the Top N Error Groups based on the crash count growth percentile from
one specified time interval to another specified time interval:</maml:para></maml:listItem><maml:listItem><maml:para>Serial Number</maml:para></maml:listItem><maml:listItem><maml:para>Application Name</maml:para></maml:listItem><maml:listItem><maml:para>Application Version</maml:para></maml:listItem><maml:listItem><maml:para>Error Group Id</maml:para></maml:listItem><maml:listItem><maml:para>Crash Count in latest time interval</maml:para></maml:listItem><maml:listItem><maml:para>Average daily crash count in latest time interval</maml:para></maml:listItem><maml:listItem><maml:para>Crash Count in the first time interval</maml:para></maml:listItem><maml:listItem><maml:para>Average daily crash count in the first time interval</maml:para></maml:listItem><maml:listItem><maml:para>Crash count growth percentile from the first time interval to the latest time interval</maml:para></maml:listItem></maml:list></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle
ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareHealth" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor confirms Client Monitoring Action Account's RunAs account accessibility to the fileshare. It also checks for ACLs and available free space on the fileshare.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The failure can happen if Client Monitoring Action Account's RunAs account doesn't have access to the fileshare or ACLs on the fileshare are messed up or the fileshare doesn't have atleast 2GB of free space.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Check for the available free space on the drive hosting the fileshare for AEM. It should have atleast 2GB of free space to prevent
overflow. Ensure that the fileshare has appropriate ACLs for AEMUser and AEMAgent groups. Please refer to documentation for configuration details of the fileshare. If the Client Monitoring Action Account's RunAs account has fileshare accessibility issues, execute 'AEM: Fix Permissions' task against the CrashListener entity. </maml:para><maml:para>For details on ACL settings, please refer to product documentation.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountAppThreshold" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor checks for total number of Error reports for an Application across all Error groups belonging to that application. The number of Application Errors reported to AEM for the Application has exceeded threshold.</maml:para></maml:section><maml:section
xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The number of errors reported to AEM within the sampling period has exceeded the threshold value. This may be caused due to several factors depending on the Application that is crashing. It could also be due to hardware problems on the computers reporting to AEM.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available. The solution, if available, can provide additional information to resolve the problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed
out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by Application support or Application development team</maml:para><maml:para>A recent Service Pack or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such software update</maml:para><maml:para>Further diagnosis of this problem requires review of the related Top N Applications and Top N Error Groups report to identify the top N Error groups to understand if this is the most critical Error group based on aggregated count.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.HitCountWatsonBucketThreshold" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor
checks for total number of errors reported for a error group. The number of application errors reported to AEM for the error group has exceeded threshold.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The number of errors reported to AEM within the sampling period has exceeded the threshold value. This may be caused due to several factors depending on the Application for this group that is crashing. It could also be due to hardware problems on the computers reporting to AEM.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available. The solution, if available, can provide additional information to resolve the
problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by Application support or Application development team.</maml:para><maml:para>A recent Service Pack or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such software update was applied.</maml:para><maml:para>Further diagnosis of this problem requires review of the related 'Top N Error Groups' report to understand if this is the most critical error group based on aggregated count.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketThreshold"
Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor checks for System Errors. An alert is raised when a System Error is detected by the monitor.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The System Error reported to AEM within the sampling period. This may be caused due to several factors depending on the operating system that experienced this crash. It could also be due to hardware problems on the computer running the operating system.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available. The solution, if
available, can provide additional information to resolve the problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by Application support or Application development team</maml:para><maml:para>A recent Service Pack, driver update or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such software update</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketTotalHitCountPerfCollector" Visible="true"><MamlContent><maml:section
xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule is used internally for collecting perf data related to total machine counts per system error group. This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.SystemBucketUserCountPerfCollector" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This rule
is used internally for collecting perf data related to total user counts per system error group. This rule should not be overridden as it will have an adverse negative impact on monitoring.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This section is not applicable for this type of rule.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>There is no user action for this type of rule.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedAppThreshold" Visible="true"><MamlContent><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor checks for total users experiencing Application Errors for an Application across all Error groups belonging to that
application. The number of unique users experiencing Application Errors reported to AEM has exceeded threshold.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The number of errors reported to AEM within the sampling period has exceeded the threshold value for unique computers. This may be caused due to several factors depending on the Application that is crashing.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available. The solution, if available, can provide additional information to resolve the problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the
Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by Application support or Application development team</maml:para><maml:para>A recent Service Pack or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such software update</maml:para><maml:para>Further diagnosis of this problem requires review of the related Top N Application and Top N Error Groups report to identify the top N Error groups to understand if this is the most critical Error group based on aggregated count.</maml:para></maml:section></MamlContent></KnowledgeArticle><KnowledgeArticle ElementID="Microsoft.SystemCenter.CM.AEM.Views.Internal.UsersAffectedWatsonBucketThreshold" Visible="true"><MamlContent><maml:section
xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>This monitor checks for total number of unique users experiencing crashes for a error group. The number of unique users experiencing Application Errors reported for this group to AEM has exceeded threshold.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>The number of errors reported to AEM within the sampling period has exceeded the threshold value for unique number of Users. This may be caused due to several factors depending on the Application that is crashing.</maml:para></maml:section><maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolution</maml:title><maml:para>Additional steps that can be taken to diagnose the problem are as follows: </maml:para><maml:para>If transmission of Error reports has been turned on, verify if there is a Microsoft solution available.
The solution, if available, can provide additional information to resolve the problem.</maml:para><maml:para>Review the Error Events view to obtain link to the cab file from the crash in the Persisted Cabs folder. If this is an old Error report, the cab file may have been groomed out.</maml:para><maml:para>For those applications that may not get a Microsoft Solution URL response, the crash information would be required by Application support or Application development team</maml:para><maml:para>A recent Service Pack or Quick Fix (QFE) that has been applied to AEM Managed computers could lead to a sudden rise in number of error across these computers. Please check to see if any such software update</maml:para><maml:para>Further diagnosis of this problem requires review of the related Top N Error groups report to identify the top N Error groups to understand if this is the most critical Error group based on aggregated
count.</maml:para></maml:section></MamlContent></KnowledgeArticle></KnowledgeArticles></LanguagePack><LanguagePack ID="CHS" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>客户端监视视图库</Name><Description>Microsoft System Center 客户端监视视图 MP: 此管理包主要包含 System Center AEM (无代理错误监视)、CEIP 功能的视图。</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="CHT" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>用戶端監視檢視程式庫</Name><Description>Microsoft System Center 用戶端監視檢視管理組件: 此管理組件主要包含 System Center AEM (無代理程式錯誤監視)、CEIP 功能等的檢視。</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="CSY" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Knihovna Client Monitoring Views Library</Name><Description>Sada Microsoft System Center Client Monitoring
Views MP: Tato sada Management Pack obsahuje především zobrazení pro nástroj System Center AEM (Agentless Error Monitoring), funkce programu Zlepšování softwaru a služeb na základě zkušeností uživatelů.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="DEU" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Bibliothek für Clientüberwachungsansichten</Name><Description>Management Pack für Microsoft System Center-Clientüberwachungsansichten: Dieses Management Pack enthält primär Ansichten für System Center AEM (Ausnahmenüberwachung ohne Agents), CEIP-Funktionen.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="ESN" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Biblioteca de vistas de supervisión de cliente</Name><Description>Módulo de administración de vistas de supervisión de cliente
de Microsoft System Center: este módulo de administración contiene principalmente vistas de las características CEIP y AEM (supervisión de errores sin agente).</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="FRA" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Bibliothèque d'affichages d'analyses du client</Name><Description>Pack d'administration d'affichages d'analyses du client Microsoft System Center : ce pack d'administration contient principalement différents affichages pour les fonctions System Center AEM (analyse des erreurs sans agent) et CEIP.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="HUN" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Ügyfélfigyelési nézetek könyvtára</Name><Description>Microsoft System Center ügyfélfigyelő nézetek felügyeleti csomagja: Ez a
felügyeleti csomag elsősorban a System Center AEM (Agentless Error Monitoring – ügynök nélküli hibafigyelés) CEIP szolgáltatásokhoz tartalmaz nézeteket.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="ITA" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Libreria visualizzazioni di monitoraggio client</Name><Description>MP per le visualizzazioni di monitoraggio client di Microsoft System Center: questo Management Pack contiene prevalentemente le visualizzazioni per il monitoraggio errori senza agente (AEM) di System Center e le funzionalità di Analisi utilizzo software (CEIP).</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="JPN" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>クライアント監視ビュー ライブラリ</Name><Description>Microsoft System Center クライアント監視ビュー MP: この管理パックには、System Center AEM
(エージェント エラーの監視) および CEIP 機能のプライマリ ビューが含まれています。</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="KOR" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>클라이언트 모니터링 보기 라이브러리</Name><Description>Microsoft System Center 클라이언트 모니터링 보기 MP: 이 관리 팩에는 System Center AEM(에이전트 없이 오류 모니터링), CEIP 기능에 대한 기본 보기가 포함되어 있습니다.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="NLD" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Client Monitoring-weergavenbibliotheek</Name><Description>MP voor Microsoft System Center Client Monitoring-weergaven: dit management pack bevat voornamelijk weergaven voor System Center AEM (Agentless Error Monitoring; uitzonderingsbewaking zonder agent), CEIP-functies.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="PLK"
IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Biblioteka monitorowania widoków klienta</Name><Description>Widoki MP monitorowania klienta oprogramowania System Center firmy Microsoft: ten pakiet administracyjny zawiera głównie widoki dla funkcji System Center AEM (monitorowanie błędu bez agenta), programu CEIP.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="PTB" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Biblioteca de Exibições do Monitoramento de Cliente</Name><Description>MP de Exibições de Monitoramento do Cliente do Microsoft System Center: Este Pacote de Gerenciamento contém as exibições principais para AEM (Monitoramento de Erros sem Agente) do System Center e recursos do CEIP.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="PTG"
IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Biblioteca de Vistas de Monitorização de Clientes</Name><Description>MP de Vistas de Monitorização de Clientes do Microsoft System Center: Este Pacote de Gestão contém principalmente vistas das funcionalidades do PMEC da AEM (Monitorização de Erros Sem Agente) do System Center.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="RUS" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Библиотека представлений мониторинга клиента</Name><Description>Пакет управления представлениями мониторинга клиента Microsoft System Center: этот пакет управления содержит основные представления для функций отслеживания ошибок без агентов System Center и CEIP.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="SVE"
IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>Bibliotek för klientövervakningsvyer</Name><Description>Hanteringspaket för Microsoft System Centers klientövervakningsvyer: Det här hanteringspaketet innehåller i första hand vyer för System Center AEM (Agentless Error Monitoring, felövervakning utan agent) och CEIP-funktioner.</Description></DisplayString></DisplayStrings></LanguagePack><LanguagePack ID="TRK" IsDefault="false"><DisplayStrings><DisplayString ElementID="Microsoft.SystemCenter.ClientMonitoring.Views.Internal"><Name>İstemci İzleme Görünümleri Kitaplığı</Name><Description>Microsoft System Center İstemci İzleme Görünümleri MP'si: Bu Yönetim Paketi, System Center AEM (Aracısız Hata İzleme), CEIP özellikleri için birincil görünümleri içerir.</Description></DisplayString></DisplayStrings></LanguagePack></LanguagePacks><Resources><Assembly
ID="Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareValidationResult" Accessibility="Public" FileName="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareValidationResult" HasNullStream="true" QualifiedName="Microsoft.Mom.Modules.ClientMonitoring, Culture=&quot;&quot;, PublicKeyToken=&quot;31bf3856ad364e35&quot;, Version=&quot;7.0.5000.0&quot;" /><Assembly ID="Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.FileSharePA" Accessibility="Public" FileName="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileSharePA" HasNullStream="true" QualifiedName="Microsoft.Mom.Modules.ClientMonitoring, Culture=&quot;&quot;, PublicKeyToken=&quot;31bf3856ad364e35&quot;, Version=&quot;7.0.5000.0&quot;" /><Assembly ID="Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareTriggerPA" Accessibility="Public" FileName="Microsoft.SystemCenter.CM.AEM.Views.Internal.FileShareTriggerPA" HasNullStream="true" QualifiedName="Microsoft.Mom.Modules.ClientMonitoring, Culture=&quot;&quot;,
PublicKeyToken=&quot;31bf3856ad364e35&quot;, Version=&quot;7.0.5000.0&quot;" /><Assembly ID="Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.PerformanceDataWriter" Accessibility="Public" FileName="Microsoft.SystemCenter.CM.AEM.Views.Internal.PerformanceDataWriter" HasNullStream="true" QualifiedName="Microsoft.Mom.DatabaseWriteModules, Culture=&quot;&quot;, PublicKeyToken=&quot;31bf3856ad364e35&quot;, Version=&quot;7.0.5000.0&quot;" /><ReportResource ID="Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" Accessibility="Public" FileName="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplications" HasNullStream="false" MIMEType="application/octet-stream" /><ReportResource ID="Res.Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" Accessibility="Public" FileName="Microsoft.SystemCenter.CM.AEM.Views.Internal.DataWarehouse.Report.TopNApplicationsGrowth" HasNullStream="false"
